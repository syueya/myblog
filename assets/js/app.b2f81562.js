(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var o,a,s=e[0],l=e[1],c=e[2],u=0,p=[];u<s.length;u++)a=s[u],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&p.push(r[a][0]),r[a]=0;for(o in l)Object.prototype.hasOwnProperty.call(l,o)&&(n[o]=l[o]);for(d&&d(e);p.length;)p.shift()();return i.push.apply(i,c||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],o=!0,s=1;s<t.length;s++){var l=t[s];0!==r[l]&&(o=!1)}o&&(i.splice(e--,1),n=a(a.s=t[0]))}return n}var o={},r={8:0},i=[];function a(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.e=function(n){var e=[],t=r[n];if(0!==t)if(t)e.push(t[2]);else{var o=new Promise((function(e,o){t=r[n]=[e,o]}));e.push(t[2]=o);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(n){return a.p+"assets/js/"+({9:"vendors~docsearch"}[n]||n)+"."+{1:"8b0e5063",2:"c33d58d9",3:"5b36a0af",4:"72428ad7",5:"62100f51",6:"7d76d805",7:"70dac4de",9:"8b36eca5",10:"4d717a87",11:"160cfc09",12:"b180f153",13:"da561c87",14:"ef5d894a",15:"d53767d3",16:"49dfcf54",17:"dce5beb6",18:"6242c780",19:"3dfb1c02",20:"adea43c1",21:"2663c16a",22:"65ebdbb5",23:"4366116c",24:"7c6be6ba",25:"7fbea592",26:"f08ca227",27:"c7371944",28:"adb17e22",29:"c1523ea9",30:"5615da38",31:"214172c9",32:"924fe31e",33:"d340ccf1",34:"46aa40de",35:"ba72b28a",36:"5ac7c928",37:"91af5df7",38:"76994d15",39:"cd98c7e1",40:"d9bfc595",41:"ec20a651",42:"abcd6e89",43:"5e332e88",44:"a1ac9c7f",45:"549483d7",46:"8b6bc9c4",47:"1b5cfd4d",48:"1caf4d44",49:"ae067f32",50:"c48646f4",51:"d23a86c3",52:"5701cfed",53:"d64c21d6",54:"4a7b289b",55:"3162a45d",56:"b82d9986",57:"f8528488",58:"4960701c",59:"335421d9",60:"35e87e8e",61:"a23253ba",62:"5054a539",63:"c939473b",64:"01c89d31",65:"3894ffad",66:"0e863c61",67:"e545afae",68:"4dad4117",69:"1ac6a359",70:"a9a1c5cc",71:"53283495",72:"28fce3a2",73:"1d44c36b",74:"99394e89",75:"ca11426f",76:"cd72533d",77:"08a19592",78:"dfa7348e",79:"f46cc5f0",80:"12d7d7f3",81:"dee35b5f",82:"b27e2103",83:"10e06a70",84:"30d011b7",85:"cc851ebe",86:"51483c88",87:"2688dd7d",88:"dddf3ca5",89:"707159b2",90:"e7c4052a",91:"af403c8d",92:"4a1ebff0"}[n]+".js"}(n);var l=new Error;i=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=r[n];if(0!==t){if(t){var o=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+o+": "+i+")",l.name="ChunkLoadError",l.type=o,l.request=i,t[1](l)}r[n]=void 0}};var c=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(e)},a.m=n,a.c=o,a.d=function(n,e,t){a.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},a.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},a.t=function(n,e){if(1&e&&(n=a(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var o in n)a.d(t,o,function(e){return n[e]}.bind(null,o));return t},a.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return a.d(e,"a",e),e},a.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},a.p="/",a.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var d=l;i.push([107,0]),t()}([function(n,e,t){"use strict";var o=function(n){return n&&n.Math===Math&&n};n.exports=o("object"==typeof globalThis&&globalThis)||o("object"==typeof window&&window)||o("object"==typeof self&&self)||o("object"==typeof global&&global)||function(){return this}()||this||Function("return this")()},function(n,e,t){"use strict";var o=t(56),r=o.all;n.exports=o.IS_HTMLDDA?function(n){return"function"==typeof n||n===r}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var o=t(29),r=Function.prototype,i=r.call,a=o&&r.bind.bind(i,i);n.exports=o?a:function(n){return function(){return i.apply(n,arguments)}}},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";function o(n,e,t,o,r,i,a,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),o&&(c.functional=!0),i&&(c._scopeId="data-v-"+i),a?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),r&&r.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(a)},c._ssrRegister=l):r&&(l=s?function(){r.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:r),l)if(c.functional){c._injectStyles=l;var d=c.render;c.render=function(n,e){return l.call(e),d(n,e)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return o}))},function(n,e,t){"use strict";var o=t(3);n.exports=!o((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){"use strict";var o=t(2),r=t(33),i=o({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(r(n),e)}},function(n,e,t){var o=t(70),r="object"==typeof self&&self&&self.Object===Object&&self,i=o||r||Function("return this")();n.exports=i},function(n,e,t){"use strict";var o=t(1),r=t(56),i=r.all;n.exports=r.IS_HTMLDDA?function(n){return"object"==typeof n?null!==n:o(n)||n===i}:function(n){return"object"==typeof n?null!==n:o(n)}},function(n,e,t){var o=t(165),r=t(168);n.exports=function(n,e){var t=r(n,e);return o(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return o})),t.d(e,"b",(function(){return i})),t.d(e,"j",(function(){return a})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return d})),t.d(e,"c",(function(){return u})),t.d(e,"f",(function(){return p})),t.d(e,"l",(function(){return h})),t.d(e,"m",(function(){return m})),t.d(e,"d",(function(){return g})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return y})),t.d(e,"a",(function(){return k}));t(27);const o=/#.*$/,r=/\.(md|html)$/,i=/\/$/,a=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(o,"").replace(r,"")}function l(n){return a.test(n)}function c(n){return/^mailto:/.test(n)}function d(n){return/^tel:/.test(n)}function u(n){if(l(n))return n;if(!n)return"404";const e=n.match(o),t=e?e[0]:"",r=s(n);return i.test(r)?n:r+".html"+t}function p(n,e){const t=n.hash,r=function(n){const e=n&&n.match(o);if(e)return e[0]}(e);if(r&&t!==r)return!1;return s(n.path)===s(e)}function h(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){const o=n.charAt(0);if("/"===o)return n;if("?"===o||"#"===o)return e+n;const r=e.split("/");t&&r[r.length-1]||r.pop();const i=n.replace(/^\//,"").split("/");for(let n=0;n<i.length;n++){const e=i[n];".."===e?r.pop():"."!==e&&r.push(e)}""!==r[0]&&r.unshift("");return r.join("/")}(e,t));const o=s(e);for(let e=0;e<n.length;e++)if(s(n[e].regularPath)===o)return Object.assign({},n[e],{type:"page",path:u(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function m(n,e,t,o){const{pages:r,themeConfig:i}=t,a=o&&i.locales&&i.locales[o]||i;if("auto"===(n.frontmatter.sidebar||a.sidebar||i.sidebar))return f(n);const s=a.sidebar||i.sidebar;if(s){const{base:t,config:o}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const o in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(o)))return{base:o,config:e[o]};var t;return{}}(e,s);return"auto"===o?f(n):o?o.map(n=>function n(e,t,o,r=1){if("string"==typeof e)return h(t,e,o);if(Array.isArray(e))return Object.assign(h(t,e[0],o),{title:e[1]});{r>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const i=e.children||[];return 0===i.length&&e.path?Object.assign(h(t,e.path,o),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:i.map(e=>n(e,t,o,r+1)),collapsable:!1!==e.collapsable}}}(n,r,t)):[]}return[]}function f(n){const e=g(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function g(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function y(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function b(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function k(n,e){return b(e)-b(n)}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";var o=t(5),r=t(65),i=t(104),a=t(28),s=t(55),l=TypeError,c=Object.defineProperty,d=Object.getOwnPropertyDescriptor;e.f=o?i?function(n,e,t){if(a(n),e=s(e),a(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var o=d(n,e);o&&o.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:o.configurable,enumerable:"enumerable"in t?t.enumerable:o.enumerable,writable:!1})}return c(n,e,t)}:c:function(n,e,t){if(a(n),e=s(e),a(t),r)try{return c(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new l("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var o=t(16),r=t(150),i=t(151),a=o?o.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":a&&a in Object(n)?r(n):i(n)}},function(n,e,t){"use strict";var o=t(5),r=t(13),i=t(36);n.exports=o?function(n,e,t){return r.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var o=t(8).Symbol;n.exports=o},function(n,e,t){"use strict";var o=t(0),r=t(52).f,i=t(15),a=t(98),s=t(38),l=t(66),c=t(126);n.exports=function(n,e){var t,d,u,p,h,m=n.target,f=n.global,g=n.stat;if(t=f?o:g?o[m]||s(m,{}):(o[m]||{}).prototype)for(d in e){if(p=e[d],u=n.dontCallGetSet?(h=r(t,d))&&h.value:t[d],!c(f?d:m+(g?".":"#")+d,n.forced)&&void 0!==u){if(typeof p==typeof u)continue;l(p,u)}(n.sham||u&&u.sham)&&i(p,"sham",!0),a(t,d,p,n)}}},function(n,e,t){"use strict";var o=t(2),r=o({}.toString),i=o("".slice);n.exports=function(n){return i(r(n),8,-1)}},function(n,e,t){"use strict";var o=t(0),r=t(62),i=t(7),a=t(64),s=t(60),l=t(59),c=o.Symbol,d=r("wks"),u=l?c.for||c:c&&c.withoutSetter||a;n.exports=function(n){return i(d,n)||(d[n]=s&&i(c,n)?c[n]:u("Symbol."+n)),d[n]}},function(n,e,t){var o=t(155),r=t(156),i=t(157),a=t(158),s=t(159);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=r,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e,t){var o=t(72);n.exports=function(n,e){for(var t=n.length;t--;)if(o(n[t][0],e))return t;return-1}},function(n,e,t){var o=t(10)(Object,"create");n.exports=o},function(n,e,t){var o=t(177);n.exports=function(n,e){var t=n.__data__;return o(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var o=t(46);n.exports=function(n){if("string"==typeof n||o(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var o,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(o=function(){var n,e,t={version:"0.2.0"},o=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(o[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=r(n,o.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(o.barSelector),d=o.speed,u=o.easing;return l.offsetWidth,a((function(e){""===o.positionUsing&&(o.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var r;return(r="translate3d"===o.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===o.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,r}(n,d,u)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+d+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),d)}),d)):setTimeout(e,d)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),o.trickleSpeed)};return o.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*r(Math.random()*e,.1,.95)),e=r(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*o.trickleRate)},n=0,e=0,t.promise=function(o){return o&&"resolved"!==o.state()?(0===e&&t.start(),n++,e++,o.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=o.template;var r,a=e.querySelector(o.barSelector),l=n?"-100":i(t.status||0),d=document.querySelector(o.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),o.showSpinner||(r=e.querySelector(o.spinnerSelector))&&p(r),d!=document.body&&c(d,"nprogress-custom-parent"),d.appendChild(e),e},t.remove=function(){d(document.documentElement,"nprogress-busy"),d(document.querySelector(o.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&p(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var a=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var o,r=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);r--;)if((o=n[r]+i)in t)return o;return e}(t))}function o(n,e,o){e=t(e),n.style[e]=o}return function(n,e){var t,r,i=arguments;if(2==i.length)for(t in e)void 0!==(r=e[t])&&e.hasOwnProperty(t)&&o(n,t,r);else o(n,i[1],i[2])}}();function l(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=u(n),o=t+e;l(t,e)||(n.className=o.substring(1))}function d(n,e){var t,o=u(n);l(n,e)&&(t=o.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function p(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?o.call(e,t,e,n):o)||(n.exports=r)},function(n){n.exports=JSON.parse('{"name":"vuepress-plugin-comment","version":"0.7.3","description":"Comment plugin in vuepress, such as Gitalk, Valine...","main":"index.js","scripts":{"test":"echo \\"Error: no test specified\\" && exit 1"},"repository":{"type":"git","url":"git+ssh://git@github.com/dongyuanxin/vuepress-plugin-comment.git"},"keywords":["vuepress","comment","plugin","vue","gitalk","valine"],"author":"dongyuanxin","license":"MIT","bugs":{"url":"https://github.com/dongyuanxin/vuepress-plugin-comment/issues"},"homepage":"https://github.com/dongyuanxin/vuepress-plugin-comment#readme","dependencies":{"ejs":"^2.6.1","gitalk":"^1.5.0","gitalk-fix":"^1.5.2","i":"^0.3.6","npm":"^6.9.0","valine":"^1.3.9"}}')},function(n,e,t){"use strict";var o=t(17),r=t(33),i=t(34),a=t(130),s=t(132);o({target:"Array",proto:!0,arity:1,forced:t(3)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=r(this),t=i(e),o=arguments.length;s(t+o);for(var l=0;l<o;l++)e[t]=arguments[l],t++;return a(e,t),t}})},function(n,e,t){"use strict";var o=t(9),r=String,i=TypeError;n.exports=function(n){if(o(n))return n;throw new i(r(n)+" is not an object")}},function(n,e,t){"use strict";var o=t(3);n.exports=!o((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";var o=t(49),r=t(53);n.exports=function(n){return o(r(n))}},function(n,e,t){"use strict";var o=t(0),r=t(1),i=function(n){return r(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(o[n]):o[n]&&o[n][e]}},function(n,e,t){"use strict";var o=t(1),r=t(113),i=TypeError;n.exports=function(n){if(o(n))return n;throw new i(r(n)+" is not a function")}},function(n,e,t){"use strict";var o=t(53),r=Object;n.exports=function(n){return r(o(n))}},function(n,e,t){"use strict";var o=t(124);n.exports=function(n){return o(n.length)}},function(n,e,t){"use strict";var o=t(29),r=Function.prototype.call;n.exports=o?r.bind(r):function(){return r.apply(r,arguments)}},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var o=t(0),r=t(38),i=o["__core-js_shared__"]||r("__core-js_shared__",{});n.exports=i},function(n,e,t){"use strict";var o=t(0),r=Object.defineProperty;n.exports=function(n,e){try{r(o,n,{value:e,configurable:!0,writable:!0})}catch(t){o[n]=e}return e}},function(n,e,t){var o=t(149),r=t(12),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,l=o(function(){return arguments}())?o:function(n){return r(n)&&a.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var o=t(10)(t(8),"Map");n.exports=o},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var o=t(169),r=t(176),i=t(178),a=t(179),s=t(180);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=r,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var o=t(6),r=t(46),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;n.exports=function(n,e){if(o(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!r(n))||(a.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var o=t(14),r=t(12);n.exports=function(n){return"symbol"==typeof n||r(n)&&"[object Symbol]"==o(n)}},function(n,e){n.exports=function(n){return n}},function(n,e){var t=/^\s+|\s+$/g,o=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),d=Object.prototype.toString,u=Math.max,p=Math.min,h=function(){return c.Date.now()};function m(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function f(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==d.call(n)}(n))return NaN;if(m(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=m(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=r.test(n);return s||i.test(n)?a(n.slice(2),s?2:8):o.test(n)?NaN:+n}n.exports=function(n,e,t){var o,r,i,a,s,l,c=0,d=!1,g=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function y(e){var t=o,i=r;return o=r=void 0,c=e,a=n.apply(i,t)}function b(n){return c=n,s=setTimeout(w,e),d?y(n):a}function k(n){var t=n-l;return void 0===l||t>=e||t<0||g&&n-c>=i}function w(){var n=h();if(k(n))return _(n);s=setTimeout(w,function(n){var t=e-(n-l);return g?p(t,i-(n-c)):t}(n))}function _(n){return s=void 0,v&&o?y(n):(o=r=void 0,a)}function x(){var n=h(),t=k(n);if(o=arguments,r=this,l=n,t){if(void 0===s)return b(l);if(g)return s=setTimeout(w,e),y(l)}return void 0===s&&(s=setTimeout(w,e)),a}return e=f(e)||0,m(t)&&(d=!!t.leading,i=(g="maxWait"in t)?u(f(t.maxWait)||0,e):i,v="trailing"in t?!!t.trailing:v),x.cancel=function(){void 0!==s&&clearTimeout(s),c=0,o=l=r=s=void 0},x.flush=function(){return void 0===s?a:_(h())},x}},function(n,e,t){"use strict";var o=t(2),r=t(3),i=t(18),a=Object,s=o("".split);n.exports=r((function(){return!a("z").propertyIsEnumerable(0)}))?function(n){return"String"===i(n)?s(n,""):a(n)}:a},function(n,e,t){"use strict";n.exports={}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e,t){"use strict";var o=t(5),r=t(35),i=t(109),a=t(36),s=t(30),l=t(55),c=t(7),d=t(65),u=Object.getOwnPropertyDescriptor;e.f=o?u:function(n,e){if(n=s(n),e=l(e),d)try{return u(n,e)}catch(n){}if(c(n,e))return a(!r(i.f,n,e),n[e])}},function(n,e,t){"use strict";var o=t(54),r=TypeError;n.exports=function(n){if(o(n))throw new r("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var o=t(110),r=t(57);n.exports=function(n){var e=o(n,"string");return r(e)?e:e+""}},function(n,e,t){"use strict";var o="object"==typeof document&&document.all,r=void 0===o&&void 0!==o;n.exports={all:o,IS_HTMLDDA:r}},function(n,e,t){"use strict";var o=t(31),r=t(1),i=t(58),a=t(59),s=Object;n.exports=a?function(n){return"symbol"==typeof n}:function(n){var e=o("Symbol");return r(e)&&i(e.prototype,s(n))}},function(n,e,t){"use strict";var o=t(2);n.exports=o({}.isPrototypeOf)},function(n,e,t){"use strict";var o=t(60);n.exports=o&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var o=t(61),r=t(3),i=t(0).String;n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol("symbol detection");return!i(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&o&&o<41}))},function(n,e,t){"use strict";var o,r,i=t(0),a=t(111),s=i.process,l=i.Deno,c=s&&s.versions||l&&l.version,d=c&&c.v8;d&&(r=(o=d.split("."))[0]>0&&o[0]<4?1:+(o[0]+o[1])),!r&&a&&(!(o=a.match(/Edge\/(\d+)/))||o[1]>=74)&&(o=a.match(/Chrome\/(\d+)/))&&(r=+o[1]),n.exports=r},function(n,e,t){"use strict";var o=t(63),r=t(37);(n.exports=function(n,e){return r[n]||(r[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.33.1",mode:o?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.33.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var o=t(2),r=0,i=Math.random(),a=o(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+a(++r+i,36)}},function(n,e,t){"use strict";var o=t(5),r=t(3),i=t(103);n.exports=!o&&!r((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var o=t(7),r=t(119),i=t(52),a=t(13);n.exports=function(n,e,t){for(var s=r(e),l=a.f,c=i.f,d=0;d<s.length;d++){var u=s[d];o(n,u)||t&&o(t,u)||l(n,u,c(e,u))}}},function(n,e,t){"use strict";var o=t(123);n.exports=function(n){var e=+n;return e!=e||0===e?0:o(e)}},function(n,e,t){"use strict";var o=t(136),r=t(28),i=t(137);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=o(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,o){return r(t),i(o),e?n(t,o):t.__proto__=o,t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,o=e.length,r=n.length;++t<o;)n[r+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var o=t(20),r=t(160),i=t(161),a=t(162),s=t(163),l=t(164);function c(n){var e=this.__data__=new o(n);this.size=e.size}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=a,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var o=t(14),r=t(41);n.exports=function(n){if(!r(n))return!1;var e=o(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var o=t(181),r=t(12);n.exports=function n(e,t,i,a,s){return e===t||(null==e||null==t||!r(e)&&!r(t)?e!=e&&t!=t:o(e,t,i,a,n,s))}},function(n,e,t){var o=t(77),r=t(184),i=t(78);n.exports=function(n,e,t,a,s,l){var c=1&t,d=n.length,u=e.length;if(d!=u&&!(c&&u>d))return!1;var p=l.get(n),h=l.get(e);if(p&&h)return p==e&&h==n;var m=-1,f=!0,g=2&t?new o:void 0;for(l.set(n,e),l.set(e,n);++m<d;){var v=n[m],y=e[m];if(a)var b=c?a(y,v,m,e,n,l):a(v,y,m,n,e,l);if(void 0!==b){if(b)continue;f=!1;break}if(g){if(!r(e,(function(n,e){if(!i(g,e)&&(v===n||s(v,n,t,a,l)))return g.push(e)}))){f=!1;break}}else if(v!==y&&!s(v,y,t,a,l)){f=!1;break}}return l.delete(n),l.delete(e),f}},function(n,e,t){var o=t(42),r=t(182),i=t(183);function a(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new o;++e<t;)this.add(n[e])}a.prototype.add=a.prototype.push=r,a.prototype.has=i,n.exports=a},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var o=t(194),r=t(200),i=t(83);n.exports=function(n){return i(n)?o(n):r(n)}},function(n,e,t){(function(n){var o=t(8),r=t(196),i=e&&!e.nodeType&&e,a=i&&"object"==typeof n&&n&&!n.nodeType&&n,s=a&&a.exports===i?o.Buffer:void 0,l=(s?s.isBuffer:void 0)||r;n.exports=l}).call(this,t(51)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var o=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==o||"symbol"!=o&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var o=t(197),r=t(198),i=t(199),a=i&&i.isTypedArray,s=a?r(a):o;n.exports=s},function(n,e,t){var o=t(73),r=t(44);n.exports=function(n){return null!=n&&r(n.length)&&!o(n)}},function(n,e,t){var o=t(10)(t(8),"Set");n.exports=o},function(n,e,t){var o=t(41);n.exports=function(n){return n==n&&!o(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var o=t(88),r=t(24);n.exports=function(n,e){for(var t=0,i=(e=o(e,n)).length;null!=n&&t<i;)n=n[r(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var o=t(6),r=t(45),i=t(211),a=t(214);n.exports=function(n,e){return o(n)?n:r(n,e)?[n]:i(a(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var o=t(147),r=t(152),i=t(223),a=t(231),s=t(240),l=t(100),c=i((function(n){var e=l(n);return s(e)&&(e=void 0),a(o(n,1,s,!0),r(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var o=/["'&<>]/;n.exports=function(n){var e,t=""+n,r=o.exec(t);if(!r)return t;var i="",a=0,s=0;for(a=r.index;a<t.length;a++){switch(t.charCodeAt(a)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==a&&(i+=t.substring(s,a)),s=a+1,i+=e}return s!==a?i+t.substring(s,a):i}},function(n,e,t){"use strict";
/**
 * @file Embedded JavaScript templating engine. {@link http://ejs.co}
 * @author Matthew Eernisse <mde@fleegix.org>
 * @author Tiancheng "Timothy" Gu <timothygu99@gmail.com>
 * @project EJS
 * @license {@link http://www.apache.org/licenses/LICENSE-2.0 Apache License, Version 2.0}
 */var o=t(249),r=t(250),i=t(251),a=!1,s=t(252).version,l=["delimiter","scope","context","debug","compileDebug","client","_with","rmWhitespace","strict","filename","async"],c=l.concat("cache"),d=/^\uFEFF/;function u(n,t){var r,i,a=t.views,s=/^[A-Za-z]+:\\|^\//.exec(n);if(s&&s.length)r=e.resolveInclude(n.replace(/^\/*/,""),t.root||"/",!0);else if(t.filename&&(i=e.resolveInclude(n,t.filename),o.existsSync(i)&&(r=i)),r||Array.isArray(a)&&a.some((function(t){return i=e.resolveInclude(n,t,!0),o.existsSync(i)}))&&(r=i),!r)throw new Error('Could not find the include file "'+t.escapeFunction(n)+'"');return r}function p(n,t){var o,r=n.filename,i=arguments.length>1;if(n.cache){if(!r)throw new Error("cache option requires a filename");if(o=e.cache.get(r))return o;i||(t=m(r).toString().replace(d,""))}else if(!i){if(!r)throw new Error("Internal EJS error: no file name or template provided");t=m(r).toString().replace(d,"")}return o=e.compile(t,n),n.cache&&e.cache.set(r,o),o}function h(n,t,o){var r;if(!o){if("function"==typeof e.promiseImpl)return new e.promiseImpl((function(e,o){try{e(r=p(n)(t))}catch(n){o(n)}}));throw new Error("Please provide a callback function")}try{r=p(n)(t)}catch(n){return o(n)}o(null,r)}function m(n){return e.fileLoader(n)}function f(n,e,t,o,r){var i=e.split("\n"),a=Math.max(o-3,0),s=Math.min(i.length,o+3),l=r(t),c=i.slice(a,s).map((function(n,e){var t=e+a+1;return(t==o?" >> ":"    ")+t+"| "+n})).join("\n");throw n.path=l,n.message=(l||"ejs")+":"+o+"\n"+c+"\n\n"+n.message,n}function g(n){return n.replace(/;(\s*$)/,"$1")}function v(n,t){t=t||{};var o={};this.templateText=n,this.mode=null,this.truncate=!1,this.currentLine=1,this.source="",this.dependencies=[],o.client=t.client||!1,o.escapeFunction=t.escape||t.escapeFunction||i.escapeXML,o.compileDebug=!1!==t.compileDebug,o.debug=!!t.debug,o.filename=t.filename,o.openDelimiter=t.openDelimiter||e.openDelimiter||"<",o.closeDelimiter=t.closeDelimiter||e.closeDelimiter||">",o.delimiter=t.delimiter||e.delimiter||"%",o.strict=t.strict||!1,o.context=t.context,o.cache=t.cache||!1,o.rmWhitespace=t.rmWhitespace,o.root=t.root,o.outputFunctionName=t.outputFunctionName,o.localsName=t.localsName||e.localsName||"locals",o.views=t.views,o.async=t.async,o.destructuredLocals=t.destructuredLocals,o.legacyInclude=void 0===t.legacyInclude||!!t.legacyInclude,o.strict?o._with=!1:o._with=void 0===t._with||t._with,this.opts=o,this.regex=this.createRegex()}e.cache=i.cache,e.fileLoader=o.readFileSync,e.localsName="locals",e.promiseImpl=new Function("return this;")().Promise,e.resolveInclude=function(n,e,t){var o=r.dirname,i=r.extname,a=(0,r.resolve)(t?e:o(e),n);return i(n)||(a+=".ejs"),a},e.compile=function(n,e){return e&&e.scope&&(a||(console.warn("`scope` option is deprecated and will be removed in EJS 3"),a=!0),e.context||(e.context=e.scope),delete e.scope),new v(n,e).compile()},e.render=function(n,e,t){var o=e||{},r=t||{};return 2==arguments.length&&i.shallowCopyFromList(r,o,l),p(r,n)(o)},e.renderFile=function(){var n,e,t,o=Array.prototype.slice.call(arguments),r=o.shift(),a={filename:r};return"function"==typeof arguments[arguments.length-1]&&(n=o.pop()),o.length?(e=o.shift(),o.length?i.shallowCopy(a,o.pop()):(e.settings&&(e.settings.views&&(a.views=e.settings.views),e.settings["view cache"]&&(a.cache=!0),(t=e.settings["view options"])&&i.shallowCopy(a,t)),i.shallowCopyFromList(a,e,c)),a.filename=r):e={},h(a,e,n)},e.Template=v,e.clearCache=function(){e.cache.reset()},v.modes={EVAL:"eval",ESCAPED:"escaped",RAW:"raw",COMMENT:"comment",LITERAL:"literal"},v.prototype={createRegex:function(){var n="(<%%|%%>|<%=|<%-|<%_|<%#|<%|%>|-%>|_%>)",e=i.escapeRegExpChars(this.opts.delimiter),t=i.escapeRegExpChars(this.opts.openDelimiter),o=i.escapeRegExpChars(this.opts.closeDelimiter);return n=n.replace(/%/g,e).replace(/</g,t).replace(/>/g,o),new RegExp(n)},compile:function(){var n,e,t,o=this.opts,a="",s="",l=o.escapeFunction;if(!this.source){if(this.generateSource(),a+='  var __output = "";\n  function __append(s) { if (s !== undefined && s !== null) __output += s }\n',o.outputFunctionName&&(a+="  var "+o.outputFunctionName+" = __append;\n"),o.destructuredLocals&&o.destructuredLocals.length){for(var c="  var __locals = ("+o.localsName+" || {}),\n",d=0;d<o.destructuredLocals.length;d++){var h=o.destructuredLocals[d];d>0&&(c+=",\n  "),c+=h+" = __locals."+h}a+=c+";\n"}!1!==o._with&&(a+="  with ("+o.localsName+" || {}) {\n",s+="  }\n"),s+="  return __output;\n",this.source=a+this.source+s}n=o.compileDebug?"var __line = 1\n  , __lines = "+JSON.stringify(this.templateText)+"\n  , __filename = "+(o.filename?JSON.stringify(o.filename):"undefined")+";\ntry {\n"+this.source+"} catch (e) {\n  rethrow(e, __lines, __filename, __line, escapeFn);\n}\n":this.source,o.client&&(n="escapeFn = escapeFn || "+l.toString()+";\n"+n,o.compileDebug&&(n="rethrow = rethrow || "+f.toString()+";\n"+n)),o.strict&&(n='"use strict";\n'+n),o.debug&&console.log(n),o.compileDebug&&o.filename&&(n=n+"\n//# sourceURL="+o.filename+"\n");try{if(o.async)try{t=new Function("return (async function(){}).constructor;")()}catch(n){throw n instanceof SyntaxError?new Error("This environment does not support async/await"):n}else t=Function;e=new t(o.localsName+", escapeFn, include, rethrow",n)}catch(n){throw n instanceof SyntaxError&&(o.filename&&(n.message+=" in "+o.filename),n.message+=" while compiling ejs\n\n",n.message+="If the above error is not helpful, you may want to try EJS-Lint:\n",n.message+="https://github.com/RyanZim/EJS-Lint",o.async||(n.message+="\n",n.message+="Or, if you meant to create an async function, pass `async: true` as an option.")),n}var m=o.client?e:function(n){return e.apply(o.context,[n||{},l,function(e,t){var r=i.shallowCopy({},n);return t&&(r=i.shallowCopy(r,t)),function(n,e){var t=i.shallowCopy({},e);return t.filename=u(n,t),p(t)}(e,o)(r)},f])};if(m.dependencies=this.dependencies,o.filename&&"function"==typeof Object.defineProperty){var g=o.filename,v=r.basename(g,r.extname(g));try{Object.defineProperty(m,"name",{value:v,writable:!1,enumerable:!1,configurable:!0})}catch(n){}}return m},generateSource:function(){var n=this.opts;n.rmWhitespace&&(this.templateText=this.templateText.replace(/[\r\n]+/g,"\n").replace(/^\s+|\s+$/gm,"")),this.templateText=this.templateText.replace(/[ \t]*<%_/gm,"<%_").replace(/_%>[ \t]*/gm,"_%>");var t=this,o=this.parseTemplateText(),r=this.opts.delimiter,a=this.opts.openDelimiter,s=this.opts.closeDelimiter;o&&o.length&&o.forEach((function(l,c){var p,h,f,g,y,b;if(0===l.indexOf(a+r)&&0!==l.indexOf(a+r+r)&&(h=o[c+2])!=r+s&&h!="-"+r+s&&h!="_"+r+s)throw new Error('Could not find matching close tag for "'+l+'".');if(n.legacyInclude&&(f=l.match(/^\s*include\s+(\S+)/))&&(p=o[c-1])&&(p==a+r||p==a+r+"-"||p==a+r+"_"))return g=i.shallowCopy({},t.opts),y=function(n,e){var t,o,r=i.shallowCopy({},e);o=m(t=u(n,r)).toString().replace(d,""),r.filename=t;var a=new v(o,r);return a.generateSource(),{source:a.source,filename:t,template:o}}(f[1],g),b=t.opts.compileDebug?"    ; (function(){\n      var __line = 1\n      , __lines = "+JSON.stringify(y.template)+"\n      , __filename = "+JSON.stringify(y.filename)+";\n      try {\n"+y.source+"      } catch (e) {\n        rethrow(e, __lines, __filename, __line, escapeFn);\n      }\n    ; }).call(this)\n":"    ; (function(){\n"+y.source+"    ; }).call(this)\n",t.source+=b,void t.dependencies.push(e.resolveInclude(f[1],g.filename));t.scanLine(l)}))},parseTemplateText:function(){for(var n,e=this.templateText,t=this.regex,o=t.exec(e),r=[];o;)0!==(n=o.index)&&(r.push(e.substring(0,n)),e=e.slice(n)),r.push(o[0]),e=e.slice(o[0].length),o=t.exec(e);return e&&r.push(e),r},_addOutput:function(n){if(this.truncate&&(n=n.replace(/^(?:\r\n|\r|\n)/,""),this.truncate=!1),!n)return n;n=(n=(n=(n=n.replace(/\\/g,"\\\\")).replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/"/g,'\\"'),this.source+='    ; __append("'+n+'")\n'},scanLine:function(n){var e,t=this.opts.delimiter,o=this.opts.openDelimiter,r=this.opts.closeDelimiter;switch(e=n.split("\n").length-1,n){case o+t:case o+t+"_":this.mode=v.modes.EVAL;break;case o+t+"=":this.mode=v.modes.ESCAPED;break;case o+t+"-":this.mode=v.modes.RAW;break;case o+t+"#":this.mode=v.modes.COMMENT;break;case o+t+t:this.mode=v.modes.LITERAL,this.source+='    ; __append("'+n.replace(o+t+t,o+t)+'")\n';break;case t+t+r:this.mode=v.modes.LITERAL,this.source+='    ; __append("'+n.replace(t+t+r,t+r)+'")\n';break;case t+r:case"-"+t+r:case"_"+t+r:this.mode==v.modes.LITERAL&&this._addOutput(n),this.mode=null,this.truncate=0===n.indexOf("-")||0===n.indexOf("_");break;default:if(this.mode){switch(this.mode){case v.modes.EVAL:case v.modes.ESCAPED:case v.modes.RAW:n.lastIndexOf("//")>n.lastIndexOf("\n")&&(n+="\n")}switch(this.mode){case v.modes.EVAL:this.source+="    ; "+n+"\n";break;case v.modes.ESCAPED:this.source+="    ; __append(escapeFn("+g(n)+"))\n";break;case v.modes.RAW:this.source+="    ; __append("+g(n)+")\n";break;case v.modes.COMMENT:break;case v.modes.LITERAL:this._addOutput(n)}}else this._addOutput(n)}this.opts.compileDebug&&e&&(this.currentLine+=e,this.source+="    ; __line = "+this.currentLine+"\n")}},e.escapeXML=i.escapeXML,e.__express=e.renderFile,e.VERSION=s,e.name="ejs","undefined"!=typeof window&&(window.ejs=e)},function(n,e,t){"use strict";t.r(e);var o={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},r=(t(243),t(4)),i=Object(r.a)(o,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);e.default=i.exports},function(n,e,t){"use strict";t.r(e);var o={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},r=(t(244),t(4)),i=Object(r.a)(o,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,o){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":o===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(o)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"2f5f1757",null);e.default=i.exports},function(n,e,t){"use strict";var o=t(1),r=t(13),i=t(101),a=t(38);n.exports=function(n,e,t,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:e;if(o(t)&&i(t,c,s),s.global)l?n[e]=t:a(e,t);else{try{s.unsafe?n[e]&&(l=!0):delete n[e]}catch(n){}l?n[e]=t:r.f(n,e,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return n}},function(n,e,t){"use strict";var o=t(141),r=String;n.exports=function(n){if("Symbol"===o(n))throw new TypeError("Cannot convert a Symbol value to a string");return r(n)}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){"use strict";var o=t(2),r=t(3),i=t(1),a=t(7),s=t(5),l=t(115).CONFIGURABLE,c=t(116),d=t(117),u=d.enforce,p=d.get,h=String,m=Object.defineProperty,f=o("".slice),g=o("".replace),v=o([].join),y=s&&!r((function(){return 8!==m((function(){}),"length",{value:8}).length})),b=String(String).split("String"),k=n.exports=function(n,e,t){"Symbol("===f(h(e),0,7)&&(e="["+g(h(e),/^Symbol\(([^)]*)\)/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!a(n,"name")||l&&n.name!==e)&&(s?m(n,"name",{value:e,configurable:!0}):n.name=e),y&&t&&a(t,"arity")&&n.length!==t.arity&&m(n,"length",{value:t.arity});try{t&&a(t,"constructor")&&t.constructor?s&&m(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var o=u(n);return a(o,"source")||(o.source=v(b,"string"==typeof e?e:"")),n};Function.prototype.toString=k((function(){return i(this)&&p(this).source||c(this)}),"toString")},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var o=t(0),r=t(9),i=o.document,a=r(i)&&r(i.createElement);n.exports=function(n){return a?i.createElement(n):{}}},function(n,e,t){"use strict";var o=t(5),r=t(3);n.exports=o&&r((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var o=t(62),r=t(64),i=o("keys");n.exports=function(n){return i[n]||(i[n]=r(n))}},function(n,e,t){"use strict";var o=t(2),r=t(7),i=t(30),a=t(121).indexOf,s=t(50),l=o([].push);n.exports=function(n,e){var t,o=i(n),c=0,d=[];for(t in o)!r(s,t)&&r(o,t)&&l(d,t);for(;e.length>c;)r(o,t=e[c++])&&(~a(d,t)||l(d,t));return d}},function(n,e,t){n.exports=t(255)},function(n,e,t){"use strict";var o=t(17),r=t(127).left,i=t(128),a=t(61);o({target:"Array",proto:!0,forced:!t(129)&&a>79&&a<83||!i("reduce")},{reduce:function(n){var e=arguments.length;return r(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var o={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,i=r&&!o.call({1:2},1);e.f=i?function(n){var e=r(this,n);return!!e&&e.enumerable}:o},function(n,e,t){"use strict";var o=t(35),r=t(9),i=t(57),a=t(112),s=t(114),l=t(19),c=TypeError,d=l("toPrimitive");n.exports=function(n,e){if(!r(n)||i(n))return n;var t,l=a(n,d);if(l){if(void 0===e&&(e="default"),t=o(l,n,e),!r(t)||i(t))return t;throw new c("Can't convert object to primitive value")}return void 0===e&&(e="number"),s(n,e)}},function(n,e,t){"use strict";n.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(n,e,t){"use strict";var o=t(32),r=t(54);n.exports=function(n,e){var t=n[e];return r(t)?void 0:o(t)}},function(n,e,t){"use strict";var o=String;n.exports=function(n){try{return o(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var o=t(35),r=t(1),i=t(9),a=TypeError;n.exports=function(n,e){var t,s;if("string"===e&&r(t=n.toString)&&!i(s=o(t,n)))return s;if(r(t=n.valueOf)&&!i(s=o(t,n)))return s;if("string"!==e&&r(t=n.toString)&&!i(s=o(t,n)))return s;throw new a("Can't convert object to primitive value")}},function(n,e,t){"use strict";var o=t(5),r=t(7),i=Function.prototype,a=o&&Object.getOwnPropertyDescriptor,s=r(i,"name"),l=s&&"something"===function(){}.name,c=s&&(!o||o&&a(i,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){"use strict";var o=t(2),r=t(1),i=t(37),a=o(Function.toString);r(i.inspectSource)||(i.inspectSource=function(n){return a(n)}),n.exports=i.inspectSource},function(n,e,t){"use strict";var o,r,i,a=t(118),s=t(0),l=t(9),c=t(15),d=t(7),u=t(37),p=t(105),h=t(50),m=s.TypeError,f=s.WeakMap;if(a||u.state){var g=u.state||(u.state=new f);g.get=g.get,g.has=g.has,g.set=g.set,o=function(n,e){if(g.has(n))throw new m("Object already initialized");return e.facade=n,g.set(n,e),e},r=function(n){return g.get(n)||{}},i=function(n){return g.has(n)}}else{var v=p("state");h[v]=!0,o=function(n,e){if(d(n,v))throw new m("Object already initialized");return e.facade=n,c(n,v,e),e},r=function(n){return d(n,v)?n[v]:{}},i=function(n){return d(n,v)}}n.exports={set:o,get:r,has:i,enforce:function(n){return i(n)?r(n):o(n,{})},getterFor:function(n){return function(e){var t;if(!l(e)||(t=r(e)).type!==n)throw new m("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var o=t(0),r=t(1),i=o.WeakMap;n.exports=r(i)&&/native code/.test(String(i))},function(n,e,t){"use strict";var o=t(31),r=t(2),i=t(120),a=t(125),s=t(28),l=r([].concat);n.exports=o("Reflect","ownKeys")||function(n){var e=i.f(s(n)),t=a.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var o=t(106),r=t(102).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return o(n,r)}},function(n,e,t){"use strict";var o=t(30),r=t(122),i=t(34),a=function(n){return function(e,t,a){var s,l=o(e),c=i(l),d=r(a,c);if(n&&t!=t){for(;c>d;)if((s=l[d++])!=s)return!0}else for(;c>d;d++)if((n||d in l)&&l[d]===t)return n||d||0;return!n&&-1}};n.exports={includes:a(!0),indexOf:a(!1)}},function(n,e,t){"use strict";var o=t(67),r=Math.max,i=Math.min;n.exports=function(n,e){var t=o(n);return t<0?r(t+e,0):i(t,e)}},function(n,e,t){"use strict";var o=Math.ceil,r=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?r:o)(e)}},function(n,e,t){"use strict";var o=t(67),r=Math.min;n.exports=function(n){return n>0?r(o(n),9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var o=t(3),r=t(1),i=/#|\.prototype\./,a=function(n,e){var t=l[s(n)];return t===d||t!==c&&(r(e)?o(e):!!e)},s=a.normalize=function(n){return String(n).replace(i,".").toLowerCase()},l=a.data={},c=a.NATIVE="N",d=a.POLYFILL="P";n.exports=a},function(n,e,t){"use strict";var o=t(32),r=t(33),i=t(49),a=t(34),s=TypeError,l=function(n){return function(e,t,l,c){o(t);var d=r(e),u=i(d),p=a(d),h=n?p-1:0,m=n?-1:1;if(l<2)for(;;){if(h in u){c=u[h],h+=m;break}if(h+=m,n?h<0:p<=h)throw new s("Reduce of empty array with no initial value")}for(;n?h>=0:p>h;h+=m)h in u&&(c=t(c,u[h],h,d));return c}};n.exports={left:l(!1),right:l(!0)}},function(n,e,t){"use strict";var o=t(3);n.exports=function(n,e){var t=[][n];return!!t&&o((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var o=t(0),r=t(18);n.exports="process"===r(o.process)},function(n,e,t){"use strict";var o=t(5),r=t(131),i=TypeError,a=Object.getOwnPropertyDescriptor,s=o&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=s?function(n,e){if(r(n)&&!a(n,"length").writable)throw new i("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var o=t(18);n.exports=Array.isArray||function(n){return"Array"===o(n)}},function(n,e,t){"use strict";var o=TypeError;n.exports=function(n){if(n>9007199254740991)throw o("Maximum allowed index exceeded");return n}},function(n,e,t){"use strict";var o=t(17),r=t(0),i=t(134),a=t(135),s=r.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=a(n,e,l),o({global:!0,constructor:!0,arity:1,forced:l},t)},d=function(n,e){if(s&&s[n]){var t={};t[n]=a("WebAssembly."+n,e,l),o({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},t)}};c("Error",(function(n){return function(e){return i(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return i(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return i(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return i(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return i(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return i(n,this,arguments)}})),c("URIError",(function(n){return function(e){return i(n,this,arguments)}})),d("CompileError",(function(n){return function(e){return i(n,this,arguments)}})),d("LinkError",(function(n){return function(e){return i(n,this,arguments)}})),d("RuntimeError",(function(n){return function(e){return i(n,this,arguments)}}))},function(n,e,t){"use strict";var o=t(29),r=Function.prototype,i=r.apply,a=r.call;n.exports="object"==typeof Reflect&&Reflect.apply||(o?a.bind(i):function(){return a.apply(i,arguments)})},function(n,e,t){"use strict";var o=t(31),r=t(7),i=t(15),a=t(58),s=t(68),l=t(66),c=t(138),d=t(139),u=t(140),p=t(143),h=t(144),m=t(5),f=t(63);n.exports=function(n,e,t,g){var v=g?2:1,y=n.split("."),b=y[y.length-1],k=o.apply(null,y);if(k){var w=k.prototype;if(!f&&r(w,"cause")&&delete w.cause,!t)return k;var _=o("Error"),x=e((function(n,e){var t=u(g?e:n,void 0),o=g?new k(n):new k;return void 0!==t&&i(o,"message",t),h(o,x,o.stack,2),this&&a(w,this)&&d(o,this,x),arguments.length>v&&p(o,arguments[v]),o}));if(x.prototype=w,"Error"!==b?s?s(x,_):l(x,_,{name:!0}):m&&"stackTraceLimit"in k&&(c(x,k,"stackTraceLimit"),c(x,k,"prepareStackTrace")),l(x,k),!f)try{w.name!==b&&i(w,"name",b),w.constructor=x}catch(n){}return x}}},function(n,e,t){"use strict";var o=t(2),r=t(32);n.exports=function(n,e,t){try{return o(r(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var o=t(1),r=String,i=TypeError;n.exports=function(n){if("object"==typeof n||o(n))return n;throw new i("Can't set "+r(n)+" as a prototype")}},function(n,e,t){"use strict";var o=t(13).f;n.exports=function(n,e,t){t in n||o(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var o=t(1),r=t(9),i=t(68);n.exports=function(n,e,t){var a,s;return i&&o(a=e.constructor)&&a!==t&&r(s=a.prototype)&&s!==t.prototype&&i(n,s),n}},function(n,e,t){"use strict";var o=t(99);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:o(n)}},function(n,e,t){"use strict";var o=t(142),r=t(1),i=t(18),a=t(19)("toStringTag"),s=Object,l="Arguments"===i(function(){return arguments}());n.exports=o?i:function(n){var e,t,o;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=s(n),a))?t:l?i(e):"Object"===(o=i(e))&&r(e.callee)?"Arguments":o}},function(n,e,t){"use strict";var o={};o[t(19)("toStringTag")]="z",n.exports="[object z]"===String(o)},function(n,e,t){"use strict";var o=t(9),r=t(15);n.exports=function(n,e){o(e)&&"cause"in e&&r(n,"cause",e.cause)}},function(n,e,t){"use strict";var o=t(15),r=t(145),i=t(146),a=Error.captureStackTrace;n.exports=function(n,e,t,s){i&&(a?a(n,e):o(n,"stack",r(t,s)))}},function(n,e,t){"use strict";var o=t(2),r=Error,i=o("".replace),a=String(new r("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(a);n.exports=function(n,e){if(l&&"string"==typeof n&&!r.prepareStackTrace)for(;e--;)n=i(n,s,"");return n}},function(n,e,t){"use strict";var o=t(3),r=t(36);n.exports=!o((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",r(1,7)),7!==n.stack)}))},function(n,e,t){var o=t(69),r=t(148);n.exports=function n(e,t,i,a,s){var l=-1,c=e.length;for(i||(i=r),s||(s=[]);++l<c;){var d=e[l];t>0&&i(d)?t>1?n(d,t-1,i,a,s):o(s,d):a||(s[s.length]=d)}return s}},function(n,e,t){var o=t(16),r=t(39),i=t(6),a=o?o.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||r(n)||!!(a&&n&&n[a])}},function(n,e,t){var o=t(14),r=t(12);n.exports=function(n){return r(n)&&"[object Arguments]"==o(n)}},function(n,e,t){var o=t(16),r=Object.prototype,i=r.hasOwnProperty,a=r.toString,s=o?o.toStringTag:void 0;n.exports=function(n){var e=i.call(n,s),t=n[s];try{n[s]=void 0;var o=!0}catch(n){}var r=a.call(n);return o&&(e?n[s]=t:delete n[s]),r}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var o=t(153),r=t(209),i=t(47),a=t(6),s=t(220);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?a(n)?r(n[0],n[1]):o(n):s(n)}},function(n,e,t){var o=t(154),r=t(208),i=t(86);n.exports=function(n){var e=r(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||o(t,n,e)}}},function(n,e,t){var o=t(71),r=t(75);n.exports=function(n,e,t,i){var a=t.length,s=a,l=!i;if(null==n)return!s;for(n=Object(n);a--;){var c=t[a];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++a<s;){var d=(c=t[a])[0],u=n[d],p=c[1];if(l&&c[2]){if(void 0===u&&!(d in n))return!1}else{var h=new o;if(i)var m=i(u,p,d,n,e,h);if(!(void 0===m?r(p,u,3,i,h):m))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var o=t(21),r=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=o(e,n);return!(t<0)&&(t==e.length-1?e.pop():r.call(e,t,1),--this.size,!0)}},function(n,e,t){var o=t(21);n.exports=function(n){var e=this.__data__,t=o(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var o=t(21);n.exports=function(n){return o(this.__data__,n)>-1}},function(n,e,t){var o=t(21);n.exports=function(n,e){var t=this.__data__,r=o(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}},function(n,e,t){var o=t(20);n.exports=function(){this.__data__=new o,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var o=t(20),r=t(40),i=t(42);n.exports=function(n,e){var t=this.__data__;if(t instanceof o){var a=t.__data__;if(!r||a.length<199)return a.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(a)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var o=t(73),r=t(166),i=t(41),a=t(74),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,d=l.toString,u=c.hasOwnProperty,p=RegExp("^"+d.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||r(n))&&(o(n)?p:s).test(a(n))}},function(n,e,t){var o,r=t(167),i=(o=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+o:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var o=t(8)["__core-js_shared__"];n.exports=o},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var o=t(170),r=t(20),i=t(40);n.exports=function(){this.size=0,this.__data__={hash:new o,map:new(i||r),string:new o}}},function(n,e,t){var o=t(171),r=t(172),i=t(173),a=t(174),s=t(175);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var o=n[e];this.set(o[0],o[1])}}l.prototype.clear=o,l.prototype.delete=r,l.prototype.get=i,l.prototype.has=a,l.prototype.set=s,n.exports=l},function(n,e,t){var o=t(22);n.exports=function(){this.__data__=o?o(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var o=t(22),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(o){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(e,n)?e[n]:void 0}},function(n,e,t){var o=t(22),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return o?void 0!==e[n]:r.call(e,n)}},function(n,e,t){var o=t(22);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=o&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var o=t(23);n.exports=function(n){var e=o(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var o=t(23);n.exports=function(n){return o(this,n).get(n)}},function(n,e,t){var o=t(23);n.exports=function(n){return o(this,n).has(n)}},function(n,e,t){var o=t(23);n.exports=function(n,e){var t=o(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}},function(n,e,t){var o=t(71),r=t(76),i=t(185),a=t(188),s=t(204),l=t(6),c=t(80),d=t(82),u="[object Object]",p=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,h,m,f){var g=l(n),v=l(e),y=g?"[object Array]":s(n),b=v?"[object Array]":s(e),k=(y="[object Arguments]"==y?u:y)==u,w=(b="[object Arguments]"==b?u:b)==u,_=y==b;if(_&&c(n)){if(!c(e))return!1;g=!0,k=!1}if(_&&!k)return f||(f=new o),g||d(n)?r(n,e,t,h,m,f):i(n,e,y,t,h,m,f);if(!(1&t)){var x=k&&p.call(n,"__wrapped__"),T=w&&p.call(e,"__wrapped__");if(x||T){var A=x?n.value():n,E=T?e.value():e;return f||(f=new o),m(A,E,t,h,f)}}return!!_&&(f||(f=new o),a(n,e,t,h,m,f))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length;++t<o;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var o=t(16),r=t(186),i=t(72),a=t(76),s=t(187),l=t(43),c=o?o.prototype:void 0,d=c?c.valueOf:void 0;n.exports=function(n,e,t,o,c,u,p){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new r(n),new r(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var h=s;case"[object Set]":var m=1&o;if(h||(h=l),n.size!=e.size&&!m)return!1;var f=p.get(n);if(f)return f==e;o|=2,p.set(n,e);var g=a(h(n),h(e),o,c,u,p);return p.delete(n),g;case"[object Symbol]":if(d)return d.call(n)==d.call(e)}return!1}},function(n,e,t){var o=t(8).Uint8Array;n.exports=o},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,o){t[++e]=[o,n]})),t}},function(n,e,t){var o=t(189),r=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,a,s){var l=1&t,c=o(n),d=c.length;if(d!=o(e).length&&!l)return!1;for(var u=d;u--;){var p=c[u];if(!(l?p in e:r.call(e,p)))return!1}var h=s.get(n),m=s.get(e);if(h&&m)return h==e&&m==n;var f=!0;s.set(n,e),s.set(e,n);for(var g=l;++u<d;){var v=n[p=c[u]],y=e[p];if(i)var b=l?i(y,v,p,e,n,s):i(v,y,p,n,e,s);if(!(void 0===b?v===y||a(v,y,t,i,s):b)){f=!1;break}g||(g="constructor"==p)}if(f&&!g){var k=n.constructor,w=e.constructor;k==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof k&&k instanceof k&&"function"==typeof w&&w instanceof w||(f=!1)}return s.delete(n),s.delete(e),f}},function(n,e,t){var o=t(190),r=t(191),i=t(79);n.exports=function(n){return o(n,i,r)}},function(n,e,t){var o=t(69),r=t(6);n.exports=function(n,e,t){var i=e(n);return r(n)?i:o(i,t(n))}},function(n,e,t){var o=t(192),r=t(193),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(n){return null==n?[]:(n=Object(n),o(a(n),(function(e){return i.call(n,e)})))}:r;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length,r=0,i=[];++t<o;){var a=n[t];e(a,t,n)&&(i[r++]=a)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var o=t(195),r=t(39),i=t(6),a=t(80),s=t(81),l=t(82),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),d=!t&&r(n),u=!t&&!d&&a(n),p=!t&&!d&&!u&&l(n),h=t||d||u||p,m=h?o(n.length,String):[],f=m.length;for(var g in n)!e&&!c.call(n,g)||h&&("length"==g||u&&("offset"==g||"parent"==g)||p&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,f))||m.push(g);return m}},function(n,e){n.exports=function(n,e){for(var t=-1,o=Array(n);++t<n;)o[t]=e(t);return o}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var o=t(14),r=t(44),i=t(12),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&r(n.length)&&!!a[o(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var o=t(70),r=e&&!e.nodeType&&e,i=r&&"object"==typeof n&&n&&!n.nodeType&&n,a=i&&i.exports===r&&o.process,s=function(){try{var n=i&&i.require&&i.require("util").types;return n||a&&a.binding&&a.binding("util")}catch(n){}}();n.exports=s}).call(this,t(51)(n))},function(n,e,t){var o=t(201),r=t(202),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!o(n))return r(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var o=t(203)(Object.keys,Object);n.exports=o},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var o=t(205),r=t(40),i=t(206),a=t(84),s=t(207),l=t(14),c=t(74),d=c(o),u=c(r),p=c(i),h=c(a),m=c(s),f=l;(o&&"[object DataView]"!=f(new o(new ArrayBuffer(1)))||r&&"[object Map]"!=f(new r)||i&&"[object Promise]"!=f(i.resolve())||a&&"[object Set]"!=f(new a)||s&&"[object WeakMap]"!=f(new s))&&(f=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,o=t?c(t):"";if(o)switch(o){case d:return"[object DataView]";case u:return"[object Map]";case p:return"[object Promise]";case h:return"[object Set]";case m:return"[object WeakMap]"}return e}),n.exports=f},function(n,e,t){var o=t(10)(t(8),"DataView");n.exports=o},function(n,e,t){var o=t(10)(t(8),"Promise");n.exports=o},function(n,e,t){var o=t(10)(t(8),"WeakMap");n.exports=o},function(n,e,t){var o=t(85),r=t(79);n.exports=function(n){for(var e=r(n),t=e.length;t--;){var i=e[t],a=n[i];e[t]=[i,a,o(a)]}return e}},function(n,e,t){var o=t(75),r=t(210),i=t(217),a=t(45),s=t(85),l=t(86),c=t(24);n.exports=function(n,e){return a(n)&&s(e)?l(c(n),e):function(t){var a=r(t,n);return void 0===a&&a===e?i(t,n):o(e,a,3)}}},function(n,e,t){var o=t(87);n.exports=function(n,e,t){var r=null==n?void 0:o(n,e);return void 0===r?t:r}},function(n,e,t){var o=t(212),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=o((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(r,(function(n,t,o,r){e.push(o?r.replace(i,"$1"):t||n)})),e}));n.exports=a},function(n,e,t){var o=t(213);n.exports=function(n){var e=o(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var o=t(42);function r(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var o=arguments,r=e?e.apply(this,o):o[0],i=t.cache;if(i.has(r))return i.get(r);var a=n.apply(this,o);return t.cache=i.set(r,a)||i,a};return t.cache=new(r.Cache||o),t}r.Cache=o,n.exports=r},function(n,e,t){var o=t(215);n.exports=function(n){return null==n?"":o(n)}},function(n,e,t){var o=t(16),r=t(216),i=t(6),a=t(46),s=o?o.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return r(e,n)+"";if(a(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,o=null==n?0:n.length,r=Array(o);++t<o;)r[t]=e(n[t],t,n);return r}},function(n,e,t){var o=t(218),r=t(219);n.exports=function(n,e){return null!=n&&r(n,e,o)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var o=t(88),r=t(39),i=t(6),a=t(81),s=t(44),l=t(24);n.exports=function(n,e,t){for(var c=-1,d=(e=o(e,n)).length,u=!1;++c<d;){var p=l(e[c]);if(!(u=null!=n&&t(n,p)))break;n=n[p]}return u||++c!=d?u:!!(d=null==n?0:n.length)&&s(d)&&a(p,d)&&(i(n)||r(n))}},function(n,e,t){var o=t(221),r=t(222),i=t(45),a=t(24);n.exports=function(n){return i(n)?o(a(n)):r(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var o=t(87);n.exports=function(n){return function(e){return o(e,n)}}},function(n,e,t){var o=t(47),r=t(224),i=t(226);n.exports=function(n,e){return i(r(n,e,o),n+"")}},function(n,e,t){var o=t(225),r=Math.max;n.exports=function(n,e,t){return e=r(void 0===e?n.length-1:e,0),function(){for(var i=arguments,a=-1,s=r(i.length-e,0),l=Array(s);++a<s;)l[a]=i[e+a];a=-1;for(var c=Array(e+1);++a<e;)c[a]=i[a];return c[e]=t(l),o(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var o=t(227),r=t(230)(o);n.exports=r},function(n,e,t){var o=t(228),r=t(229),i=t(47),a=r?function(n,e){return r(n,"toString",{configurable:!0,enumerable:!1,value:o(e),writable:!0})}:i;n.exports=a},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var o=t(10),r=function(){try{var n=o(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=r},function(n,e){var t=Date.now;n.exports=function(n){var e=0,o=0;return function(){var r=t(),i=16-(r-o);if(o=r,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var o=t(77),r=t(232),i=t(237),a=t(78),s=t(238),l=t(43);n.exports=function(n,e,t){var c=-1,d=r,u=n.length,p=!0,h=[],m=h;if(t)p=!1,d=i;else if(u>=200){var f=e?null:s(n);if(f)return l(f);p=!1,d=a,m=new o}else m=e?[]:h;n:for(;++c<u;){var g=n[c],v=e?e(g):g;if(g=t||0!==g?g:0,p&&v==v){for(var y=m.length;y--;)if(m[y]===v)continue n;e&&m.push(v),h.push(g)}else d(m,v,t)||(m!==h&&m.push(v),h.push(g))}return h}},function(n,e,t){var o=t(233);n.exports=function(n,e){return!!(null==n?0:n.length)&&o(n,e,0)>-1}},function(n,e,t){var o=t(234),r=t(235),i=t(236);n.exports=function(n,e,t){return e==e?i(n,e,t):o(n,r,t)}},function(n,e){n.exports=function(n,e,t,o){for(var r=n.length,i=t+(o?1:-1);o?i--:++i<r;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var o=t-1,r=n.length;++o<r;)if(n[o]===e)return o;return-1}},function(n,e){n.exports=function(n,e,t){for(var o=-1,r=null==n?0:n.length;++o<r;)if(t(e,n[o]))return!0;return!1}},function(n,e,t){var o=t(84),r=t(239),i=t(43),a=o&&1/i(new o([,-0]))[1]==1/0?function(n){return new o(n)}:r;n.exports=a},function(n,e){n.exports=function(){}},function(n,e,t){var o=t(83),r=t(12);n.exports=function(n){return r(n)&&o(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(89)},function(n,e,t){"use strict";t(90)},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";var o=t(17),r=t(0),i=t(248);o({global:!0},{Reflect:{}}),i(r.Reflect,"Reflect",!0)},function(n,e,t){"use strict";var o=t(13).f,r=t(7),i=t(19)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!r(n,i)&&o(n,i,{configurable:!0,value:e})}},function(n,e){},function(n,e){function t(n,e){for(var t=0,o=n.length-1;o>=0;o--){var r=n[o];"."===r?n.splice(o,1):".."===r?(n.splice(o,1),t++):t&&(n.splice(o,1),t--)}if(e)for(;t--;t)n.unshift("..");return n}function o(n,e){if(n.filter)return n.filter(e);for(var t=[],o=0;o<n.length;o++)e(n[o],o,n)&&t.push(n[o]);return t}e.resolve=function(){for(var n="",e=!1,r=arguments.length-1;r>=-1&&!e;r--){var i=r>=0?arguments[r]:process.cwd();if("string"!=typeof i)throw new TypeError("Arguments to path.resolve must be strings");i&&(n=i+"/"+n,e="/"===i.charAt(0))}return(e?"/":"")+(n=t(o(n.split("/"),(function(n){return!!n})),!e).join("/"))||"."},e.normalize=function(n){var i=e.isAbsolute(n),a="/"===r(n,-1);return(n=t(o(n.split("/"),(function(n){return!!n})),!i).join("/"))||i||(n="."),n&&a&&(n+="/"),(i?"/":"")+n},e.isAbsolute=function(n){return"/"===n.charAt(0)},e.join=function(){var n=Array.prototype.slice.call(arguments,0);return e.normalize(o(n,(function(n,e){if("string"!=typeof n)throw new TypeError("Arguments to path.join must be strings");return n})).join("/"))},e.relative=function(n,t){function o(n){for(var e=0;e<n.length&&""===n[e];e++);for(var t=n.length-1;t>=0&&""===n[t];t--);return e>t?[]:n.slice(e,t-e+1)}n=e.resolve(n).substr(1),t=e.resolve(t).substr(1);for(var r=o(n.split("/")),i=o(t.split("/")),a=Math.min(r.length,i.length),s=a,l=0;l<a;l++)if(r[l]!==i[l]){s=l;break}var c=[];for(l=s;l<r.length;l++)c.push("..");return(c=c.concat(i.slice(s))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(n){if("string"!=typeof n&&(n+=""),0===n.length)return".";for(var e=n.charCodeAt(0),t=47===e,o=-1,r=!0,i=n.length-1;i>=1;--i)if(47===(e=n.charCodeAt(i))){if(!r){o=i;break}}else r=!1;return-1===o?t?"/":".":t&&1===o?"/":n.slice(0,o)},e.basename=function(n,e){var t=function(n){"string"!=typeof n&&(n+="");var e,t=0,o=-1,r=!0;for(e=n.length-1;e>=0;--e)if(47===n.charCodeAt(e)){if(!r){t=e+1;break}}else-1===o&&(r=!1,o=e+1);return-1===o?"":n.slice(t,o)}(n);return e&&t.substr(-1*e.length)===e&&(t=t.substr(0,t.length-e.length)),t},e.extname=function(n){"string"!=typeof n&&(n+="");for(var e=-1,t=0,o=-1,r=!0,i=0,a=n.length-1;a>=0;--a){var s=n.charCodeAt(a);if(47!==s)-1===o&&(r=!1,o=a+1),46===s?-1===e?e=a:1!==i&&(i=1):-1!==e&&(i=-1);else if(!r){t=a+1;break}}return-1===e||-1===o||0===i||1===i&&e===o-1&&e===t+1?"":n.slice(e,o)};var r="b"==="ab".substr(-1)?function(n,e,t){return n.substr(e,t)}:function(n,e,t){return e<0&&(e=n.length+e),n.substr(e,t)}},function(n,e,t){"use strict";var o=/[|\\{}()[\]^$+*?.]/g;e.escapeRegExpChars=function(n){return n?String(n).replace(o,"\\$&"):""};var r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&#34;","'":"&#39;"},i=/[&<>'"]/g;function a(n){return r[n]||n}e.escapeXML=function(n){return null==n?"":String(n).replace(i,a)},e.escapeXML.toString=function(){return Function.prototype.toString.call(this)+';\nvar _ENCODE_HTML_RULES = {\n      "&": "&amp;"\n    , "<": "&lt;"\n    , ">": "&gt;"\n    , \'"\': "&#34;"\n    , "\'": "&#39;"\n    }\n  , _MATCH_HTML = /[&<>\'"]/g;\nfunction encode_char(c) {\n  return _ENCODE_HTML_RULES[c] || c;\n};\n'},e.shallowCopy=function(n,e){for(var t in e=e||{})n[t]=e[t];return n},e.shallowCopyFromList=function(n,e,t){for(var o=0;o<t.length;o++){var r=t[o];void 0!==e[r]&&(n[r]=e[r])}return n},e.cache={_data:{},set:function(n,e){this._data[n]=e},get:function(n){return this._data[n]},remove:function(n){delete this._data[n]},reset:function(){this._data={}}}},function(n){n.exports=JSON.parse('{"name":"ejs","description":"Embedded JavaScript templates","keywords":["template","engine","ejs"],"version":"2.7.4","author":"Matthew Eernisse <mde@fleegix.org> (http://fleegix.org)","license":"Apache-2.0","main":"./lib/ejs.js","repository":{"type":"git","url":"git://github.com/mde/ejs.git"},"bugs":"https://github.com/mde/ejs/issues","homepage":"https://github.com/mde/ejs","dependencies":{},"devDependencies":{"browserify":"^13.1.1","eslint":"^4.14.0","git-directory-deploy":"^1.5.1","jake":"^10.3.1","jsdoc":"^3.4.0","lru-cache":"^4.0.1","mocha":"^5.0.5","uglify-js":"^3.3.16"},"engines":{"node":">=0.10.0"},"scripts":{"test":"mocha","postinstall":"node ./postinstall.js"}}')},function(n,e,t){"use strict";t(91)},function(n,e,t){"use strict";t(92)},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.7.15
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var o=Object.freeze({}),r=Array.isArray;function i(n){return null==n}function a(n){return null!=n}function s(n){return!0===n}function l(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function c(n){return"function"==typeof n}function d(n){return null!==n&&"object"==typeof n}var u=Object.prototype.toString;function p(n){return"[object Object]"===u.call(n)}function h(n){return"[object RegExp]"===u.call(n)}function m(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function f(n){return a(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function g(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===u?JSON.stringify(n,null,2):String(n)}function v(n){var e=parseFloat(n);return isNaN(e)?n:e}function y(n,e){for(var t=Object.create(null),o=n.split(","),r=0;r<o.length;r++)t[o[r]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}y("slot,component",!0);var b=y("key,ref,slot,slot-scope,is");function k(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var o=n.indexOf(e);if(o>-1)return n.splice(o,1)}}var w=Object.prototype.hasOwnProperty;function _(n,e){return w.call(n,e)}function x(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var T=/-(\w)/g,A=x((function(n){return n.replace(T,(function(n,e){return e?e.toUpperCase():""}))})),E=x((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),I=/\B([A-Z])/g,S=x((function(n){return n.replace(I,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var o=arguments.length;return o?o>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function C(n,e){e=e||0;for(var t=n.length-e,o=new Array(t);t--;)o[t]=n[t+e];return o}function z(n,e){for(var t in e)n[t]=e[t];return n}function D(n){for(var e={},t=0;t<n.length;t++)n[t]&&z(e,n[t]);return e}function O(n,e,t){}var j=function(n,e,t){return!1},B=function(n){return n};function L(n,e){if(n===e)return!0;var t=d(n),o=d(e);if(!t||!o)return!t&&!o&&String(n)===String(e);try{var r=Array.isArray(n),i=Array.isArray(e);if(r&&i)return n.length===e.length&&n.every((function(n,t){return L(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(r||i)return!1;var a=Object.keys(n),s=Object.keys(e);return a.length===s.length&&a.every((function(t){return L(n[t],e[t])}))}catch(n){return!1}}function R(n,e){for(var t=0;t<n.length;t++)if(L(n[t],e))return t;return-1}function N(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function M(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var U=["component","directive","filter"],q=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],$={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:j,isReservedAttr:j,isUnknownElement:j,getTagNamespace:O,parsePlatformTagName:B,mustUseProp:j,async:!0,_lifecycleHooks:q},F=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function H(n,e,t,o){Object.defineProperty(n,e,{value:t,enumerable:!!o,writable:!0,configurable:!0})}var K=new RegExp("[^".concat(F.source,".$_\\d]"));var W="__proto__"in{},V="undefined"!=typeof window,Y=V&&window.navigator.userAgent.toLowerCase(),X=Y&&/msie|trident/.test(Y),Z=Y&&Y.indexOf("msie 9.0")>0,J=Y&&Y.indexOf("edge/")>0;Y&&Y.indexOf("android");var Q=Y&&/iphone|ipad|ipod|ios/.test(Y);Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y);var nn,en=Y&&Y.match(/firefox\/(\d+)/),tn={}.watch,on=!1;if(V)try{var rn={};Object.defineProperty(rn,"passive",{get:function(){on=!0}}),window.addEventListener("test-passive",null,rn)}catch(n){}var an=function(){return void 0===nn&&(nn=!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),nn},sn=V&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ln(n){return"function"==typeof n&&/native code/.test(n.toString())}var cn,dn="undefined"!=typeof Symbol&&ln(Symbol)&&"undefined"!=typeof Reflect&&ln(Reflect.ownKeys);cn="undefined"!=typeof Set&&ln(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var un=null;function pn(n){void 0===n&&(n=null),n||un&&un._scope.off(),un=n,n&&n._scope.on()}var hn=function(){function n(n,e,t,o,r,i,a,s){this.tag=n,this.data=e,this.children=t,this.text=o,this.elm=r,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),mn=function(n){void 0===n&&(n="");var e=new hn;return e.text=n,e.isComment=!0,e};function fn(n){return new hn(void 0,void 0,void 0,String(n))}function gn(n){var e=new hn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var vn=0,yn=[],bn=function(){function n(){this._pending=!1,this.id=vn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,yn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,o=e.length;t<o;t++){0,e[t].update()}},n}();bn.target=null;var kn=[];function wn(n){kn.push(n),bn.target=n}function _n(){kn.pop(),bn.target=kn[kn.length-1]}var xn=Array.prototype,Tn=Object.create(xn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=xn[n];H(Tn,n,(function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o];var r,i=e.apply(this,t),a=this.__ob__;switch(n){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&a.observeArray(r),a.dep.notify(),i}))}));var An=Object.getOwnPropertyNames(Tn),En={},In=!0;function Sn(n){In=n}var Pn={notify:O,depend:O,addSub:O,removeSub:O},Cn=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?Pn:new bn,this.vmCount=0,H(n,"__ob__",this),r(n)){if(!t)if(W)n.__proto__=Tn;else for(var o=0,i=An.length;o<i;o++){H(n,s=An[o],Tn[s])}e||this.observeArray(n)}else{var a=Object.keys(n);for(o=0;o<a.length;o++){var s;Dn(n,s=a[o],En,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)zn(n[e],!1,this.mock)},n}();function zn(n,e,t){return n&&_(n,"__ob__")&&n.__ob__ instanceof Cn?n.__ob__:!In||!t&&an()||!r(n)&&!p(n)||!Object.isExtensible(n)||n.__v_skip||Mn(n)||n instanceof hn?void 0:new Cn(n,e,t)}function Dn(n,e,t,o,i,a){var s=new bn,l=Object.getOwnPropertyDescriptor(n,e);if(!l||!1!==l.configurable){var c=l&&l.get,d=l&&l.set;c&&!d||t!==En&&2!==arguments.length||(t=n[e]);var u=!i&&zn(t,!1,a);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=c?c.call(n):t;return bn.target&&(s.depend(),u&&(u.dep.depend(),r(e)&&Bn(e))),Mn(e)&&!i?e.value:e},set:function(e){var o=c?c.call(n):t;if(M(o,e)){if(d)d.call(n,e);else{if(c)return;if(!i&&Mn(o)&&!Mn(e))return void(o.value=e);t=e}u=!i&&zn(e,!1,a),s.notify()}}}),s}}function On(n,e,t){if(!Nn(n)){var o=n.__ob__;return r(n)&&m(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),o&&!o.shallow&&o.mock&&zn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||o&&o.vmCount?t:o?(Dn(o.value,e,t,void 0,o.shallow,o.mock),o.dep.notify(),t):(n[e]=t,t)}}function jn(n,e){if(r(n)&&m(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Nn(n)||_(n,e)&&(delete n[e],t&&t.dep.notify())}}function Bn(n){for(var e=void 0,t=0,o=n.length;t<o;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),r(e)&&Bn(e)}function Ln(n){return Rn(n,!0),H(n,"__v_isShallow",!0),n}function Rn(n,e){if(!Nn(n)){zn(n,e,an());0}}function Nn(n){return!(!n||!n.__v_isReadonly)}function Mn(n){return!(!n||!0!==n.__v_isRef)}function Un(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Mn(n))return n.value;var o=n&&n.__ob__;return o&&o.dep.depend(),n},set:function(n){var o=e[t];Mn(o)&&!Mn(n)?o.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var qn;var $n=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=qn,!n&&qn&&(this.index=(qn.scopes||(qn.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=qn;try{return qn=this,n()}finally{qn=e}}else 0},n.prototype.on=function(){qn=this},n.prototype.off=function(){qn=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var o=this.parent.scopes.pop();o&&o!==this&&(this.parent.scopes[this.index]=o,o.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Fn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Gn=x((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),o="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=o?n.slice(1):n,once:t,capture:o,passive:e}}));function Hn(n,e){function t(){var n=t.fns;if(!r(n))return Ie(n,null,arguments,e,"v-on handler");for(var o=n.slice(),i=0;i<o.length;i++)Ie(o[i],null,arguments,e,"v-on handler")}return t.fns=n,t}function Kn(n,e,t,o,r,a){var l,c,d,u;for(l in n)c=n[l],d=e[l],u=Gn(l),i(c)||(i(d)?(i(c.fns)&&(c=n[l]=Hn(c,a)),s(u.once)&&(c=n[l]=r(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==d&&(d.fns=c,n[l]=d));for(l in e)i(n[l])&&o((u=Gn(l)).name,e[l],u.capture)}function Wn(n,e,t){var o;n instanceof hn&&(n=n.data.hook||(n.data.hook={}));var r=n[e];function l(){t.apply(this,arguments),k(o.fns,l)}i(r)?o=Hn([l]):a(r.fns)&&s(r.merged)?(o=r).fns.push(l):o=Hn([r,l]),o.merged=!0,n[e]=o}function Vn(n,e,t,o,r){if(a(e)){if(_(e,t))return n[t]=e[t],r||delete e[t],!0;if(_(e,o))return n[t]=e[o],r||delete e[o],!0}return!1}function Yn(n){return l(n)?[fn(n)]:r(n)?function n(e,t){var o,c,d,u,p=[];for(o=0;o<e.length;o++)i(c=e[o])||"boolean"==typeof c||(d=p.length-1,u=p[d],r(c)?c.length>0&&(Xn((c=n(c,"".concat(t||"","_").concat(o)))[0])&&Xn(u)&&(p[d]=fn(u.text+c[0].text),c.shift()),p.push.apply(p,c)):l(c)?Xn(u)?p[d]=fn(u.text+c):""!==c&&p.push(fn(c)):Xn(c)&&Xn(u)?p[d]=fn(u.text+c.text):(s(e._isVList)&&a(c.tag)&&i(c.key)&&a(t)&&(c.key="__vlist".concat(t,"_").concat(o,"__")),p.push(c)));return p}(n):void 0}function Xn(n){return a(n)&&a(n.text)&&!1===n.isComment}function Zn(n,e){var t,o,i,s,l=null;if(r(n)||"string"==typeof n)for(l=new Array(n.length),t=0,o=n.length;t<o;t++)l[t]=e(n[t],t);else if("number"==typeof n)for(l=new Array(n),t=0;t<n;t++)l[t]=e(t+1,t);else if(d(n))if(dn&&n[Symbol.iterator]){l=[];for(var c=n[Symbol.iterator](),u=c.next();!u.done;)l.push(e(u.value,l.length)),u=c.next()}else for(i=Object.keys(n),l=new Array(i.length),t=0,o=i.length;t<o;t++)s=i[t],l[t]=e(n[s],s,t);return a(l)||(l=[]),l._isVList=!0,l}function Jn(n,e,t,o){var r,i=this.$scopedSlots[n];i?(t=t||{},o&&(t=z(z({},o),t)),r=i(t)||(c(e)?e():e)):r=this.$slots[n]||(c(e)?e():e);var a=t&&t.slot;return a?this.$createElement("template",{slot:a},r):r}function Qn(n){return Ct(this.$options,"filters",n,!0)||B}function ne(n,e){return r(n)?-1===n.indexOf(e):n!==e}function ee(n,e,t,o,r){var i=$.keyCodes[e]||t;return r&&o&&!$.keyCodes[e]?ne(r,o):i?ne(i,n):o?S(o)!==e:void 0===n}function te(n,e,t,o,i){if(t)if(d(t)){r(t)&&(t=D(t));var a=void 0,s=function(r){if("class"===r||"style"===r||b(r))a=n;else{var s=n.attrs&&n.attrs.type;a=o||$.mustUseProp(e,s,r)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=A(r),c=S(r);l in a||c in a||(a[r]=t[r],i&&((n.on||(n.on={}))["update:".concat(r)]=function(n){t[r]=n}))};for(var l in t)s(l)}else;return n}function oe(n,e){var t=this._staticTrees||(this._staticTrees=[]),o=t[n];return o&&!e||ie(o=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),o}function re(n,e,t){return ie(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ie(n,e,t){if(r(n))for(var o=0;o<n.length;o++)n[o]&&"string"!=typeof n[o]&&ae(n[o],"".concat(e,"_").concat(o),t);else ae(n,e,t)}function ae(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function se(n,e){if(e)if(p(e)){var t=n.on=n.on?z({},n.on):{};for(var o in e){var r=t[o],i=e[o];t[o]=r?[].concat(r,i):i}}else;return n}function le(n,e,t,o){e=e||{$stable:!t};for(var i=0;i<n.length;i++){var a=n[i];r(a)?le(a,e,t):a&&(a.proxy&&(a.fn.proxy=!0),e[a.key]=a.fn)}return o&&(e.$key=o),e}function ce(n,e){for(var t=0;t<e.length;t+=2){var o=e[t];"string"==typeof o&&o&&(n[e[t]]=e[t+1])}return n}function de(n,e){return"string"==typeof n?e+n:n}function ue(n){n._o=re,n._n=v,n._s=g,n._l=Zn,n._t=Jn,n._q=L,n._i=R,n._m=oe,n._f=Qn,n._k=ee,n._b=te,n._v=fn,n._e=mn,n._u=le,n._g=se,n._d=ce,n._p=de}function pe(n,e){if(!n||!n.length)return{};for(var t={},o=0,r=n.length;o<r;o++){var i=n[o],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==e&&i.fnContext!==e||!a||null==a.slot)(t.default||(t.default=[])).push(i);else{var s=a.slot,l=t[s]||(t[s]=[]);"template"===i.tag?l.push.apply(l,i.children||[]):l.push(i)}}for(var c in t)t[c].every(he)&&delete t[c];return t}function he(n){return n.isComment&&!n.asyncFactory||" "===n.text}function me(n){return n.isComment&&n.asyncFactory}function fe(n,e,t,r){var i,a=Object.keys(t).length>0,s=e?!!e.$stable:!a,l=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(s&&r&&r!==o&&l===r.$key&&!a&&!r.$hasNormal)return r;for(var c in i={},e)e[c]&&"$"!==c[0]&&(i[c]=ge(n,t,c,e[c]))}else i={};for(var d in t)d in i||(i[d]=ve(t,d));return e&&Object.isExtensible(e)&&(e._normalized=i),H(i,"$stable",s),H(i,"$key",l),H(i,"$hasNormal",a),i}function ge(n,e,t,o){var i=function(){var e=un;pn(n);var t=arguments.length?o.apply(null,arguments):o({}),i=(t=t&&"object"==typeof t&&!r(t)?[t]:Yn(t))&&t[0];return pn(e),t&&(!i||1===t.length&&i.isComment&&!me(i))?void 0:t};return o.proxy&&Object.defineProperty(e,t,{get:i,enumerable:!0,configurable:!0}),i}function ve(n,e){return function(){return n[e]}}function ye(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};H(e,"_v_attr_proxy",!0),be(e,n.$attrs,o,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||be(n._listenersProxy={},n.$listeners,o,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||we(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:P(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return Un(n,e,t)}))}}}function be(n,e,t,o,r){var i=!1;for(var a in e)a in n?e[a]!==t[a]&&(i=!0):(i=!0,ke(n,a,o,r));for(var a in n)a in e||(i=!0,delete n[a]);return i}function ke(n,e,t,o){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[o][e]}})}function we(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var _e=null;function xe(n,e){return(n.__esModule||dn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),d(n)?e.extend(n):n}function Te(n){if(r(n))for(var e=0;e<n.length;e++){var t=n[e];if(a(t)&&(a(t.componentOptions)||me(t)))return t}}function Ae(n,e,t,o,u,p){return(r(t)||l(t))&&(u=o,o=t,t=void 0),s(p)&&(u=2),function(n,e,t,o,l){if(a(t)&&a(t.__ob__))return mn();a(t)&&a(t.is)&&(e=t.is);if(!e)return mn();0;r(o)&&c(o[0])&&((t=t||{}).scopedSlots={default:o[0]},o.length=0);2===l?o=Yn(o):1===l&&(o=function(n){for(var e=0;e<n.length;e++)if(r(n[e]))return Array.prototype.concat.apply([],n);return n}(o));var u,p;if("string"==typeof e){var h=void 0;p=n.$vnode&&n.$vnode.ns||$.getTagNamespace(e),u=$.isReservedTag(e)?new hn($.parsePlatformTagName(e),t,o,void 0,void 0,n):t&&t.pre||!a(h=Ct(n.$options,"components",e))?new hn(e,t,o,void 0,void 0,n):kt(h,t,n,o,e)}else u=kt(e,t,n,o);return r(u)?u:a(u)?(a(p)&&function n(e,t,o){e.ns=t,"foreignObject"===e.tag&&(t=void 0,o=!0);if(a(e.children))for(var r=0,l=e.children.length;r<l;r++){var c=e.children[r];a(c.tag)&&(i(c.ns)||s(o)&&"svg"!==c.tag)&&n(c,t,o)}}(u,p),a(t)&&function(n){d(n.style)&&$e(n.style);d(n.class)&&$e(n.class)}(t),u):mn()}(n,e,t,o,u)}function Ee(n,e,t){wn();try{if(e)for(var o=e;o=o.$parent;){var r=o.$options.errorCaptured;if(r)for(var i=0;i<r.length;i++)try{if(!1===r[i].call(o,n,e,t))return}catch(n){Se(n,o,"errorCaptured hook")}}Se(n,e,t)}finally{_n()}}function Ie(n,e,t,o,r){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&f(i)&&!i._handled&&(i.catch((function(n){return Ee(n,o,r+" (Promise/async)")})),i._handled=!0)}catch(n){Ee(n,o,r)}return i}function Se(n,e,t){if($.errorHandler)try{return $.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Pe(e,null,"config.errorHandler")}Pe(n,e,t)}function Pe(n,e,t){if(!V||"undefined"==typeof console)throw n;console.error(n)}var Ce,ze=!1,De=[],Oe=!1;function je(){Oe=!1;var n=De.slice(0);De.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&ln(Promise)){var Be=Promise.resolve();Ce=function(){Be.then(je),Q&&setTimeout(O)},ze=!0}else if(X||"undefined"==typeof MutationObserver||!ln(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ce="undefined"!=typeof setImmediate&&ln(setImmediate)?function(){setImmediate(je)}:function(){setTimeout(je,0)};else{var Le=1,Re=new MutationObserver(je),Ne=document.createTextNode(String(Le));Re.observe(Ne,{characterData:!0}),Ce=function(){Le=(Le+1)%2,Ne.data=String(Le)},ze=!0}function Me(n,e){var t;if(De.push((function(){if(n)try{n.call(e)}catch(n){Ee(n,e,"nextTick")}else t&&t(e)})),Oe||(Oe=!0,Ce()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Ue(n){return function(e,t){if(void 0===t&&(t=un),t)return function(n,e,t){var o=n.$options;o[e]=Et(o[e],t)}(t,n,e)}}Ue("beforeMount"),Ue("mounted"),Ue("beforeUpdate"),Ue("updated"),Ue("beforeDestroy"),Ue("destroyed"),Ue("activated"),Ue("deactivated"),Ue("serverPrefetch"),Ue("renderTracked"),Ue("renderTriggered"),Ue("errorCaptured");var qe=new cn;function $e(n){return function n(e,t){var o,i,a=r(e);if(!a&&!d(e)||e.__v_skip||Object.isFrozen(e)||e instanceof hn)return;if(e.__ob__){var s=e.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(a)for(o=e.length;o--;)n(e[o],t);else if(Mn(e))n(e.value,t);else for(i=Object.keys(e),o=i.length;o--;)n(e[i[o]],t)}(n,qe),qe.clear(),n}var Fe,Ge=0,He=function(){function n(n,e,t,o,r){var i,a;i=this,void 0===(a=qn&&!qn._vm?qn:n?n._scope:void 0)&&(a=qn),a&&a.active&&a.effects.push(i),(this.vm=n)&&r&&(n._watcher=this),o?(this.deep=!!o.deep,this.user=!!o.user,this.lazy=!!o.lazy,this.sync=!!o.sync,this.before=o.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Ge,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new cn,this.newDepIds=new cn,this.expression="",c(e)?this.getter=e:(this.getter=function(n){if(!K.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;wn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Ee(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&$e(n),_n(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():pt(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||d(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');Ie(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&k(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Ke(n,e){Fe.$on(n,e)}function We(n,e){Fe.$off(n,e)}function Ve(n,e){var t=Fe;return function o(){var r=e.apply(null,arguments);null!==r&&t.$off(n,o)}}function Ye(n,e,t){Fe=n,Kn(e,t||{},Ke,We,Ve,n),Fe=void 0}var Xe=null;function Ze(n){var e=Xe;return Xe=n,function(){Xe=e}}function Je(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function Qe(n,e){if(e){if(n._directInactive=!1,Je(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)Qe(n.$children[t]);nt(n,"activated")}}function nt(n,e,t,o){void 0===o&&(o=!0),wn();var r=un,i=qn;o&&pn(n);var a=n.$options[e],s="".concat(e," hook");if(a)for(var l=0,c=a.length;l<c;l++)Ie(a[l],n,t||null,n,s);n._hasHookEvent&&n.$emit("hook:"+e),o&&(pn(r),i&&i.on()),_n()}var et=[],tt=[],ot={},rt=!1,it=!1,at=0;var st=0,lt=Date.now;if(V&&!X){var ct=window.performance;ct&&"function"==typeof ct.now&&lt()>document.createEvent("Event").timeStamp&&(lt=function(){return ct.now()})}var dt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function ut(){var n,e;for(st=lt(),it=!0,et.sort(dt),at=0;at<et.length;at++)(n=et[at]).before&&n.before(),e=n.id,ot[e]=null,n.run();var t=tt.slice(),o=et.slice();at=et.length=tt.length=0,ot={},rt=it=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,Qe(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],o=t.vm;o&&o._watcher===t&&o._isMounted&&!o._isDestroyed&&nt(o,"updated")}}(o),function(){for(var n=0;n<yn.length;n++){var e=yn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}yn.length=0}(),sn&&$.devtools&&sn.emit("flush")}function pt(n){var e=n.id;if(null==ot[e]&&(n!==bn.target||!n.noRecurse)){if(ot[e]=!0,it){for(var t=et.length-1;t>at&&et[t].id>n.id;)t--;et.splice(t+1,0,n)}else et.push(n);rt||(rt=!0,Me(ut))}}function ht(n,e){if(n){for(var t=Object.create(null),o=dn?Reflect.ownKeys(n):Object.keys(n),r=0;r<o.length;r++){var i=o[r];if("__ob__"!==i){var a=n[i].from;if(a in e._provided)t[i]=e._provided[a];else if("default"in n[i]){var s=n[i].default;t[i]=c(s)?s.call(e):s}else 0}}return t}}function mt(n,e,t,i,a){var l,c=this,d=a.options;_(i,"_uid")?(l=Object.create(i))._original=i:(l=i,i=i._original);var u=s(d._compiled),p=!u;this.data=n,this.props=e,this.children=t,this.parent=i,this.listeners=n.on||o,this.injections=ht(d.inject,i),this.slots=function(){return c.$slots||fe(i,n.scopedSlots,c.$slots=pe(t,i)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return fe(i,n.scopedSlots,this.slots())}}),u&&(this.$options=d,this.$slots=this.slots(),this.$scopedSlots=fe(i,n.scopedSlots,this.$slots)),d._scopeId?this._c=function(n,e,t,o){var a=Ae(l,n,e,t,o,p);return a&&!r(a)&&(a.fnScopeId=d._scopeId,a.fnContext=i),a}:this._c=function(n,e,t,o){return Ae(l,n,e,t,o,p)}}function ft(n,e,t,o,r){var i=gn(n);return i.fnContext=t,i.fnOptions=o,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function gt(n,e){for(var t in e)n[A(t)]=e[t]}function vt(n){return n.name||n.__name||n._componentTag}ue(mt.prototype);var yt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;yt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},o=n.data.inlineTemplate;a(o)&&(t.render=o.render,t.staticRenderFns=o.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Xe)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,i){var a=r.data.scopedSlots,s=n.$scopedSlots,l=!!(a&&!a.$stable||s!==o&&!s.$stable||a&&n.$scopedSlots.$key!==a.$key||!a&&n.$scopedSlots.$key),c=!!(i||n.$options._renderChildren||l),d=n.$vnode;n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r),n.$options._renderChildren=i;var u=r.data.attrs||o;n._attrsProxy&&be(n._attrsProxy,u,d.data&&d.data.attrs||o,n,"$attrs")&&(c=!0),n.$attrs=u,t=t||o;var p=n.$options._parentListeners;if(n._listenersProxy&&be(n._listenersProxy,t,p||o,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,Ye(n,t,p),e&&n.$options.props){Sn(!1);for(var h=n._props,m=n.$options._propKeys||[],f=0;f<m.length;f++){var g=m[f],v=n.$options.props;h[g]=zt(g,v,e,n)}Sn(!0),n.$options.propsData=e}c&&(n.$slots=pe(i,r.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,o=n.componentInstance;o._isMounted||(o._isMounted=!0,nt(o,"mounted")),n.data.keepAlive&&(t._isMounted?((e=o)._inactive=!1,tt.push(e)):Qe(o,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,Je(e))||e._inactive)){e._inactive=!0;for(var o=0;o<e.$children.length;o++)n(e.$children[o]);nt(e,"deactivated")}}(e,!0):e.$destroy())}},bt=Object.keys(yt);function kt(n,e,t,l,c){if(!i(n)){var u=t.$options._base;if(d(n)&&(n=u.extend(n)),"function"==typeof n){var p;if(i(n.cid)&&void 0===(n=function(n,e){if(s(n.error)&&a(n.errorComp))return n.errorComp;if(a(n.resolved))return n.resolved;var t=_e;if(t&&a(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),s(n.loading)&&a(n.loadingComp))return n.loadingComp;if(t&&!a(n.owners)){var o=n.owners=[t],r=!0,l=null,c=null;t.$on("hook:destroyed",(function(){return k(o,t)}));var u=function(n){for(var e=0,t=o.length;e<t;e++)o[e].$forceUpdate();n&&(o.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},p=N((function(t){n.resolved=xe(t,e),r?o.length=0:u(!0)})),h=N((function(e){a(n.errorComp)&&(n.error=!0,u(!0))})),m=n(p,h);return d(m)&&(f(m)?i(n.resolved)&&m.then(p,h):f(m.component)&&(m.component.then(p,h),a(m.error)&&(n.errorComp=xe(m.error,e)),a(m.loading)&&(n.loadingComp=xe(m.loading,e),0===m.delay?n.loading=!0:l=setTimeout((function(){l=null,i(n.resolved)&&i(n.error)&&(n.loading=!0,u(!1))}),m.delay||200)),a(m.timeout)&&(c=setTimeout((function(){c=null,i(n.resolved)&&h(null)}),m.timeout)))),r=!1,n.loading?n.loadingComp:n.resolved}}(p=n,u)))return function(n,e,t,o,r){var i=mn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:o,tag:r},i}(p,e,t,l,c);e=e||{},Ht(n),a(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",o=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var i=e.on||(e.on={}),s=i[o],l=e.model.callback;a(s)?(r(s)?-1===s.indexOf(l):s!==l)&&(i[o]=[l].concat(s)):i[o]=l}(n.options,e);var h=function(n,e,t){var o=e.options.props;if(!i(o)){var r={},s=n.attrs,l=n.props;if(a(s)||a(l))for(var c in o){var d=S(c);Vn(r,l,c,d,!0)||Vn(r,s,c,d,!1)}return r}}(e,n);if(s(n.options.functional))return function(n,e,t,i,s){var l=n.options,c={},d=l.props;if(a(d))for(var u in d)c[u]=zt(u,d,e||o);else a(t.attrs)&&gt(c,t.attrs),a(t.props)&&gt(c,t.props);var p=new mt(t,c,s,i,n),h=l.render.call(null,p._c,p);if(h instanceof hn)return ft(h,t,p.parent,l,p);if(r(h)){for(var m=Yn(h)||[],f=new Array(m.length),g=0;g<m.length;g++)f[g]=ft(m[g],t,p.parent,l,p);return f}}(n,h,e,t,l);var m=e.on;if(e.on=e.nativeOn,s(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<bt.length;t++){var o=bt[t],r=e[o],i=yt[o];r===i||r&&r._merged||(e[o]=r?wt(i,r):i)}}(e);var v=vt(n.options)||c;return new hn("vue-component-".concat(n.cid).concat(v?"-".concat(v):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:h,listeners:m,tag:c,children:l},p)}}}function wt(n,e){var t=function(t,o){n(t,o),e(t,o)};return t._merged=!0,t}var _t=O,xt=$.optionMergeStrategies;function Tt(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var o,r,i,a=dn?Reflect.ownKeys(e):Object.keys(e),s=0;s<a.length;s++)"__ob__"!==(o=a[s])&&(r=n[o],i=e[o],t&&_(n,o)?r!==i&&p(r)&&p(i)&&Tt(r,i):On(n,o,i));return n}function At(n,e,t){return t?function(){var o=c(e)?e.call(t,t):e,r=c(n)?n.call(t,t):n;return o?Tt(o,r):r}:e?n?function(){return Tt(c(e)?e.call(this,this):e,c(n)?n.call(this,this):n)}:e:n}function Et(n,e){var t=e?n?n.concat(e):r(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function It(n,e,t,o){var r=Object.create(n||null);return e?z(r,e):r}xt.data=function(n,e,t){return t?At(n,e,t):e&&"function"!=typeof e?n:At(n,e)},q.forEach((function(n){xt[n]=Et})),U.forEach((function(n){xt[n+"s"]=It})),xt.watch=function(n,e,t,o){if(n===tn&&(n=void 0),e===tn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var i={};for(var a in z(i,n),e){var s=i[a],l=e[a];s&&!r(s)&&(s=[s]),i[a]=s?s.concat(l):r(l)?l:[l]}return i},xt.props=xt.methods=xt.inject=xt.computed=function(n,e,t,o){if(!n)return e;var r=Object.create(null);return z(r,n),e&&z(r,e),r},xt.provide=function(n,e){return n?function(){var t=Object.create(null);return Tt(t,c(n)?n.call(this):n),e&&Tt(t,c(e)?e.call(this):e,!1),t}:e};var St=function(n,e){return void 0===e?n:e};function Pt(n,e,t){if(c(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var o,i,a={};if(r(t))for(o=t.length;o--;)"string"==typeof(i=t[o])&&(a[A(i)]={type:null});else if(p(t))for(var s in t)i=t[s],a[A(s)]=p(i)?i:{type:i};else 0;n.props=a}}(e),function(n,e){var t=n.inject;if(t){var o=n.inject={};if(r(t))for(var i=0;i<t.length;i++)o[t[i]]={from:t[i]};else if(p(t))for(var a in t){var s=t[a];o[a]=p(s)?z({from:a},s):{from:s}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var o=e[t];c(o)&&(e[t]={bind:o,update:o})}}(e),!e._base&&(e.extends&&(n=Pt(n,e.extends,t)),e.mixins))for(var o=0,i=e.mixins.length;o<i;o++)n=Pt(n,e.mixins[o],t);var a,s={};for(a in n)l(a);for(a in e)_(n,a)||l(a);function l(o){var r=xt[o]||St;s[o]=r(n[o],e[o],t,o)}return s}function Ct(n,e,t,o){if("string"==typeof t){var r=n[e];if(_(r,t))return r[t];var i=A(t);if(_(r,i))return r[i];var a=E(i);return _(r,a)?r[a]:r[t]||r[i]||r[a]}}function zt(n,e,t,o){var r=e[n],i=!_(t,n),a=t[n],s=Bt(Boolean,r.type);if(s>-1)if(i&&!_(r,"default"))a=!1;else if(""===a||a===S(n)){var l=Bt(String,r.type);(l<0||s<l)&&(a=!0)}if(void 0===a){a=function(n,e,t){if(!_(e,"default"))return;var o=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return c(o)&&"Function"!==Ot(e.type)?o.call(n):o}(o,r,n);var d=In;Sn(!0),zn(a),Sn(d)}return a}var Dt=/^\s*function (\w+)/;function Ot(n){var e=n&&n.toString().match(Dt);return e?e[1]:""}function jt(n,e){return Ot(n)===Ot(e)}function Bt(n,e){if(!r(e))return jt(e,n)?0:-1;for(var t=0,o=e.length;t<o;t++)if(jt(e[t],n))return t;return-1}var Lt={enumerable:!0,configurable:!0,get:O,set:O};function Rt(n,e,t){Lt.get=function(){return this[e][t]},Lt.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Lt)}function Nt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},o=n._props=Ln({}),r=n.$options._propKeys=[];n.$parent&&Sn(!1);var i=function(i){r.push(i);var a=zt(i,e,t,n);Dn(o,i,a),i in n||Rt(n,"_props",i)};for(var a in e)i(a);Sn(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var o=n._setupContext=ye(n);pn(n),wn();var r=Ie(t,null,[n._props||Ln({}),o],n,"setup");if(_n(),pn(),c(r))e.render=r;else if(d(r))if(n._setupState=r,r.__sfc){var i=n._setupProxy={};for(var a in r)"__sfc"!==a&&Un(i,r,a)}else for(var a in r)G(a)||Un(n,r,a);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?O:P(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;p(e=n._data=c(e)?function(n,e){wn();try{return n.call(e,e)}catch(n){return Ee(n,e,"data()"),{}}finally{_n()}}(e,n):e||{})||(e={});var t=Object.keys(e),o=n.$options.props,r=(n.$options.methods,t.length);for(;r--;){var i=t[r];0,o&&_(o,i)||G(i)||Rt(n,"_data",i)}var a=zn(e);a&&a.vmCount++}(n);else{var t=zn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),o=an();for(var r in e){var i=e[r],a=c(i)?i:i.get;0,o||(t[r]=new He(n,a||O,O,Mt)),r in n||Ut(n,r,i)}}(n,e.computed),e.watch&&e.watch!==tn&&function(n,e){for(var t in e){var o=e[t];if(r(o))for(var i=0;i<o.length;i++)Ft(n,t,o[i]);else Ft(n,t,o)}}(n,e.watch)}var Mt={lazy:!0};function Ut(n,e,t){var o=!an();c(t)?(Lt.get=o?qt(e):$t(t),Lt.set=O):(Lt.get=t.get?o&&!1!==t.cache?qt(e):$t(t.get):O,Lt.set=t.set||O),Object.defineProperty(n,e,Lt)}function qt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),bn.target&&e.depend(),e.value}}function $t(n){return function(){return n.call(this,this)}}function Ft(n,e,t,o){return p(t)&&(o=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,o)}var Gt=0;function Ht(n){var e=n.options;if(n.super){var t=Ht(n.super);if(t!==n.superOptions){n.superOptions=t;var o=function(n){var e,t=n.options,o=n.sealedOptions;for(var r in t)t[r]!==o[r]&&(e||(e={}),e[r]=t[r]);return e}(n);o&&z(n.extendOptions,o),(e=n.options=Pt(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Kt(n){this._init(n)}function Wt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,o=t.cid,r=n._Ctor||(n._Ctor={});if(r[o])return r[o];var i=vt(n)||vt(t.options);var a=function(n){this._init(n)};return(a.prototype=Object.create(t.prototype)).constructor=a,a.cid=e++,a.options=Pt(t.options,n),a.super=t,a.options.props&&function(n){var e=n.options.props;for(var t in e)Rt(n.prototype,"_props",t)}(a),a.options.computed&&function(n){var e=n.options.computed;for(var t in e)Ut(n.prototype,t,e[t])}(a),a.extend=t.extend,a.mixin=t.mixin,a.use=t.use,U.forEach((function(n){a[n]=t[n]})),i&&(a.options.components[i]=a),a.superOptions=t.options,a.extendOptions=n,a.sealedOptions=z({},a.options),r[o]=a,a}}function Vt(n){return n&&(vt(n.Ctor.options)||n.tag)}function Yt(n,e){return r(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!h(n)&&n.test(e)}function Xt(n,e){var t=n.cache,o=n.keys,r=n._vnode;for(var i in t){var a=t[i];if(a){var s=a.name;s&&!e(s)&&Zt(t,i,o,r)}}}function Zt(n,e,t,o){var r=n[e];!r||o&&r.tag===o.tag||r.componentInstance.$destroy(),n[e]=null,k(t,e)}Kt.prototype._init=function(n){var e=this;e._uid=Gt++,e._isVue=!0,e.__v_skip=!0,e._scope=new $n(!0),e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),o=e._parentVnode;t.parent=e.parent,t._parentVnode=o;var r=o.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Pt(Ht(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ye(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=pe(e._renderChildren,r),n.$scopedSlots=t?fe(n.$parent,t.data.scopedSlots,n.$slots):o,n._c=function(e,t,o,r){return Ae(n,e,t,o,r,!1)},n.$createElement=function(e,t,o,r){return Ae(n,e,t,o,r,!0)};var i=t&&t.data;Dn(n,"$attrs",i&&i.attrs||o,null,!0),Dn(n,"$listeners",e._parentListeners||o,null,!0)}(e),nt(e,"beforeCreate",void 0,!1),function(n){var e=ht(n.$options.inject,n);e&&(Sn(!1),Object.keys(e).forEach((function(t){Dn(n,t,e[t])})),Sn(!0))}(e),Nt(e),function(n){var e=n.$options.provide;if(e){var t=c(e)?e.call(n):e;if(!d(t))return;for(var o=Fn(n),r=dn?Reflect.ownKeys(t):Object.keys(t),i=0;i<r.length;i++){var a=r[i];Object.defineProperty(o,a,Object.getOwnPropertyDescriptor(t,a))}}}(e),nt(e,"created"),e.$options.el&&e.$mount(e.$options.el)},function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=On,n.prototype.$delete=jn,n.prototype.$watch=function(n,e,t){if(p(e))return Ft(this,n,e,t);(t=t||{}).user=!0;var o=new He(this,n,e,t);if(t.immediate){var r='callback for immediate watcher "'.concat(o.expression,'"');wn(),Ie(e,this,[o.value],this,r),_n()}return function(){o.teardown()}}}(Kt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var o=this;if(r(n))for(var i=0,a=n.length;i<a;i++)o.$on(n[i],t);else(o._events[n]||(o._events[n]=[])).push(t),e.test(n)&&(o._hasHookEvent=!0);return o},n.prototype.$once=function(n,e){var t=this;function o(){t.$off(n,o),e.apply(t,arguments)}return o.fn=e,t.$on(n,o),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(r(n)){for(var o=0,i=n.length;o<i;o++)t.$off(n[o],e);return t}var a,s=t._events[n];if(!s)return t;if(!e)return t._events[n]=null,t;for(var l=s.length;l--;)if((a=s[l])===e||a.fn===e){s.splice(l,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?C(t):t;for(var o=C(arguments,1),r='event handler for "'.concat(n,'"'),i=0,a=t.length;i<a;i++)Ie(t[i],e,o,e,r)}return e}}(Kt),function(n){n.prototype._update=function(n,e){var t=this,o=t.$el,r=t._vnode,i=Ze(t);t._vnode=n,t.$el=r?t.__patch__(r,n):t.__patch__(t.$el,n,e,!1),i(),o&&(o.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var a=t;a&&a.$vnode&&a.$parent&&a.$vnode===a.$parent._vnode;)a.$parent.$el=a.$el,a=a.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){nt(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||k(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),nt(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Kt),function(n){ue(n.prototype),n.prototype.$nextTick=function(n){return Me(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,o=t.render,i=t._parentVnode;i&&e._isMounted&&(e.$scopedSlots=fe(e.$parent,i.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&we(e._slotsProxy,e.$scopedSlots)),e.$vnode=i;try{pn(e),_e=e,n=o.call(e._renderProxy,e.$createElement)}catch(t){Ee(t,e,"render"),n=e._vnode}finally{_e=null,pn()}return r(n)&&1===n.length&&(n=n[0]),n instanceof hn||(n=mn()),n.parent=i,n}}(Kt);var Jt=[String,RegExp,Array],Qt={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Jt,exclude:Jt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,o=this.keyToCache;if(t){var r=t.tag,i=t.componentInstance,a=t.componentOptions;n[o]={name:Vt(a),tag:r,componentInstance:i},e.push(o),this.max&&e.length>parseInt(this.max)&&Zt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Zt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Xt(n,(function(n){return Yt(e,n)}))})),this.$watch("exclude",(function(e){Xt(n,(function(n){return!Yt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Te(n),t=e&&e.componentOptions;if(t){var o=Vt(t),r=this.include,i=this.exclude;if(r&&(!o||!Yt(r,o))||i&&o&&Yt(i,o))return e;var a=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;a[l]?(e.componentInstance=a[l].componentInstance,k(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return $}};Object.defineProperty(n,"config",e),n.util={warn:_t,extend:z,mergeOptions:Pt,defineReactive:Dn},n.set=On,n.delete=jn,n.nextTick=Me,n.observable=function(n){return zn(n),n},n.options=Object.create(null),U.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,z(n.options.components,Qt),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=C(arguments,1);return t.unshift(this),c(n.install)?n.install.apply(n,t):c(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Pt(this.options,n),this}}(n),Wt(n),function(n){U.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&c(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Kt),Object.defineProperty(Kt.prototype,"$isServer",{get:an}),Object.defineProperty(Kt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Kt,"FunctionalRenderContext",{value:mt}),Kt.version="2.7.15";var no=y("style,class"),eo=y("input,textarea,option,select,progress"),to=y("contenteditable,draggable,spellcheck"),oo=y("events,caret,typing,plaintext-only"),ro=y("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),io="http://www.w3.org/1999/xlink",ao=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},so=function(n){return ao(n)?n.slice(6,n.length):""},lo=function(n){return null==n||!1===n};function co(n){for(var e=n.data,t=n,o=n;a(o.componentInstance);)(o=o.componentInstance._vnode)&&o.data&&(e=uo(o.data,e));for(;a(t=t.parent);)t&&t.data&&(e=uo(e,t.data));return function(n,e){if(a(n)||a(e))return po(n,ho(e));return""}(e.staticClass,e.class)}function uo(n,e){return{staticClass:po(n.staticClass,e.staticClass),class:a(n.class)?[n.class,e.class]:e.class}}function po(n,e){return n?e?n+" "+e:n:e||""}function ho(n){return Array.isArray(n)?function(n){for(var e,t="",o=0,r=n.length;o<r;o++)a(e=ho(n[o]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):d(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var mo={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},fo=y("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),go=y("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),vo=function(n){return fo(n)||go(n)};var yo=Object.create(null);var bo=y("text,number,password,search,email,tel,url");var ko=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(mo[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),wo={create:function(n,e){_o(e)},update:function(n,e){n.data.ref!==e.data.ref&&(_o(n,!0),_o(e))},destroy:function(n){_o(n,!0)}};function _o(n,e){var t=n.data.ref;if(a(t)){var o=n.context,i=n.componentInstance||n.elm,s=e?null:i,l=e?void 0:i;if(c(t))Ie(t,o,[s],o,"template ref function");else{var d=n.data.refInFor,u="string"==typeof t||"number"==typeof t,p=Mn(t),h=o.$refs;if(u||p)if(d){var m=u?h[t]:t.value;e?r(m)&&k(m,i):r(m)?m.includes(i)||m.push(i):u?(h[t]=[i],xo(o,t,h[t])):t.value=[i]}else if(u){if(e&&h[t]!==i)return;h[t]=l,xo(o,t,s)}else if(p){if(e&&t.value!==i)return;t.value=s}else 0}}}function xo(n,e,t){var o=n._setupState;o&&_(o,e)&&(Mn(o[e])?o[e].value=t:o[e]=t)}var To=new hn("",{},[]),Ao=["create","activate","update","remove","destroy"];function Eo(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&a(n.data)===a(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,o=a(t=n.data)&&a(t=t.attrs)&&t.type,r=a(t=e.data)&&a(t=t.attrs)&&t.type;return o===r||bo(o)&&bo(r)}(n,e)||s(n.isAsyncPlaceholder)&&i(e.asyncFactory.error))}function Io(n,e,t){var o,r,i={};for(o=e;o<=t;++o)a(r=n[o].key)&&(i[r]=o);return i}var So={create:Po,update:Po,destroy:function(n){Po(n,To)}};function Po(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,o,r,i=n===To,a=e===To,s=zo(n.data.directives,n.context),l=zo(e.data.directives,e.context),c=[],d=[];for(t in l)o=s[t],r=l[t],o?(r.oldValue=o.value,r.oldArg=o.arg,Oo(r,"update",e,n),r.def&&r.def.componentUpdated&&d.push(r)):(Oo(r,"bind",e,n),r.def&&r.def.inserted&&c.push(r));if(c.length){var u=function(){for(var t=0;t<c.length;t++)Oo(c[t],"inserted",e,n)};i?Wn(e,"insert",u):u()}d.length&&Wn(e,"postpatch",(function(){for(var t=0;t<d.length;t++)Oo(d[t],"componentUpdated",e,n)}));if(!i)for(t in s)l[t]||Oo(s[t],"unbind",n,n,a)}(n,e)}var Co=Object.create(null);function zo(n,e){var t,o,r=Object.create(null);if(!n)return r;for(t=0;t<n.length;t++){if((o=n[t]).modifiers||(o.modifiers=Co),r[Do(o)]=o,e._setupState&&e._setupState.__sfc){var i=o.def||Ct(e,"_setupState","v-"+o.name);o.def="function"==typeof i?{bind:i,update:i}:i}o.def=o.def||Ct(e.$options,"directives",o.name)}return r}function Do(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Oo(n,e,t,o,r){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,o,r)}catch(o){Ee(o,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var jo=[wo,So];function Bo(n,e){var t=e.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||i(n.data.attrs)&&i(e.data.attrs))){var o,r,l=e.elm,c=n.data.attrs||{},d=e.data.attrs||{};for(o in(a(d.__ob__)||s(d._v_attr_proxy))&&(d=e.data.attrs=z({},d)),d)r=d[o],c[o]!==r&&Lo(l,o,r,e.data.pre);for(o in(X||J)&&d.value!==c.value&&Lo(l,"value",d.value),c)i(d[o])&&(ao(o)?l.removeAttributeNS(io,so(o)):to(o)||l.removeAttribute(o))}}function Lo(n,e,t,o){o||n.tagName.indexOf("-")>-1?Ro(n,e,t):ro(e)?lo(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):to(e)?n.setAttribute(e,function(n,e){return lo(e)||"false"===e?"false":"contenteditable"===n&&oo(e)?e:"true"}(e,t)):ao(e)?lo(t)?n.removeAttributeNS(io,so(e)):n.setAttributeNS(io,e,t):Ro(n,e,t)}function Ro(n,e,t){if(lo(t))n.removeAttribute(e);else{if(X&&!Z&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var o=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",o)};n.addEventListener("input",o),n.__ieph=!0}n.setAttribute(e,t)}}var No={create:Bo,update:Bo};function Mo(n,e){var t=e.elm,o=e.data,r=n.data;if(!(i(o.staticClass)&&i(o.class)&&(i(r)||i(r.staticClass)&&i(r.class)))){var s=co(e),l=t._transitionClasses;a(l)&&(s=po(s,ho(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Uo,qo={create:Mo,update:Mo};function $o(n,e,t){var o=Uo;return function r(){var i=e.apply(null,arguments);null!==i&&Ho(n,r,t,o)}}var Fo=ze&&!(en&&Number(en[1])<=53);function Go(n,e,t,o){if(Fo){var r=st,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=r||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}Uo.addEventListener(n,e,on?{capture:t,passive:o}:t)}function Ho(n,e,t,o){(o||Uo).removeEventListener(n,e._wrapper||e,t)}function Ko(n,e){if(!i(n.data.on)||!i(e.data.on)){var t=e.data.on||{},o=n.data.on||{};Uo=e.elm||n.elm,function(n){if(a(n.__r)){var e=X?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}a(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Kn(t,o,Go,Ho,$o,e.context),Uo=void 0}}var Wo,Vo={create:Ko,update:Ko,destroy:function(n){return Ko(n,To)}};function Yo(n,e){if(!i(n.data.domProps)||!i(e.data.domProps)){var t,o,r=e.elm,l=n.data.domProps||{},c=e.data.domProps||{};for(t in(a(c.__ob__)||s(c._v_attr_proxy))&&(c=e.data.domProps=z({},c)),l)t in c||(r[t]="");for(t in c){if(o=c[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),o===l[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=o;var d=i(o)?"":String(o);Xo(r,d)&&(r.value=d)}else if("innerHTML"===t&&go(r.tagName)&&i(r.innerHTML)){(Wo=Wo||document.createElement("div")).innerHTML="<svg>".concat(o,"</svg>");for(var u=Wo.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;u.firstChild;)r.appendChild(u.firstChild)}else if(o!==l[t])try{r[t]=o}catch(n){}}}}function Xo(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,o=n._vModifiers;if(a(o)){if(o.number)return v(t)!==v(e);if(o.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Zo={create:Yo,update:Yo},Jo=x((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var o=n.split(t);o.length>1&&(e[o[0].trim()]=o[1].trim())}})),e}));function Qo(n){var e=nr(n.style);return n.staticStyle?z(n.staticStyle,e):e}function nr(n){return Array.isArray(n)?D(n):"string"==typeof n?Jo(n):n}var er,tr=/^--/,or=/\s*!important$/,rr=function(n,e,t){if(tr.test(e))n.style.setProperty(e,t);else if(or.test(t))n.style.setProperty(S(e),t.replace(or,""),"important");else{var o=ar(e);if(Array.isArray(t))for(var r=0,i=t.length;r<i;r++)n.style[o]=t[r];else n.style[o]=t}},ir=["Webkit","Moz","ms"],ar=x((function(n){if(er=er||document.createElement("div").style,"filter"!==(n=A(n))&&n in er)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<ir.length;t++){var o=ir[t]+e;if(o in er)return o}}));function sr(n,e){var t=e.data,o=n.data;if(!(i(t.staticStyle)&&i(t.style)&&i(o.staticStyle)&&i(o.style))){var r,s,l=e.elm,c=o.staticStyle,d=o.normalizedStyle||o.style||{},u=c||d,p=nr(e.data.style)||{};e.data.normalizedStyle=a(p.__ob__)?z({},p):p;var h=function(n,e){var t,o={};if(e)for(var r=n;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=Qo(r.data))&&z(o,t);(t=Qo(n.data))&&z(o,t);for(var i=n;i=i.parent;)i.data&&(t=Qo(i.data))&&z(o,t);return o}(e,!0);for(s in u)i(h[s])&&rr(l,s,"");for(s in h)(r=h[s])!==u[s]&&rr(l,s,null==r?"":r)}}var lr={create:sr,update:sr},cr=/\s+/;function dr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(cr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function ur(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(cr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),o=" "+e+" ";t.indexOf(o)>=0;)t=t.replace(o," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function pr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&z(e,hr(n.name||"v")),z(e,n),e}return"string"==typeof n?hr(n):void 0}}var hr=x((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),mr=V&&!Z,fr="transition",gr="transitionend",vr="animation",yr="animationend";mr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(fr="WebkitTransition",gr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(vr="WebkitAnimation",yr="webkitAnimationEnd"));var br=V?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function kr(n){br((function(){br(n)}))}function wr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),dr(n,e))}function _r(n,e){n._transitionClasses&&k(n._transitionClasses,e),ur(n,e)}function xr(n,e,t){var o=Ar(n,e),r=o.type,i=o.timeout,a=o.propCount;if(!r)return t();var s="transition"===r?gr:yr,l=0,c=function(){n.removeEventListener(s,d),t()},d=function(e){e.target===n&&++l>=a&&c()};setTimeout((function(){l<a&&c()}),i+1),n.addEventListener(s,d)}var Tr=/\b(transform|all)(,|$)/;function Ar(n,e){var t,o=window.getComputedStyle(n),r=(o[fr+"Delay"]||"").split(", "),i=(o[fr+"Duration"]||"").split(", "),a=Er(r,i),s=(o[vr+"Delay"]||"").split(", "),l=(o[vr+"Duration"]||"").split(", "),c=Er(s,l),d=0,u=0;return"transition"===e?a>0&&(t="transition",d=a,u=i.length):"animation"===e?c>0&&(t="animation",d=c,u=l.length):u=(t=(d=Math.max(a,c))>0?a>c?"transition":"animation":null)?"transition"===t?i.length:l.length:0,{type:t,timeout:d,propCount:u,hasTransform:"transition"===t&&Tr.test(o[fr+"Property"])}}function Er(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Ir(e)+Ir(n[t])})))}function Ir(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function Sr(n,e){var t=n.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var o=pr(n.data.transition);if(!i(o)&&!a(t._enterCb)&&1===t.nodeType){for(var r=o.css,s=o.type,l=o.enterClass,u=o.enterToClass,p=o.enterActiveClass,h=o.appearClass,m=o.appearToClass,f=o.appearActiveClass,g=o.beforeEnter,y=o.enter,b=o.afterEnter,k=o.enterCancelled,w=o.beforeAppear,_=o.appear,x=o.afterAppear,T=o.appearCancelled,A=o.duration,E=Xe,I=Xe.$vnode;I&&I.parent;)E=I.context,I=I.parent;var S=!E._isMounted||!n.isRootInsert;if(!S||_||""===_){var P=S&&h?h:l,C=S&&f?f:p,z=S&&m?m:u,D=S&&w||g,O=S&&c(_)?_:y,j=S&&x||b,B=S&&T||k,L=v(d(A)?A.enter:A);0;var R=!1!==r&&!Z,M=zr(O),U=t._enterCb=N((function(){R&&(_r(t,z),_r(t,C)),U.cancelled?(R&&_r(t,P),B&&B(t)):j&&j(t),t._enterCb=null}));n.data.show||Wn(n,"insert",(function(){var e=t.parentNode,o=e&&e._pending&&e._pending[n.key];o&&o.tag===n.tag&&o.elm._leaveCb&&o.elm._leaveCb(),O&&O(t,U)})),D&&D(t),R&&(wr(t,P),wr(t,C),kr((function(){_r(t,P),U.cancelled||(wr(t,z),M||(Cr(L)?setTimeout(U,L):xr(t,s,U)))}))),n.data.show&&(e&&e(),O&&O(t,U)),R||M||U()}}}function Pr(n,e){var t=n.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var o=pr(n.data.transition);if(i(o)||1!==t.nodeType)return e();if(!a(t._leaveCb)){var r=o.css,s=o.type,l=o.leaveClass,c=o.leaveToClass,u=o.leaveActiveClass,p=o.beforeLeave,h=o.leave,m=o.afterLeave,f=o.leaveCancelled,g=o.delayLeave,y=o.duration,b=!1!==r&&!Z,k=zr(h),w=v(d(y)?y.leave:y);0;var _=t._leaveCb=N((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),b&&(_r(t,c),_r(t,u)),_.cancelled?(b&&_r(t,l),f&&f(t)):(e(),m&&m(t)),t._leaveCb=null}));g?g(x):x()}function x(){_.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),p&&p(t),b&&(wr(t,l),wr(t,u),kr((function(){_r(t,l),_.cancelled||(wr(t,c),k||(Cr(w)?setTimeout(_,w):xr(t,s,_)))}))),h&&h(t,_),b||k||_())}}function Cr(n){return"number"==typeof n&&!isNaN(n)}function zr(n){if(i(n))return!1;var e=n.fns;return a(e)?zr(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Dr(n,e){!0!==e.data.show&&Sr(e)}var Or=function(n){var e,t,o={},c=n.modules,d=n.nodeOps;for(e=0;e<Ao.length;++e)for(o[Ao[e]]=[],t=0;t<c.length;++t)a(c[t][Ao[e]])&&o[Ao[e]].push(c[t][Ao[e]]);function u(n){var e=d.parentNode(n);a(e)&&d.removeChild(e,n)}function p(n,e,t,r,i,l,c){if(a(n.elm)&&a(l)&&(n=l[c]=gn(n)),n.isRootInsert=!i,!function(n,e,t,r){var i=n.data;if(a(i)){var l=a(n.componentInstance)&&i.keepAlive;if(a(i=i.hook)&&a(i=i.init)&&i(n,!1),a(n.componentInstance))return h(n,e),m(t,n.elm,r),s(l)&&function(n,e,t,r){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<o.activate.length;++i)o.activate[i](To,s);e.push(s);break}m(t,n.elm,r)}(n,e,t,r),!0}}(n,e,t,r)){var u=n.data,p=n.children,g=n.tag;a(g)?(n.elm=n.ns?d.createElementNS(n.ns,g):d.createElement(g,n),b(n),f(n,p,e),a(u)&&v(n,e),m(t,n.elm,r)):s(n.isComment)?(n.elm=d.createComment(n.text),m(t,n.elm,r)):(n.elm=d.createTextNode(n.text),m(t,n.elm,r))}}function h(n,e){a(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(v(n,e),b(n)):(_o(n),e.push(n))}function m(n,e,t){a(n)&&(a(t)?d.parentNode(t)===n&&d.insertBefore(n,e,t):d.appendChild(n,e))}function f(n,e,t){if(r(e)){0;for(var o=0;o<e.length;++o)p(e[o],t,n.elm,null,!0,e,o)}else l(n.text)&&d.appendChild(n.elm,d.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return a(n.tag)}function v(n,t){for(var r=0;r<o.create.length;++r)o.create[r](To,n);a(e=n.data.hook)&&(a(e.create)&&e.create(To,n),a(e.insert)&&t.push(n))}function b(n){var e;if(a(e=n.fnScopeId))d.setStyleScope(n.elm,e);else for(var t=n;t;)a(e=t.context)&&a(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e),t=t.parent;a(e=Xe)&&e!==n.context&&e!==n.fnContext&&a(e=e.$options._scopeId)&&d.setStyleScope(n.elm,e)}function k(n,e,t,o,r,i){for(;o<=r;++o)p(t[o],i,n,e,!1,t,o)}function w(n){var e,t,r=n.data;if(a(r))for(a(e=r.hook)&&a(e=e.destroy)&&e(n),e=0;e<o.destroy.length;++e)o.destroy[e](n);if(a(e=n.children))for(t=0;t<n.children.length;++t)w(n.children[t])}function _(n,e,t){for(;e<=t;++e){var o=n[e];a(o)&&(a(o.tag)?(x(o),w(o)):u(o.elm))}}function x(n,e){if(a(e)||a(n.data)){var t,r=o.remove.length+1;for(a(e)?e.listeners+=r:e=function(n,e){function t(){0==--t.listeners&&u(n)}return t.listeners=e,t}(n.elm,r),a(t=n.componentInstance)&&a(t=t._vnode)&&a(t.data)&&x(t,e),t=0;t<o.remove.length;++t)o.remove[t](n,e);a(t=n.data.hook)&&a(t=t.remove)?t(n,e):e()}else u(n.elm)}function T(n,e,t,o){for(var r=t;r<o;r++){var i=e[r];if(a(i)&&Eo(n,i))return r}}function A(n,e,t,r,l,c){if(n!==e){a(e.elm)&&a(r)&&(e=r[l]=gn(e));var u=e.elm=n.elm;if(s(n.isAsyncPlaceholder))a(e.asyncFactory.resolved)?S(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(s(e.isStatic)&&s(n.isStatic)&&e.key===n.key&&(s(e.isCloned)||s(e.isOnce)))e.componentInstance=n.componentInstance;else{var h,m=e.data;a(m)&&a(h=m.hook)&&a(h=h.prepatch)&&h(n,e);var f=n.children,v=e.children;if(a(m)&&g(e)){for(h=0;h<o.update.length;++h)o.update[h](n,e);a(h=m.hook)&&a(h=h.update)&&h(n,e)}i(e.text)?a(f)&&a(v)?f!==v&&function(n,e,t,o,r){var s,l,c,u=0,h=0,m=e.length-1,f=e[0],g=e[m],v=t.length-1,y=t[0],b=t[v],w=!r;for(0;u<=m&&h<=v;)i(f)?f=e[++u]:i(g)?g=e[--m]:Eo(f,y)?(A(f,y,o,t,h),f=e[++u],y=t[++h]):Eo(g,b)?(A(g,b,o,t,v),g=e[--m],b=t[--v]):Eo(f,b)?(A(f,b,o,t,v),w&&d.insertBefore(n,f.elm,d.nextSibling(g.elm)),f=e[++u],b=t[--v]):Eo(g,y)?(A(g,y,o,t,h),w&&d.insertBefore(n,g.elm,f.elm),g=e[--m],y=t[++h]):(i(s)&&(s=Io(e,u,m)),i(l=a(y.key)?s[y.key]:T(y,e,u,m))?p(y,o,n,f.elm,!1,t,h):Eo(c=e[l],y)?(A(c,y,o,t,h),e[l]=void 0,w&&d.insertBefore(n,c.elm,f.elm)):p(y,o,n,f.elm,!1,t,h),y=t[++h]);u>m?k(n,i(t[v+1])?null:t[v+1].elm,t,h,v,o):h>v&&_(e,u,m)}(u,f,v,t,c):a(v)?(a(n.text)&&d.setTextContent(u,""),k(u,null,v,0,v.length-1,t)):a(f)?_(f,0,f.length-1):a(n.text)&&d.setTextContent(u,""):n.text!==e.text&&d.setTextContent(u,e.text),a(m)&&a(h=m.hook)&&a(h=h.postpatch)&&h(n,e)}}}function E(n,e,t){if(s(t)&&a(n.parent))n.parent.data.pendingInsert=e;else for(var o=0;o<e.length;++o)e[o].data.hook.insert(e[o])}var I=y("attrs,class,staticClass,staticStyle,key");function S(n,e,t,o){var r,i=e.tag,l=e.data,c=e.children;if(o=o||l&&l.pre,e.elm=n,s(e.isComment)&&a(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(r=l.hook)&&a(r=r.init)&&r(e,!0),a(r=e.componentInstance)))return h(e,t),!0;if(a(i)){if(a(c))if(n.hasChildNodes())if(a(r=l)&&a(r=r.domProps)&&a(r=r.innerHTML)){if(r!==n.innerHTML)return!1}else{for(var d=!0,u=n.firstChild,p=0;p<c.length;p++){if(!u||!S(u,c[p],t,o)){d=!1;break}u=u.nextSibling}if(!d||u)return!1}else f(e,c,t);if(a(l)){var m=!1;for(var g in l)if(!I(g)){m=!0,v(e,t);break}!m&&l.class&&$e(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,r){if(!i(e)){var l,c=!1,u=[];if(i(n))c=!0,p(e,u);else{var h=a(n.nodeType);if(!h&&Eo(n,e))A(n,e,u,null,null,r);else{if(h){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),s(t)&&S(n,e,u))return E(e,u,!0),n;l=n,n=new hn(d.tagName(l).toLowerCase(),{},[],void 0,l)}var m=n.elm,f=d.parentNode(m);if(p(e,u,m._leaveCb?null:f,d.nextSibling(m)),a(e.parent))for(var v=e.parent,y=g(e);v;){for(var b=0;b<o.destroy.length;++b)o.destroy[b](v);if(v.elm=e.elm,y){for(var k=0;k<o.create.length;++k)o.create[k](To,v);var x=v.data.hook.insert;if(x.merged)for(var T=x.fns.slice(1),I=0;I<T.length;I++)T[I]()}else _o(v);v=v.parent}a(f)?_([n],0,0):a(n.tag)&&w(n)}}return E(e,u,c),e.elm}a(n)&&w(n)}}({nodeOps:ko,modules:[No,qo,Vo,Zo,lr,V?{create:Dr,activate:Dr,remove:function(n,e){!0!==n.data.show?Pr(n,e):e()}}:{}].concat(jo)});Z&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&qr(n,"input")}));var jr={inserted:function(n,e,t,o){"select"===t.tag?(o.elm&&!o.elm._vOptions?Wn(t,"postpatch",(function(){jr.componentUpdated(n,e,t)})):Br(n,e,t.context),n._vOptions=[].map.call(n.options,Nr)):("textarea"===t.tag||bo(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Mr),n.addEventListener("compositionend",Ur),n.addEventListener("change",Ur),Z&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Br(n,e,t.context);var o=n._vOptions,r=n._vOptions=[].map.call(n.options,Nr);if(r.some((function(n,e){return!L(n,o[e])})))(n.multiple?e.value.some((function(n){return Rr(n,r)})):e.value!==e.oldValue&&Rr(e.value,r))&&qr(n,"change")}}};function Br(n,e,t){Lr(n,e,t),(X||J)&&setTimeout((function(){Lr(n,e,t)}),0)}function Lr(n,e,t){var o=e.value,r=n.multiple;if(!r||Array.isArray(o)){for(var i,a,s=0,l=n.options.length;s<l;s++)if(a=n.options[s],r)i=R(o,Nr(a))>-1,a.selected!==i&&(a.selected=i);else if(L(Nr(a),o))return void(n.selectedIndex!==s&&(n.selectedIndex=s));r||(n.selectedIndex=-1)}}function Rr(n,e){return e.every((function(e){return!L(e,n)}))}function Nr(n){return"_value"in n?n._value:n.value}function Mr(n){n.target.composing=!0}function Ur(n){n.target.composing&&(n.target.composing=!1,qr(n.target,"input"))}function qr(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function $r(n){return!n.componentInstance||n.data&&n.data.transition?n:$r(n.componentInstance._vnode)}var Fr={model:jr,show:{bind:function(n,e,t){var o=e.value,r=(t=$r(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;o&&r?(t.data.show=!0,Sr(t,(function(){n.style.display=i}))):n.style.display=o?i:"none"},update:function(n,e,t){var o=e.value;!o!=!e.oldValue&&((t=$r(t)).data&&t.data.transition?(t.data.show=!0,o?Sr(t,(function(){n.style.display=n.__vOriginalDisplay})):Pr(t,(function(){n.style.display="none"}))):n.style.display=o?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,o,r){r||(n.style.display=n.__vOriginalDisplay)}}},Gr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Hr(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Hr(Te(e.children)):n}function Kr(n){var e={},t=n.$options;for(var o in t.propsData)e[o]=n[o];var r=t._parentListeners;for(var o in r)e[A(o)]=r[o];return e}function Wr(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Vr=function(n){return n.tag||me(n)},Yr=function(n){return"show"===n.name},Xr={name:"transition",props:Gr,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Vr)).length){0;var o=this.mode;0;var r=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return r;var i=Hr(r);if(!i)return r;if(this._leaving)return Wr(n,r);var a="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?a+"comment":a+i.tag:l(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var s=(i.data||(i.data={})).transition=Kr(this),c=this._vnode,d=Hr(c);if(i.data.directives&&i.data.directives.some(Yr)&&(i.data.show=!0),d&&d.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,d)&&!me(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var u=d.data.transition=z({},s);if("out-in"===o)return this._leaving=!0,Wn(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Wr(n,r);if("in-out"===o){if(me(i))return c;var p,h=function(){p()};Wn(s,"afterEnter",h),Wn(s,"enterCancelled",h),Wn(u,"delayLeave",(function(n){p=n}))}}return r}}},Zr=z({tag:String,moveClass:String},Gr);function Jr(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Qr(n){n.data.newPos=n.elm.getBoundingClientRect()}function ni(n){var e=n.data.pos,t=n.data.newPos,o=e.left-t.left,r=e.top-t.top;if(o||r){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate(".concat(o,"px,").concat(r,"px)"),i.transitionDuration="0s"}}delete Zr.mode;var ei={Transition:Xr,TransitionGroup:{props:Zr,beforeMount:function(){var n=this,e=this._update;this._update=function(t,o){var r=Ze(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,r(),e.call(n,t,o)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),o=this.prevChildren=this.children,r=this.$slots.default||[],i=this.children=[],a=Kr(this),s=0;s<r.length;s++){if((d=r[s]).tag)if(null!=d.key&&0!==String(d.key).indexOf("__vlist"))i.push(d),t[d.key]=d,(d.data||(d.data={})).transition=a;else;}if(o){var l=[],c=[];for(s=0;s<o.length;s++){var d;(d=o[s]).data.transition=a,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?l.push(d):c.push(d)}this.kept=n(e,null,l),this.removed=c}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Jr),n.forEach(Qr),n.forEach(ni),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,o=t.style;wr(t,e),o.transform=o.WebkitTransform=o.transitionDuration="",t.addEventListener(gr,t._moveCb=function n(o){o&&o.target!==t||o&&!/transform$/.test(o.propertyName)||(t.removeEventListener(gr,n),t._moveCb=null,_r(t,e))})}})))},methods:{hasMove:function(n,e){if(!mr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){ur(t,n)})),dr(t,e),t.style.display="none",this.$el.appendChild(t);var o=Ar(t);return this.$el.removeChild(t),this._hasMove=o.hasTransform}}}};function ti(n,e){for(var t in e)n[t]=e[t];return n}Kt.config.mustUseProp=function(n,e,t){return"value"===t&&eo(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Kt.config.isReservedTag=vo,Kt.config.isReservedAttr=no,Kt.config.getTagNamespace=function(n){return go(n)?"svg":"math"===n?"math":void 0},Kt.config.isUnknownElement=function(n){if(!V)return!0;if(vo(n))return!1;if(n=n.toLowerCase(),null!=yo[n])return yo[n];var e=document.createElement(n);return n.indexOf("-")>-1?yo[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:yo[n]=/HTMLUnknownElement/.test(e.toString())},z(Kt.options.directives,Fr),z(Kt.options.components,ei),Kt.prototype.__patch__=V?Or:O,Kt.prototype.$mount=function(n,e){return function(n,e,t){var o;n.$el=e,n.$options.render||(n.$options.render=mn),nt(n,"beforeMount"),o=function(){n._update(n._render(),t)},new He(n,o,O,{before:function(){n._isMounted&&!n._isDestroyed&&nt(n,"beforeUpdate")}},!0),t=!1;var r=n._preWatchers;if(r)for(var i=0;i<r.length;i++)r[i].run();return null==n.$vnode&&(n._isMounted=!0,nt(n,"mounted")),n}(this,n=n&&V?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},V&&setTimeout((function(){$.devtools&&sn&&sn.emit("init",Kt)}),0);var oi=/[!'()*]/g,ri=function(n){return"%"+n.charCodeAt(0).toString(16)},ii=/%2C/g,ai=function(n){return encodeURIComponent(n).replace(oi,ri).replace(ii,",")};function si(n){try{return decodeURIComponent(n)}catch(n){0}return n}var li=function(n){return null==n||"object"==typeof n?n:String(n)};function ci(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),o=si(t.shift()),r=t.length>0?si(t.join("=")):null;void 0===e[o]?e[o]=r:Array.isArray(e[o])?e[o].push(r):e[o]=[e[o],r]})),e):e}function di(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return ai(e);if(Array.isArray(t)){var o=[];return t.forEach((function(n){void 0!==n&&(null===n?o.push(ai(e)):o.push(ai(e)+"="+ai(n)))})),o.join("&")}return ai(e)+"="+ai(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var ui=/\/?$/;function pi(n,e,t,o){var r=o&&o.options.stringifyQuery,i=e.query||{};try{i=hi(i)}catch(n){}var a={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:gi(e,r),matched:n?fi(n):[]};return t&&(a.redirectedFrom=gi(t,r)),Object.freeze(a)}function hi(n){if(Array.isArray(n))return n.map(hi);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=hi(n[t]);return e}return n}var mi=pi(null,{path:"/"});function fi(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function gi(n,e){var t=n.path,o=n.query;void 0===o&&(o={});var r=n.hash;return void 0===r&&(r=""),(t||"/")+(e||di)(o)+r}function vi(n,e,t){return e===mi?n===e:!!e&&(n.path&&e.path?n.path.replace(ui,"")===e.path.replace(ui,"")&&(t||n.hash===e.hash&&yi(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&yi(n.query,e.query)&&yi(n.params,e.params))))}function yi(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),o=Object.keys(e).sort();return t.length===o.length&&t.every((function(t,r){var i=n[t];if(o[r]!==t)return!1;var a=e[t];return null==i||null==a?i===a:"object"==typeof i&&"object"==typeof a?yi(i,a):String(i)===String(a)}))}function bi(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var o in t.instances){var r=t.instances[o],i=t.enteredCbs[o];if(r&&i){delete t.enteredCbs[o];for(var a=0;a<i.length;a++)r._isBeingDestroyed||i[a](r)}}}}var ki={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,o=e.children,r=e.parent,i=e.data;i.routerView=!0;for(var a=r.$createElement,s=t.name,l=r.$route,c=r._routerViewCache||(r._routerViewCache={}),d=0,u=!1;r&&r._routerRoot!==r;){var p=r.$vnode?r.$vnode.data:{};p.routerView&&d++,p.keepAlive&&r._directInactive&&r._inactive&&(u=!0),r=r.$parent}if(i.routerViewDepth=d,u){var h=c[s],m=h&&h.component;return m?(h.configProps&&wi(m,i,h.route,h.configProps),a(m,i,o)):a()}var f=l.matched[d],g=f&&f.components[s];if(!f||!g)return c[s]=null,a();c[s]={component:g},i.registerRouteInstance=function(n,e){var t=f.instances[s];(e&&t!==n||!e&&t===n)&&(f.instances[s]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){f.instances[s]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==f.instances[s]&&(f.instances[s]=n.componentInstance),bi(l)};var v=f.props&&f.props[s];return v&&(ti(c[s],{route:l,configProps:v}),wi(g,i,l,v)),a(g,i,o)}};function wi(n,e,t,o){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,o);if(r){r=e.props=ti({},r);var i=e.attrs=e.attrs||{};for(var a in r)n.props&&a in n.props||(i[a]=r[a],delete r[a])}}function _i(n,e,t){var o=n.charAt(0);if("/"===o)return n;if("?"===o||"#"===o)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var i=n.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function xi(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var Ti=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},Ai=Mi,Ei=zi,Ii=function(n,e){return Oi(zi(n,e),e)},Si=Oi,Pi=Ni,Ci=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function zi(n,e){for(var t,o=[],r=0,i=0,a="",s=e&&e.delimiter||"/";null!=(t=Ci.exec(n));){var l=t[0],c=t[1],d=t.index;if(a+=n.slice(i,d),i=d+l.length,c)a+=c[1];else{var u=n[i],p=t[2],h=t[3],m=t[4],f=t[5],g=t[6],v=t[7];a&&(o.push(a),a="");var y=null!=p&&null!=u&&u!==p,b="+"===g||"*"===g,k="?"===g||"*"===g,w=t[2]||s,_=m||f;o.push({name:h||r++,prefix:p||"",delimiter:w,optional:k,repeat:b,partial:y,asterisk:!!v,pattern:_?Bi(_):v?".*":"[^"+ji(w)+"]+?"})}}return i<n.length&&(a+=n.substr(i)),a&&o.push(a),o}function Di(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function Oi(n,e){for(var t=new Array(n.length),o=0;o<n.length;o++)"object"==typeof n[o]&&(t[o]=new RegExp("^(?:"+n[o].pattern+")$",Ri(e)));return function(e,o){for(var r="",i=e||{},a=(o||{}).pretty?Di:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,d=i[l.name];if(null==d){if(l.optional){l.partial&&(r+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(Ti(d)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<d.length;u++){if(c=a(d[u]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");r+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(d).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):a(d),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');r+=l.prefix+c}}else r+=l}return r}}function ji(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Bi(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Li(n,e){return n.keys=e,n}function Ri(n){return n&&n.sensitive?"":"i"}function Ni(n,e,t){Ti(e)||(t=e||t,e=[]);for(var o=(t=t||{}).strict,r=!1!==t.end,i="",a=0;a<n.length;a++){var s=n[a];if("string"==typeof s)i+=ji(s);else{var l=ji(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),i+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var d=ji(t.delimiter||"/"),u=i.slice(-d.length)===d;return o||(i=(u?i.slice(0,-d.length):i)+"(?:"+d+"(?=$))?"),i+=r?"$":o&&u?"":"(?="+d+"|$)",Li(new RegExp("^"+i,Ri(t)),e)}function Mi(n,e,t){return Ti(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var o=0;o<t.length;o++)e.push({name:o,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Li(n,e)}(n,e):Ti(n)?function(n,e,t){for(var o=[],r=0;r<n.length;r++)o.push(Mi(n[r],e,t).source);return Li(new RegExp("(?:"+o.join("|")+")",Ri(t)),e)}(n,e,t):function(n,e,t){return Ni(zi(n,t),e,t)}(n,e,t)}Ai.parse=Ei,Ai.compile=Ii,Ai.tokensToFunction=Si,Ai.tokensToRegExp=Pi;var Ui=Object.create(null);function qi(n,e,t){e=e||{};try{var o=Ui[n]||(Ui[n]=Ai.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),o(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function $i(n,e,t,o){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var i=(r=ti({},n)).params;return i&&"object"==typeof i&&(r.params=ti({},i)),r}if(!r.path&&r.params&&e){(r=ti({},r))._normalized=!0;var a=ti(ti({},e.params),r.params);if(e.name)r.name=e.name,r.params=a;else if(e.matched.length){var s=e.matched[e.matched.length-1].path;r.path=qi(s,a,e.path)}else 0;return r}var l=function(n){var e="",t="",o=n.indexOf("#");o>=0&&(e=n.slice(o),n=n.slice(0,o));var r=n.indexOf("?");return r>=0&&(t=n.slice(r+1),n=n.slice(0,r)),{path:n,query:t,hash:e}}(r.path||""),c=e&&e.path||"/",d=l.path?_i(l.path,c,t||r.append):c,u=function(n,e,t){void 0===e&&(e={});var o,r=t||ci;try{o=r(n||"")}catch(n){o={}}for(var i in e){var a=e[i];o[i]=Array.isArray(a)?a.map(li):li(a)}return o}(l.query,r.query,o&&o.options.parseQuery),p=r.hash||l.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:d,query:u,hash:p}}var Fi,Gi=function(){},Hi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,o=this.$route,r=t.resolve(this.to,o,this.append),i=r.location,a=r.route,s=r.href,l={},c=t.options.linkActiveClass,d=t.options.linkExactActiveClass,u=null==c?"router-link-active":c,p=null==d?"router-link-exact-active":d,h=null==this.activeClass?u:this.activeClass,m=null==this.exactActiveClass?p:this.exactActiveClass,f=a.redirectedFrom?pi(null,$i(a.redirectedFrom),null,t):a;l[m]=vi(o,f,this.exactPath),l[h]=this.exact||this.exactPath?l[m]:function(n,e){return 0===n.path.replace(ui,"/").indexOf(e.path.replace(ui,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(o,f);var g=l[m]?this.ariaCurrentValue:null,v=function(n){Ki(n)&&(e.replace?t.replace(i,Gi):t.push(i,Gi))},y={click:Ki};Array.isArray(this.event)?this.event.forEach((function(n){y[n]=v})):y[this.event]=v;var b={class:l},k=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:v,isActive:l[h],isExactActive:l[m]});if(k){if(1===k.length)return k[0];if(k.length>1||!k.length)return 0===k.length?n():n("span",{},k)}if("a"===this.tag)b.on=y,b.attrs={href:s,"aria-current":g};else{var w=function n(e){var t;if(e)for(var o=0;o<e.length;o++){if("a"===(t=e[o]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(w){w.isStatic=!1;var _=w.data=ti({},w.data);for(var x in _.on=_.on||{},_.on){var T=_.on[x];x in y&&(_.on[x]=Array.isArray(T)?T:[T])}for(var A in y)A in _.on?_.on[A].push(y[A]):_.on[A]=v;var E=w.data.attrs=ti({},w.data.attrs);E.href=s,E["aria-current"]=g}else b.on=y}return n(this.tag,b,this.$slots.default)}};function Ki(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Wi="undefined"!=typeof window;function Vi(n,e,t,o,r){var i=e||[],a=t||Object.create(null),s=o||Object.create(null);n.forEach((function(n){!function n(e,t,o,r,i,a){var s=r.path,l=r.name;0;var c=r.pathToRegexpOptions||{},d=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return xi(e.path+"/"+n)}(s,i,c.strict);"boolean"==typeof r.caseSensitive&&(c.sensitive=r.caseSensitive);var u={path:d,regex:Yi(d,c),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:l,parent:i,matchAs:a,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var i=a?xi(a+"/"+r.path):void 0;n(e,t,o,r,u,i)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==r.alias)for(var p=Array.isArray(r.alias)?r.alias:[r.alias],h=0;h<p.length;++h){0;var m={path:p[h],children:r.children};n(e,t,o,m,i,u.path||"/")}l&&(o[l]||(o[l]=u))}(i,a,s,n,r)}));for(var l=0,c=i.length;l<c;l++)"*"===i[l]&&(i.push(i.splice(l,1)[0]),c--,l--);return{pathList:i,pathMap:a,nameMap:s}}function Yi(n,e){return Ai(n,[],e)}function Xi(n,e){var t=Vi(n),o=t.pathList,r=t.pathMap,i=t.nameMap;function a(n,t,a){var s=$i(n,t,!1,e),c=s.name;if(c){var d=i[c];if(!d)return l(null,s);var u=d.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&u.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=qi(d.path,s.params),l(d,s,a)}if(s.path){s.params={};for(var h=0;h<o.length;h++){var m=o[h],f=r[m];if(Zi(f.regex,s.path,s.params))return l(f,s,a)}}return l(null,s)}function s(n,t){var o=n.redirect,r="function"==typeof o?o(pi(n,t,null,e)):o;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return l(null,t);var s=r,c=s.name,d=s.path,u=t.query,p=t.hash,h=t.params;if(u=s.hasOwnProperty("query")?s.query:u,p=s.hasOwnProperty("hash")?s.hash:p,h=s.hasOwnProperty("params")?s.params:h,c){i[c];return a({_normalized:!0,name:c,query:u,hash:p,params:h},void 0,t)}if(d){var m=function(n,e){return _i(n,e.parent?e.parent.path:"/",!0)}(d,n);return a({_normalized:!0,path:qi(m,h),query:u,hash:p},void 0,t)}return l(null,t)}function l(n,t,o){return n&&n.redirect?s(n,o||t):n&&n.matchAs?function(n,e,t){var o=a({_normalized:!0,path:qi(t,e.params)});if(o){var r=o.matched,i=r[r.length-1];return e.params=o.params,l(i,e)}return l(null,e)}(0,t,n.matchAs):pi(n,t,o,e)}return{match:a,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Vi([e||n],o,r,i,t),t&&t.alias.length&&Vi(t.alias.map((function(n){return{path:n,children:[e]}})),o,r,i,t)},getRoutes:function(){return o.map((function(n){return r[n]}))},addRoutes:function(n){Vi(n,o,r,i)}}}function Zi(n,e,t){var o=e.match(n);if(!o)return!1;if(!t)return!0;for(var r=1,i=o.length;r<i;++r){var a=n.keys[r-1];a&&(t[a.name||"pathMatch"]="string"==typeof o[r]?si(o[r]):o[r])}return!0}var Ji=Wi&&window.performance&&window.performance.now?window.performance:Date;function Qi(){return Ji.now().toFixed(3)}var na=Qi();function ea(){return na}function ta(n){return na=n}var oa=Object.create(null);function ra(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=ti({},window.history.state);return t.key=ea(),window.history.replaceState(t,"",e),window.addEventListener("popstate",sa),function(){window.removeEventListener("popstate",sa)}}function ia(n,e,t,o){if(n.app){var r=n.options.scrollBehavior;r&&n.app.$nextTick((function(){var i=function(){var n=ea();if(n)return oa[n]}(),a=r.call(n,e,t,o?i:null);a&&("function"==typeof a.then?a.then((function(n){pa(n,i)})).catch((function(n){0})):pa(a,i))}))}}function aa(){var n=ea();n&&(oa[n]={x:window.pageXOffset,y:window.pageYOffset})}function sa(n){aa(),n.state&&n.state.key&&ta(n.state.key)}function la(n){return da(n.x)||da(n.y)}function ca(n){return{x:da(n.x)?n.x:window.pageXOffset,y:da(n.y)?n.y:window.pageYOffset}}function da(n){return"number"==typeof n}var ua=/^#\d/;function pa(n,e){var t,o="object"==typeof n;if(o&&"string"==typeof n.selector){var r=ua.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(r){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),o=n.getBoundingClientRect();return{x:o.left-t.left-e.x,y:o.top-t.top-e.y}}(r,i={x:da((t=i).x)?t.x:0,y:da(t.y)?t.y:0})}else la(n)&&(e=ca(n))}else o&&la(n)&&(e=ca(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var ha,ma=Wi&&((-1===(ha=window.navigator.userAgent).indexOf("Android 2.")&&-1===ha.indexOf("Android 4.0")||-1===ha.indexOf("Mobile Safari")||-1!==ha.indexOf("Chrome")||-1!==ha.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function fa(n,e){aa();var t=window.history;try{if(e){var o=ti({},t.state);o.key=ea(),t.replaceState(o,"",n)}else t.pushState({key:ta(Qi())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function ga(n){fa(n,!0)}var va={redirected:2,aborted:4,cancelled:8,duplicated:16};function ya(n,e){return ka(n,e,va.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return wa.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function ba(n,e){return ka(n,e,va.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function ka(n,e,t,o){var r=new Error(o);return r._isRouter=!0,r.from=n,r.to=e,r.type=t,r}var wa=["params","query","hash"];function _a(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function xa(n,e){return _a(n)&&n._isRouter&&(null==e||n.type===e)}function Ta(n,e,t){var o=function(r){r>=n.length?t():n[r]?e(n[r],(function(){o(r+1)})):o(r+1)};o(0)}function Aa(n){return function(e,t,o){var r=!1,i=0,a=null;Ea(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){r=!0,i++;var l,c=Pa((function(e){var r;((r=e).__esModule||Sa&&"Module"===r[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:Fi.extend(e),t.components[s]=e,--i<=0&&o()})),d=Pa((function(n){var e="Failed to resolve async component "+s+": "+n;a||(a=_a(n)?n:new Error(e),o(a))}));try{l=n(c,d)}catch(n){d(n)}if(l)if("function"==typeof l.then)l.then(c,d);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,d)}}})),r||o()}}function Ea(n,e){return Ia(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Ia(n){return Array.prototype.concat.apply([],n)}var Sa="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Pa(n){var e=!1;return function(){for(var t=[],o=arguments.length;o--;)t[o]=arguments[o];if(!e)return e=!0,n.apply(this,t)}}var Ca=function(n,e){this.router=n,this.base=function(n){if(!n)if(Wi){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=mi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function za(n,e,t,o){var r=Ea(n,(function(n,o,r,i){var a=function(n,e){"function"!=typeof n&&(n=Fi.extend(n));return n.options[e]}(n,e);if(a)return Array.isArray(a)?a.map((function(n){return t(n,o,r,i)})):t(a,o,r,i)}));return Ia(o?r.reverse():r)}function Da(n,e){if(e)return function(){return n.apply(e,arguments)}}Ca.prototype.listen=function(n){this.cb=n},Ca.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Ca.prototype.onError=function(n){this.errorCbs.push(n)},Ca.prototype.transitionTo=function(n,e,t){var o,r=this;try{o=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(o,(function(){r.updateRoute(o),e&&e(o),r.ensureURL(),r.router.afterHooks.forEach((function(n){n&&n(o,i)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(o)})))}),(function(n){t&&t(n),n&&!r.ready&&(xa(n,va.redirected)&&i===mi||(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)}))))}))},Ca.prototype.confirmTransition=function(n,e,t){var o=this,r=this.current;this.pending=n;var i,a,s=function(n){!xa(n)&&_a(n)&&(o.errorCbs.length?o.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=r.matched.length-1;if(vi(n,r)&&l===c&&n.matched[l]===r.matched[c])return this.ensureURL(),n.hash&&ia(this.router,r,n,!1),s(((a=ka(i=r,n,va.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",a));var d=function(n,e){var t,o=Math.max(n.length,e.length);for(t=0;t<o&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=d.updated,p=d.deactivated,h=d.activated,m=[].concat(function(n){return za(n,"beforeRouteLeave",Da,!0)}(p),this.router.beforeHooks,function(n){return za(n,"beforeRouteUpdate",Da)}(u),h.map((function(n){return n.beforeEnter})),Aa(h)),f=function(e,t){if(o.pending!==n)return s(ba(r,n));try{e(n,r,(function(e){!1===e?(o.ensureURL(!0),s(function(n,e){return ka(n,e,va.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(r,n))):_a(e)?(o.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(ya(r,n)),"object"==typeof e&&e.replace?o.replace(e):o.push(e)):t(e)}))}catch(n){s(n)}};Ta(m,f,(function(){Ta(function(n){return za(n,"beforeRouteEnter",(function(n,e,t,o){return function(n,e,t){return function(o,r,i){return n(o,r,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,o)}))}(h).concat(o.router.resolveHooks),f,(function(){if(o.pending!==n)return s(ba(r,n));o.pending=null,e(n),o.router.app&&o.router.app.$nextTick((function(){bi(n)}))}))}))},Ca.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Ca.prototype.setupListeners=function(){},Ca.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=mi,this.pending=null};var Oa=function(n){function e(e,t){n.call(this,e,t),this._startLocation=ja(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,o=ma&&t;o&&this.listeners.push(ra());var r=function(){var t=n.current,r=ja(n.base);n.current===mi&&r===n._startLocation||n.transitionTo(r,(function(n){o&&ia(e,n,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){fa(xi(o.base+n.fullPath)),ia(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){ga(xi(o.base+n.fullPath)),ia(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(ja(this.base)!==this.current.fullPath){var e=xi(this.base+this.current.fullPath);n?fa(e):ga(e)}},e.prototype.getCurrentLocation=function(){return ja(this.base)},e}(Ca);function ja(n){var e=window.location.pathname,t=e.toLowerCase(),o=n.toLowerCase();return!n||t!==o&&0!==t.indexOf(xi(o+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Ba=function(n){function e(e,t,o){n.call(this,e,t),o&&function(n){var e=ja(n);if(!/^\/#/.test(e))return window.location.replace(xi(n+"/#"+e)),!0}(this.base)||La()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=ma&&e;t&&this.listeners.push(ra());var o=function(){var e=n.current;La()&&n.transitionTo(Ra(),(function(o){t&&ia(n.router,o,e,!0),ma||Ua(o.fullPath)}))},r=ma?"popstate":"hashchange";window.addEventListener(r,o),this.listeners.push((function(){window.removeEventListener(r,o)}))}},e.prototype.push=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){Ma(n.fullPath),ia(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this,r=this.current;this.transitionTo(n,(function(n){Ua(n.fullPath),ia(o.router,n,r,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Ra()!==e&&(n?Ma(e):Ua(e))},e.prototype.getCurrentLocation=function(){return Ra()},e}(Ca);function La(){var n=Ra();return"/"===n.charAt(0)||(Ua("/"+n),!1)}function Ra(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Na(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Ma(n){ma?fa(Na(n)):window.location.hash=n}function Ua(n){ma?ga(Na(n)):window.location.replace(Na(n))}var qa=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var o=this;this.transitionTo(n,(function(n){o.stack=o.stack.slice(0,o.index+1).concat(n),o.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var o=this;this.transitionTo(n,(function(n){o.stack=o.stack.slice(0,o.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var o=this.stack[t];this.confirmTransition(o,(function(){var n=e.current;e.index=t,e.updateRoute(o),e.router.afterHooks.forEach((function(e){e&&e(o,n)}))}),(function(n){xa(n,va.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Ca),$a=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Xi(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!ma&&!1!==n.fallback,this.fallback&&(e="hash"),Wi||(e="abstract"),this.mode=e,e){case"history":this.history=new Oa(this,n.base);break;case"hash":this.history=new Ba(this,n.base,this.fallback);break;case"abstract":this.history=new qa(this,n.base);break;default:0}},Fa={currentRoute:{configurable:!0}};$a.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Fa.currentRoute.get=function(){return this.history&&this.history.current},$a.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Oa||t instanceof Ba){var o=function(n){t.setupListeners(),function(n){var o=t.current,r=e.options.scrollBehavior;ma&&r&&"fullPath"in n&&ia(e,n,o,!1)}(n)};t.transitionTo(t.getCurrentLocation(),o,o)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},$a.prototype.beforeEach=function(n){return Ha(this.beforeHooks,n)},$a.prototype.beforeResolve=function(n){return Ha(this.resolveHooks,n)},$a.prototype.afterEach=function(n){return Ha(this.afterHooks,n)},$a.prototype.onReady=function(n,e){this.history.onReady(n,e)},$a.prototype.onError=function(n){this.history.onError(n)},$a.prototype.push=function(n,e,t){var o=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){o.history.push(n,e,t)}));this.history.push(n,e,t)},$a.prototype.replace=function(n,e,t){var o=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){o.history.replace(n,e,t)}));this.history.replace(n,e,t)},$a.prototype.go=function(n){this.history.go(n)},$a.prototype.back=function(){this.go(-1)},$a.prototype.forward=function(){this.go(1)},$a.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},$a.prototype.resolve=function(n,e,t){var o=$i(n,e=e||this.history.current,t,this),r=this.match(o,e),i=r.redirectedFrom||r.fullPath;return{location:o,route:r,href:function(n,e,t){var o="hash"===t?"#"+e:e;return n?xi(n+"/"+o):o}(this.history.base,i,this.mode),normalizedTo:o,resolved:r}},$a.prototype.getRoutes=function(){return this.matcher.getRoutes()},$a.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==mi&&this.history.transitionTo(this.history.getCurrentLocation())},$a.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==mi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties($a.prototype,Fa);var Ga=$a;function Ha(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}$a.install=function n(e){if(!n.installed||Fi!==e){n.installed=!0,Fi=e;var t=function(n){return void 0!==n},o=function(n,e){var o=n.$options._parentVnode;t(o)&&t(o=o.data)&&t(o=o.registerRouteInstance)&&o(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,o(this,this)},destroyed:function(){o(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",ki),e.component("RouterLink",Hi);var r=e.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},$a.version="3.6.5",$a.isNavigationFailure=xa,$a.NavigationFailureType=va,$a.START_LOCATION=mi,Wi&&window.Vue&&window.Vue.use($a);t(108);t(27),t(133);var Ka={"components/AlgoliaSearchBox":()=>Promise.all([t.e(0),t.e(57)]).then(t.bind(null,1410)),"components/ArchivesPage":()=>Promise.all([t.e(0),t.e(62)]).then(t.bind(null,338)),"components/ArticleInfo":()=>Promise.all([t.e(0),t.e(65)]).then(t.bind(null,339)),"components/BloggerBar":()=>Promise.all([t.e(0),t.e(66)]).then(t.bind(null,340)),"components/BodyBgImg":()=>Promise.all([t.e(0),t.e(67)]).then(t.bind(null,341)),"components/Buttons":()=>Promise.all([t.e(0),t.e(63)]).then(t.bind(null,342)),"components/Catalogue":()=>Promise.all([t.e(0),t.e(68)]).then(t.bind(null,343)),"components/CategoriesBar":()=>Promise.all([t.e(0),t.e(69)]).then(t.bind(null,302)),"components/CategoriesPage":()=>Promise.all([t.e(0),t.e(36)]).then(t.bind(null,344)),"components/DropdownLink":()=>Promise.all([t.e(0),t.e(59)]).then(t.bind(null,280)),"components/DropdownTransition":()=>Promise.all([t.e(0),t.e(70)]).then(t.bind(null,258)),"components/Footer":()=>Promise.all([t.e(0),t.e(71)]).then(t.bind(null,345)),"components/Home":()=>Promise.all([t.e(0),t.e(2),t.e(83)]).then(t.bind(null,1403)),"components/MainLayout":()=>Promise.all([t.e(0),t.e(72)]).then(t.bind(null,272)),"components/NavLink":()=>t.e(84).then(t.bind(null,257)),"components/NavLinks":()=>Promise.all([t.e(0),t.e(53)]).then(t.bind(null,304)),"components/Navbar":()=>Promise.all([t.e(0),t.e(1)]).then(t.bind(null,1402)),"components/Page":()=>Promise.all([t.e(0),t.e(3),t.e(79)]).then(t.bind(null,1404)),"components/PageEdit":()=>Promise.all([t.e(0),t.e(64)]).then(t.bind(null,346)),"components/PageNav":()=>Promise.all([t.e(0),t.e(60)]).then(t.bind(null,347)),"components/Pagination":()=>Promise.all([t.e(0),t.e(73)]).then(t.bind(null,271)),"components/PostList":()=>Promise.all([t.e(0),t.e(74)]).then(t.bind(null,270)),"components/RightMenu":()=>Promise.all([t.e(0),t.e(75)]).then(t.bind(null,348)),"components/Sidebar":()=>Promise.all([t.e(0),t.e(25)]).then(t.bind(null,349)),"components/SidebarButton":()=>Promise.all([t.e(0),t.e(76)]).then(t.bind(null,351)),"components/SidebarGroup":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,305)),"components/SidebarLink":()=>Promise.all([t.e(0),t.e(77)]).then(t.bind(null,281)),"components/SidebarLinks":()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,278)),"components/TagsBar":()=>Promise.all([t.e(0),t.e(78)]).then(t.bind(null,303)),"components/TagsPage":()=>Promise.all([t.e(0),t.e(37)]).then(t.bind(null,350)),"components/UpdateArticle":()=>Promise.all([t.e(0),t.e(80)]).then(t.bind(null,308)),"global-components/Badge":()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,1413)),"global-components/CodeBlock":()=>Promise.resolve().then(t.bind(null,96)),"global-components/CodeGroup":()=>Promise.resolve().then(t.bind(null,97)),"layouts/404":()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,1411)),"layouts/Layout":()=>Promise.all([t.e(0),t.e(1),t.e(2),t.e(3),t.e(4)]).then(t.bind(null,1412)),NotFound:()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,1411)),Layout:()=>Promise.all([t.e(0),t.e(1),t.e(2),t.e(3),t.e(4)]).then(t.bind(null,1412))},Wa={"v-85bdd9ea":()=>t.e(10).then(t.bind(null,1414)),"v-6925fc6a":()=>t.e(16).then(t.bind(null,1415)),"v-1768c78b":()=>t.e(48).then(t.bind(null,1416)),"v-7712b53a":()=>t.e(38).then(t.bind(null,1417)),"v-64e6ec21":()=>t.e(41).then(t.bind(null,1418)),"v-4b5112b7":()=>t.e(54).then(t.bind(null,1419)),"v-79024ae1":()=>t.e(42).then(t.bind(null,1420)),"v-31756950":()=>t.e(17).then(t.bind(null,1421)),"v-ecb0658a":()=>t.e(49).then(t.bind(null,1422)),"v-50f0ebb8":()=>t.e(45).then(t.bind(null,1423)),"v-5715e518":()=>t.e(33).then(t.bind(null,1424)),"v-79ea4098":()=>t.e(11).then(t.bind(null,1425)),"v-15bc16e8":()=>t.e(27).then(t.bind(null,1426)),"v-59516fd0":()=>t.e(24).then(t.bind(null,1427)),"v-b1c15bd8":()=>t.e(14).then(t.bind(null,1428)),"v-6708e7a4":()=>t.e(31).then(t.bind(null,1429)),"v-ee230736":()=>t.e(15).then(t.bind(null,1430)),"v-528ab2c0":()=>t.e(56).then(t.bind(null,1431)),"v-37ada763":()=>t.e(34).then(t.bind(null,1432)),"v-4d187859":()=>t.e(26).then(t.bind(null,1433)),"v-5fe2f82a":()=>t.e(43).then(t.bind(null,1434)),"v-133d1240":()=>t.e(22).then(t.bind(null,1435)),"v-454563b7":()=>t.e(12).then(t.bind(null,1436)),"v-e5d3b2c8":()=>t.e(39).then(t.bind(null,1437)),"v-3e6d5088":()=>t.e(61).then(t.bind(null,1438)),"v-0f94ca37":()=>t.e(46).then(t.bind(null,1439)),"v-18d0d1f3":()=>t.e(40).then(t.bind(null,1440)),"v-506d853c":()=>t.e(19).then(t.bind(null,1441)),"v-0be1e874":()=>t.e(50).then(t.bind(null,1442)),"v-12269d11":()=>t.e(47).then(t.bind(null,1443)),"v-1ea08276":()=>t.e(35).then(t.bind(null,1444)),"v-2eb7860a":()=>t.e(20).then(t.bind(null,1445)),"v-08f1aba4":()=>t.e(28).then(t.bind(null,1446)),"v-2805a304":()=>t.e(29).then(t.bind(null,1447)),"v-a270744c":()=>t.e(21).then(t.bind(null,1448)),"v-d1c7090a":()=>t.e(82).then(t.bind(null,1449)),"v-e2faeb9a":()=>t.e(58).then(t.bind(null,1450)),"v-4e4c0bd2":()=>t.e(55).then(t.bind(null,1451)),"v-b209049a":()=>t.e(23).then(t.bind(null,1452)),"v-4daf549f":()=>t.e(51).then(t.bind(null,1453)),"v-cc0607ba":()=>t.e(32).then(t.bind(null,1454)),"v-6858bbb7":()=>t.e(44).then(t.bind(null,1455)),"v-50cabb35":()=>t.e(52).then(t.bind(null,1456)),"v-5f409860":()=>t.e(85).then(t.bind(null,1457)),"v-1865687e":()=>t.e(13).then(t.bind(null,1458)),"v-74fdeb5c":()=>t.e(87).then(t.bind(null,1459)),"v-c79c043e":()=>t.e(30).then(t.bind(null,1460)),"v-00210ffc":()=>t.e(88).then(t.bind(null,1461)),"v-191607df":()=>t.e(89).then(t.bind(null,1462)),"v-745d12aa":()=>t.e(18).then(t.bind(null,1463)),"v-70767908":()=>t.e(86).then(t.bind(null,1464)),"v-4a760958":()=>t.e(81).then(t.bind(null,1465))};function Va(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Ya=/-(\w)/g,Xa=Va(n=>n.replace(Ya,(n,e)=>e?e.toUpperCase():"")),Za=/\B([A-Z])/g,Ja=Va(n=>n.replace(Za,"-$1").toLowerCase()),Qa=Va(n=>n.charAt(0).toUpperCase()+n.slice(1));function ns(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n(Qa(Xa(e))):n(Qa(e))||n(Ja(e))}const es=Object.assign({},Ka,Wa),ts=n=>es[n],os=n=>Wa[n],rs=n=>Ka[n],is=n=>Kt.component(n);function as(n){return ns(os,n)}function ss(n){return ns(rs,n)}function ls(n){return ns(ts,n)}function cs(n){return ns(is,n)}function ds(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!cs(n)&&ls(n)){const e=await ls(n)();Kt.component(n,e.default)}}))}function us(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var ps=t(93),hs=t.n(ps),ms=t(94),fs=t.n(ms),gs={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${fs()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=ys(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=bs(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return hs()([{name:"description",content:this.$description}],n,this.siteMeta,ks)},updateCanonicalLink(){vs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",ys(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){bs(null,this.currentMetaTags),vs()}};function vs(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function ys(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function bs(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function ks(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}var ws=t(48),_s={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(ws)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),o=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),r=window.innerHeight+t;for(let n=0;n<e.length;n++){const i=e[n],a=e[n+1],s=0===n&&0===t||t>=i.parentElement.offsetTop+10&&(!a||t<a.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(i.hash)){const t=i;if(r===o)for(let t=n+1;t<e.length;t++)if(l===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},xs=t(25),Ts=t.n(xs),As={mounted(){Ts.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Kt.component(n.name)||Ts.a.start(),t()}),this.$router.afterEach(()=>{Ts.a.done(),this.isSidebarOpen=!1})}};t(241),t(242);class Es{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var Is={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="点击复制",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new Es).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},Ss="auto",Ps="zoom-in",Cs="zoom-out",zs="grab",Ds="move";function Os(n,e,t){var o=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r={passive:!1};o?n.addEventListener(e,t,r):n.removeEventListener(e,t,r)}function js(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Bs(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Ls(n,e,t){!function(n){var e=Rs,t=Ns;if(n.transition){var o=n.transition;delete n.transition,n[e]=o}if(n.transform){var r=n.transform;delete n.transform,n[t]=r}}(e);var o=n.style,r={};for(var i in e)t&&(r[i]=o[i]||""),o[i]=e[i];return r}var Rs="transition",Ns="transform",Ms="transform",Us="transitionend";var qs=function(){},$s={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:qs,onClose:qs,onGrab:qs,onMove:qs,onRelease:qs,onBeforeOpen:qs,onBeforeClose:qs,onBeforeGrab:qs,onBeforeRelease:qs,onImageLoading:qs,onImageLoaded:qs},Fs={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),Hs(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var o=this.lastScrollPosition.x-e,r=this.lastScrollPosition.y-t,i=this.options.scrollThreshold;(Math.abs(r)>=i||Math.abs(o)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(Gs(n)&&!Hs(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){Gs(n)&&!Hs(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,o=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,o)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,o=e.clientY;this.move(t,o)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function Gs(n){return 0===n.button}function Hs(n){return n.metaKey||n.ctrlKey}var Ks={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Ls(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Os(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Ls(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},Ws="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Vs=function(){function n(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,o.key,o)}}return function(e,t,o){return t&&n(e.prototype,t),o&&n(e,o),e}}(),Ys=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o])}return n},Xs={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Bs(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,o=n.transitionDuration,r=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?zs:Cs,transition:Ms+"\n        "+o+"s\n        "+r,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Ls(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Ls(this.el,{transform:"none"})},grab:function(n,e,t){var o=Zs(),r=o.x-n,i=o.y-e;Ls(this.el,{cursor:Ds,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var o=Zs(),r=o.x-n,i=o.y-e;Ls(this.el,{transition:Ms,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Ls(this.el,this.styleClose)},restoreOpenStyle:function(){Ls(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=Zs(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,o=this.instance.options,r=o.customSize,i=o.scaleBase;if(!r&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(r&&"object"===(void 0===r?"undefined":Ws(r)))return{x:r.width/this.rect.width,y:r.height/this.rect.height};var a=this.rect.width/2,s=this.rect.height/2,l=Zs(),c={x:l.x-a,y:l.y-s},d=c.x/a,u=c.y/s,p=i+Math.min(d,u);if(r&&"string"==typeof r){var h=t||this.el.naturalWidth,m=e||this.el.naturalHeight,f=parseFloat(r)*h/(100*this.rect.width),g=parseFloat(r)*m/(100*this.rect.height);if(p>f||p>g)return{x:f,y:g}}return{x:p,y:p}}};function Zs(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function Js(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(o){Os(n,o,e[o],t)}))}var Qs=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(Xs),this.overlay=Object.create(Ks),this.handler=Object.create(Fs),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=Ys({},$s,e),this.overlay.init(this),this.handler.init(this)}return Vs(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=Ps,Os(n,"click",this.handler.click),this.options.preloadImage&&js(Bs(n)));return this}},{key:"config",value:function(n){return n?(Ys(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var o="string"==typeof n?document.querySelector(n):n;if("IMG"===o.tagName){if(this.options.onBeforeOpen(o),this.target.init(o,this),!this.options.preloadImage){var r=this.target.srcOriginal;null!=r&&(this.options.onImageLoading(o),js(r,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Os(document,"scroll",this.handler.scroll),Os(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Os(window,"resize",this.handler.resizeWindow);var i=function n(){Os(o,Us,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&Js(document,e.handler,!0),t(o)};return Os(o,Us,i),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ss,this.overlay.fadeOut(),this.target.zoomOut(),Os(document,"scroll",this.handler.scroll,!1),Os(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Os(window,"resize",this.handler.resizeWindow,!1);var o=function o(){Os(t,Us,o,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&Js(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Os(t,Us,o),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var r=this.target.el;this.options.onBeforeGrab(r),this.released=!1,this.target.grab(n,e,t);var i=function n(){Os(r,Us,n,!1),o(r)};return Os(r,Us,i),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Ds,this.target.move(n,e,t);var r=this.target.el,i=function n(){Os(r,Us,n,!1),o(r)};return Os(r,Us,i),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ss,this.target.restoreOpenStyle();var o=function o(){Os(t,Us,o,!1),n.lock=!1,n.released=!0,e(t)};return Os(t,Us,o),this}}}]),n}();const nl=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),el=Number("500");class tl{constructor(){this.instance=new Qs(nl)}update(n=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=".theme-vdoing-content img:not(.no-zoom)",e=el){setTimeout(()=>this.update(n),e)}}var ol=[gs,_s,As,Is,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new tl,this.$vuepress.zooming.updateDelay()}}],rl={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return us("layout",n),Kt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},il=t(4),al=Object(il.a)(rl,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(al,"mixins",ol);const sl=[{name:"v-85bdd9ea",path:"/fun/kodi/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-85bdd9ea").then(t)}},{path:"/fun/kodi/index.html",redirect:"/fun/kodi/"},{path:"/01.娱乐/01.影视/05.kodi.html",redirect:"/fun/kodi/"},{name:"v-6925fc6a",path:"/fun/jellyfin/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-6925fc6a").then(t)}},{path:"/fun/jellyfin/index.html",redirect:"/fun/jellyfin/"},{path:"/01.娱乐/01.影视/07.Jellyfin.html",redirect:"/fun/jellyfin/"},{name:"v-1768c78b",path:"/pages/6222e7/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-1768c78b").then(t)}},{path:"/pages/6222e7/index.html",redirect:"/pages/6222e7/"},{path:"/01.娱乐/01.影视/01.iptv.html",redirect:"/pages/6222e7/"},{name:"v-7712b53a",path:"/fun/musictag/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-7712b53a").then(t)}},{path:"/fun/musictag/index.html",redirect:"/fun/musictag/"},{path:"/01.娱乐/02.音乐/02.musictag.html",redirect:"/fun/musictag/"},{name:"v-64e6ec21",path:"/fun/audiobookshelf/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-64e6ec21").then(t)}},{path:"/fun/audiobookshelf/index.html",redirect:"/fun/audiobookshelf/"},{path:"/01.娱乐/03.有声书/01.audiobookshelf.html",redirect:"/fun/audiobookshelf/"},{name:"v-4b5112b7",path:"/fun/navidrome/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-4b5112b7").then(t)}},{path:"/fun/navidrome/index.html",redirect:"/fun/navidrome/"},{path:"/01.娱乐/02.音乐/01.Navidrome .html",redirect:"/fun/navidrome/"},{name:"v-79024ae1",path:"/fun/TaleBook/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-79024ae1").then(t)}},{path:"/fun/TaleBook/index.html",redirect:"/fun/TaleBook/"},{path:"/01.娱乐/04.电子书/01.TaleBook.html",redirect:"/fun/TaleBook/"},{name:"v-31756950",path:"/tool/qBittorrent/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-31756950").then(t)}},{path:"/tool/qBittorrent/index.html",redirect:"/tool/qBittorrent/"},{path:"/02.工具/01.影视自动化工具/01.qBittorrent.html",redirect:"/tool/qBittorrent/"},{name:"v-ecb0658a",path:"/fun/reader/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-ecb0658a").then(t)}},{path:"/fun/reader/index.html",redirect:"/fun/reader/"},{path:"/01.娱乐/04.电子书/02.reader.html",redirect:"/fun/reader/"},{name:"v-50f0ebb8",path:"/tool/transmission/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-50f0ebb8").then(t)}},{path:"/tool/transmission/index.html",redirect:"/tool/transmission/"},{path:"/02.工具/01.影视自动化工具/02.transmission.html",redirect:"/tool/transmission/"},{name:"v-5715e518",path:"/tool/moviepilot/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-5715e518").then(t)}},{path:"/tool/moviepilot/index.html",redirect:"/tool/moviepilot/"},{path:"/02.工具/01.影视自动化工具/04.moviepilot.html",redirect:"/tool/moviepilot/"},{name:"v-79ea4098",path:"/tool/nastool/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-79ea4098").then(t)}},{path:"/tool/nastool/index.html",redirect:"/tool/nastool/"},{path:"/02.工具/01.影视自动化工具/03.nastool.html",redirect:"/tool/nastool/"},{name:"v-15bc16e8",path:"/tool/iyuu/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-15bc16e8").then(t)}},{path:"/tool/iyuu/index.html",redirect:"/tool/iyuu/"},{path:"/02.工具/01.影视自动化工具/06.IYUU.html",redirect:"/tool/iyuu/"},{name:"v-59516fd0",path:"/tool/wizarr/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-59516fd0").then(t)}},{path:"/tool/wizarr/index.html",redirect:"/tool/wizarr/"},{path:"/02.工具/01.影视自动化工具/07.Wizarr.html",redirect:"/tool/wizarr/"},{name:"v-b1c15bd8",path:"/tool/chinesesubfinder/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-b1c15bd8").then(t)}},{path:"/tool/chinesesubfinder/index.html",redirect:"/tool/chinesesubfinder/"},{path:"/02.工具/01.影视自动化工具/05.chinesesubfinder.html",redirect:"/tool/chinesesubfinder/"},{name:"v-6708e7a4",path:"/tool/mediaservertools/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-6708e7a4").then(t)}},{path:"/tool/mediaservertools/index.html",redirect:"/tool/mediaservertools/"},{path:"/02.工具/01.影视自动化工具/08.MediaServerTools.html",redirect:"/tool/mediaservertools/"},{name:"v-ee230736",path:"/tool/alist/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-ee230736").then(t)}},{path:"/tool/alist/index.html",redirect:"/tool/alist/"},{path:"/02.工具/02.下载/01.alist.html",redirect:"/tool/alist/"},{name:"v-528ab2c0",path:"/tool/aliyundrive/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-528ab2c0").then(t)}},{path:"/tool/aliyundrive/index.html",redirect:"/tool/aliyundrive/"},{path:"/02.工具/02.下载/03.阿里云订阅.html",redirect:"/tool/aliyundrive/"},{name:"v-37ada763",path:"/tool/clouddrive2/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-37ada763").then(t)}},{path:"/tool/clouddrive2/index.html",redirect:"/tool/clouddrive2/"},{path:"/02.工具/02.下载/04.clouddrive2.html",redirect:"/tool/clouddrive2/"},{name:"v-4d187859",path:"/tool/aira2/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-4d187859").then(t)}},{path:"/tool/aira2/index.html",redirect:"/tool/aira2/"},{path:"/02.工具/02.下载/02.aira2+ariang下载.html",redirect:"/tool/aira2/"},{name:"v-5fe2f82a",path:"/tool/xiaoya/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-5fe2f82a").then(t)}},{path:"/tool/xiaoya/index.html",redirect:"/tool/xiaoya/"},{path:"/02.工具/02.下载/05.小雅alist.html",redirect:"/tool/xiaoya/"},{name:"v-133d1240",path:"/tool/qinglong/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-133d1240").then(t)}},{path:"/tool/qinglong/index.html",redirect:"/tool/qinglong/"},{path:"/02.工具/03.签到/01.青龙面板.html",redirect:"/tool/qinglong/"},{name:"v-454563b7",path:"/tool/qiandao/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-454563b7").then(t)}},{path:"/tool/qiandao/index.html",redirect:"/tool/qiandao/"},{path:"/02.工具/03.签到/02.qiandao框架.html",redirect:"/tool/qiandao/"},{name:"v-e5d3b2c8",path:"/tool/heimdall/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-e5d3b2c8").then(t)}},{path:"/tool/heimdall/index.html",redirect:"/tool/heimdall/"},{path:"/02.工具/04.导航/02.heimdall.html",redirect:"/tool/heimdall/"},{name:"v-3e6d5088",path:"/tool/navnetic/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-3e6d5088").then(t)}},{path:"/tool/navnetic/index.html",redirect:"/tool/navnetic/"},{path:"/02.工具/04.导航/03.navnetic.html",redirect:"/tool/navnetic/"},{name:"v-0f94ca37",path:"/tool/siyuan/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-0f94ca37").then(t)}},{path:"/tool/siyuan/index.html",redirect:"/tool/siyuan/"},{path:"/02.工具/05.笔记/01.思源笔记.html",redirect:"/tool/siyuan/"},{name:"v-18d0d1f3",path:"/tool/wiznote/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-18d0d1f3").then(t)}},{path:"/tool/wiznote/index.html",redirect:"/tool/wiznote/"},{path:"/02.工具/05.笔记/02.为知笔记.html",redirect:"/tool/wiznote/"},{name:"v-506d853c",path:"/tool/homepage/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-506d853c").then(t)}},{path:"/tool/homepage/index.html",redirect:"/tool/homepage/"},{path:"/02.工具/04.导航/01.homepage.html",redirect:"/tool/homepage/"},{name:"v-0be1e874",path:"/tool/typecho/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-0be1e874").then(t)}},{path:"/tool/typecho/index.html",redirect:"/tool/typecho/"},{path:"/02.工具/05.笔记/03.typecho个人博客.html",redirect:"/tool/typecho/"},{name:"v-12269d11",path:"/tool/pandora/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-12269d11").then(t)}},{path:"/tool/pandora/index.html",redirect:"/tool/pandora/"},{path:"/02.工具/10.其它工具/01.pandora.html",redirect:"/tool/pandora/"},{name:"v-1ea08276",path:"/tool/vaultwarden/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-1ea08276").then(t)}},{path:"/tool/vaultwarden/index.html",redirect:"/tool/vaultwarden/"},{path:"/02.工具/10.其它工具/02.vaultwarden密码管理器.html",redirect:"/tool/vaultwarden/"},{name:"v-2eb7860a",path:"/tool/hass/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-2eb7860a").then(t)}},{path:"/tool/hass/index.html",redirect:"/tool/hass/"},{path:"/02.工具/10.其它工具/03.hass.html",redirect:"/tool/hass/"},{name:"v-08f1aba4",path:"/tool/baota/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-08f1aba4").then(t)}},{path:"/tool/baota/index.html",redirect:"/tool/baota/"},{path:"/02.工具/10.其它工具/05.宝塔.html",redirect:"/tool/baota/"},{name:"v-2805a304",path:"/tool/verysync/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-2805a304").then(t)}},{path:"/tool/verysync/index.html",redirect:"/tool/verysync/"},{path:"/02.工具/10.其它工具/06.微力同步.html",redirect:"/tool/verysync/"},{name:"v-a270744c",path:"/tool/dc/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-a270744c").then(t)}},{path:"/tool/dc/index.html",redirect:"/tool/dc/"},{path:"/02.工具/10.其它工具/04.dc容器更新.html",redirect:"/tool/dc/"},{name:"v-d1c7090a",path:"/tool/webssh/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-d1c7090a").then(t)}},{path:"/tool/webssh/index.html",redirect:"/tool/webssh/"},{path:"/02.工具/10.其它工具/08.webssh.html",redirect:"/tool/webssh/"},{name:"v-e2faeb9a",path:"/network/ddnsto/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-e2faeb9a").then(t)}},{path:"/network/ddnsto/index.html",redirect:"/network/ddnsto/"},{path:"/03.网络/01.ddnsto.html",redirect:"/network/ddnsto/"},{name:"v-4e4c0bd2",path:"/tool/easyimage/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-4e4c0bd2").then(t)}},{path:"/tool/easyimage/index.html",redirect:"/tool/easyimage/"},{path:"/02.工具/10.其它工具/07.图床.html",redirect:"/tool/easyimage/"},{name:"v-b209049a",path:"/network/ddnsgo/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-b209049a").then(t)}},{path:"/network/ddnsgo/index.html",redirect:"/network/ddnsgo/"},{path:"/03.网络/02.ddnsgo.html",redirect:"/network/ddnsgo/"},{name:"v-4daf549f",path:"/network/npm/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-4daf549f").then(t)}},{path:"/network/npm/index.html",redirect:"/network/npm/"},{path:"/03.网络/03.npm.html",redirect:"/network/npm/"},{name:"v-cc0607ba",path:"/network/lucky/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-cc0607ba").then(t)}},{path:"/network/lucky/index.html",redirect:"/network/lucky/"},{path:"/03.网络/04.lucky.html",redirect:"/network/lucky/"},{name:"v-6858bbb7",path:"/network/sakurafrp/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-6858bbb7").then(t)}},{path:"/network/sakurafrp/index.html",redirect:"/network/sakurafrp/"},{path:"/03.网络/05.sakurafrp.html",redirect:"/network/sakurafrp/"},{name:"v-50cabb35",path:"/other/tmdb_api/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-50cabb35").then(t)}},{path:"/other/tmdb_api/index.html",redirect:"/other/tmdb_api/"},{path:"/04.其它/01.TMDB API申请.html",redirect:"/other/tmdb_api/"},{name:"v-5f409860",path:"/other/compose/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-5f409860").then(t)}},{path:"/other/compose/index.html",redirect:"/other/compose/"},{path:"/04.其它/04.其他compose.html",redirect:"/other/compose/"},{name:"v-1865687e",path:"/other/synology/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-1865687e").then(t)}},{path:"/other/synology/index.html",redirect:"/other/synology/"},{path:"/04.其它/03.4600刷黑群不入门教程.html",redirect:"/other/synology/"},{name:"v-74fdeb5c",path:"/categories/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-74fdeb5c").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-c79c043e",path:"/other/bot/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-c79c043e").then(t)}},{path:"/other/bot/index.html",redirect:"/other/bot/"},{path:"/04.其它/02.微信机器人.html",redirect:"/other/bot/"},{name:"v-00210ffc",path:"/tags/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-00210ffc").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-191607df",path:"/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-191607df").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-745d12aa",path:"/fun/emby/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-745d12aa").then(t)}},{path:"/fun/emby/index.html",redirect:"/fun/emby/"},{path:"/01.娱乐/01.影视/06.emby.html",redirect:"/fun/emby/"},{name:"v-70767908",path:"/archives/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-70767908").then(t)}},{path:"/archives/index.html",redirect:"/archives/"},{path:"/@pages/archivesPage.html",redirect:"/archives/"},{name:"v-4a760958",path:"/other/linux/",component:al,beforeEnter:(n,e,t)=>{ds("Layout","v-4a760958").then(t)}},{path:"/other/linux/index.html",redirect:"/other/linux/"},{path:"/04.其它/05.Linux常用命令.html",redirect:"/other/linux/"},{path:"*",component:al}],ll={title:"myblog",description:"一些教程文档",base:"/",headTags:[["link",{rel:"icon",href:"/img/syue.ico"}]],pages:[{title:"kodi",frontmatter:{title:"kodi",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/kodi/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/01.%E5%BD%B1%E8%A7%86/05.kodi.html",relativePath:"01.娱乐/01.影视/05.kodi.md",key:"v-85bdd9ea",path:"/fun/kodi/",headers:[{level:2,title:"1、Kodi 介绍与安装",slug:"_1、kodi-介绍与安装",normalizedTitle:"1、kodi 介绍与安装",charIndex:16},{level:3,title:"1、介绍",slug:"_1、介绍",normalizedTitle:"1、介绍",charIndex:33},{level:3,title:"2、软件安装",slug:"_2、软件安装",normalizedTitle:"2、软件安装",charIndex:152},{level:2,title:"2、Kodi 使用",slug:"_2、kodi-使用",normalizedTitle:"2、kodi 使用",charIndex:232},{level:3,title:"1）默认皮肤更改中文",slug:"_1-默认皮肤更改中文",normalizedTitle:"1）默认皮肤更改中文",charIndex:246},{level:3,title:"2）插件安装设置",slug:"_2-插件安装设置",normalizedTitle:"2）插件安装设置",charIndex:765},{level:3,title:"3）音频设置",slug:"_3-音频设置",normalizedTitle:"3）音频设置",charIndex:882},{level:3,title:"4）播放器设置",slug:"_4-播放器设置",normalizedTitle:"4）播放器设置",charIndex:1108},{level:3,title:"5）互联网访问",slug:"_5-互联网访问",normalizedTitle:"5）互联网访问",charIndex:1350},{level:2,title:"3、jellyfin 插件",slug:"_3、jellyfin-插件",normalizedTitle:"3、jellyfin 插件",charIndex:1375},{level:3,title:"1）kodi 安装 jf 插件",slug:"_1-kodi-安装-jf-插件",normalizedTitle:"1）kodi 安装 jf 插件",charIndex:1393},{level:3,title:"2）jf 安装 kodi 插件",slug:"_2-jf-安装-kodi-插件",normalizedTitle:"2）jf 安装 kodi 插件",charIndex:1711},{level:2,title:"4、地平线皮肤安装",slug:"_4、地平线皮肤安装",normalizedTitle:"4、地平线皮肤安装",charIndex:1831},{level:3,title:"1、安装插件库",slug:"_1、安装插件库",normalizedTitle:"1、安装插件库",charIndex:1845},{level:3,title:"2、安装插件",slug:"_2、安装插件",normalizedTitle:"2、安装插件",charIndex:2377},{level:2,title:"5、地平线皮肤使用 kodi",slug:"_5、地平线皮肤使用-kodi",normalizedTitle:"5、地平线皮肤使用 kodi",charIndex:2689},{level:3,title:"1、切换皮肤",slug:"_1、切换皮肤",normalizedTitle:"1、切换皮肤",charIndex:2708},{level:3,title:"2、切换中文",slug:"_2、切换中文",normalizedTitle:"2、切换中文",charIndex:2818},{level:3,title:"3、安装依赖",slug:"_3、安装依赖",normalizedTitle:"3、安装依赖",charIndex:2988},{level:3,title:"4、添加影视库",slug:"_4、添加影视库",normalizedTitle:"4、添加影视库",charIndex:3019},{level:3,title:"5、主页视图设置",slug:"_5、主页视图设置",normalizedTitle:"5、主页视图设置",charIndex:3513},{level:3,title:"6、其他设置",slug:"_6、其他设置",normalizedTitle:"6、其他设置",charIndex:3739},{level:3,title:"7、插件安装",slug:"_7、插件安装",normalizedTitle:"7、插件安装",charIndex:3861},{level:3,title:"8、字幕插件",slug:"_8、字幕插件",normalizedTitle:"8、字幕插件",charIndex:3976},{level:3,title:"9、Emby 官方源",slug:"_9、emby-官方源",normalizedTitle:"9、emby 官方源",charIndex:4234},{level:3,title:"10、遥控器插件",slug:"_10、遥控器插件",normalizedTitle:"10、遥控器插件",charIndex:4291},{level:3,title:"12、备份插件",slug:"_12、备份插件",normalizedTitle:"12、备份插件",charIndex:4560},{level:3,title:"13、安卓手机遥控器",slug:"_13、安卓手机遥控器",normalizedTitle:"13、安卓手机遥控器",charIndex:4712},{level:3,title:"14、歌词插件",slug:"_14、歌词插件",normalizedTitle:"14、歌词插件",charIndex:5153},{level:3,title:"15、其它插件",slug:"_15、其它插件",normalizedTitle:"15、其它插件",charIndex:5362}],headersStr:"1、Kodi 介绍与安装 1、介绍 2、软件安装 2、Kodi 使用 1）默认皮肤更改中文 2）插件安装设置 3）音频设置 4）播放器设置 5）互联网访问 3、jellyfin 插件 1）kodi 安装 jf 插件 2）jf 安装 kodi 插件 4、地平线皮肤安装 1、安装插件库 2、安装插件 5、地平线皮肤使用 kodi 1、切换皮肤 2、切换中文 3、安装依赖 4、添加影视库 5、主页视图设置 6、其他设置 7、插件安装 8、字幕插件 9、Emby 官方源 10、遥控器插件 12、备份插件 13、安卓手机遥控器 14、歌词插件 15、其它插件",content:"# Kodi 安装配置\n\n\n# 1、Kodi 介绍与安装\n\n\n# 1、介绍\n\nKodi 和 Infuse 类似，都是本地媒体库管理软件。不同的是，Kodi 免费！\n\n虽然 Kodi 免费，但它的功能却非常强大，解码能力也极其优秀。可惜有点复杂，加上其反人类的操作逻辑，常常让新手一脸懵逼的放弃。\n\n\n# 2、软件安装\n\n从 Kodi 官网 下载 并安装，安装完成后打开 kodi 软件，点击继续。\n\n\n\n然后对于一些权限点击允许，并进入 kodi 页面。\n\n\n# 2、Kodi 使用\n\n\n# 1）默认皮肤更改中文\n\n如果需要安装地平线皮肤的话可以不进行这一步的更改，到时候更换了皮肤再更改。\n\n点击 系统设置（齿轮图标）\n\n\n\n进入 Interface\n\n\n\n选择 皮肤 skin，将 Fonts 字符集 修改为 Arial based。这一步非常关键，如果没有选择 Arial 字体，那么调整为中文后会出现乱码。\n\n\n\n进入 区域 Regional， 在语言 Language 里修改语言为 Chinese-(SimSimple) 简体中文，等待安装即可。\n\n\n\n如果 language 里只有一个 English，没有附带中文语言，也不用紧张，我们可以从插件库自行安装：返回到主界面，点击 Add-on（插件），找到“Install From Repository”，再依次选择 Look & feel→language，找到中文简体 Chinese（Simple），安装后启用，即可启用中文界面。\n\n\n\n如果不能修改为中文的话，重启一下 kodi： 返回 kodi 主页，点击开关，然后点击跳出的 Exit，退出 kodi。\n\n\n\n顺便添加一下中文键盘 chinese basePY，以便 Kodi 输入中文。\n\n\n\n\n# 2）插件安装设置\n\n默认从未知来源安装插件是关闭的，所以我们先得打开未知来源。\n\n点击系统 system，进入系统设置。\n\n\n\n选择插件 Add-ons，将未知来源打开。\n\n\n\n打开未知来源后，把更新插件选择为从任何库。\n\n\n\n\n# 3）音频设置\n\n回音壁和音响用户，其他用户不用看保持默认即可。\n\n默认是基础设置，需要左下角的齿轮下点击 3 下后切换到专家模式。\n\n\n\nKODI 默认的声道数为 2.0，如果就是用电视机喇叭，那么这里不需要调整。如果使用回音壁或者家庭影院，需要修改成匹配所用家庭影院系统的声道数。例如，如果你正在使用 7.1 声道的回音壁或者家庭影院，就选择 7.1 声道，这个选项会影响 LPCM 和多声道 AAC 音轨的表现：\n\n\n\n音频直通设置：\n\n\n\n\n# 4）播放器设置\n\n因为电影和大部分电视都是 24P 帧率，在使用 4K 60hz 的电视观看时会因为帧率不同而产生卡顿。（120hz 电视可以做 5:5 pulldown 所以不会卡顿）\n\n不过大部分电视机都有电影模式，只要检测到 24 帧信号，就会自动激活电影模式。所以，我们要开启帧率同步，开启方式是：设置 → 播放器 → 视频，调整显示刷新率，选择“在开始/停止时”\n\n\n\n这样，播放电影时，电视机就能自动进入电影模式；在电影结束后，又会恢复 60hz，UI 更顺滑。\n\n\n# 5）互联网访问\n\n按实际填写不多赘述\n\n\n\n\n# 3、jellyfin 插件\n\n\n# 1）kodi 安装 jf 插件\n\n点击插件\n\n\n\n选择从 zip 文件安装插件。\n\n\n\n选择 nas 中的 repository.jellyfin.kodi.zip 文件进行安装。\n\n\n\n等会右上角跳出件已经安装。\n\n\n\n我们继续点从库安装：\n\n\n\n选择 jf 插件。\n\n\n\n选择视频插件。\n\n\n\n这里的 jellycon 是新开项目目前 bug 比较多，我们用第二个。\n\n\n\n点击安装。\n\n\n\n第一次安装会跳出服务器添加引导，按引导添加服务器。\n\n\n\n输入 jf 服务器地址。\n\n\n\n输入账号密码。\n\n\n\n这里选择默认即可。\n\n\n\n安装完成右上角会出现提示，然后点击要添加的影视库。等待服务器同步后就能看见添加的影视了。\n\n\n\n\n# 2）jf 安装 kodi 插件\n\n然后我们回到 jellyfin 后台安装 kodi 同步插件，安装完成后得重启 jf，状态才是 active。\n\n\n\n点击插件下竖着的三点进入菜单，选择设置。\n\n\n\n选择要同步的媒体点击保存。\n\n\n\n\n# 4、地平线皮肤安装\n\n\n# 1、安装插件库\n\n两种方法任选一样即可。\n\n1）zip 文件安装\n\n点击 Add-ons (插件)\n\n\n\n选择 Install from zip file (从 zip 文件安装)。PS：Kodi 只能安装 zip 格式插件，如果遇到其他格式如 RAR 等需要把里面的 zip 解压出来。\n\n\n\n因为我们的插件放在 nas 里，所以选择 SMB 来连接 nas。\n\n\n\n选择自己的机器\n\n\n\n这里是输入绿联网络服务里的账号密码。\n\n\n\n然后进入 nas 文件夹，找到之前存放插件库的目录。\n\n\n\n2）官方源安装\n\n在系统设置，进入文件管理。\n\n\n\n点击添加源。\n\n\n\n点击“无”，然后手动输入地址https://jurialmunkey.github.io/repository.jurialmunkey，自动命名为repository.jurialmunkey后点确定。\n\n\n\n成功完成后文件管理会增加一个“repository.jurialmunkey”的文件地址。\n\n\n\n回到系统设置，进入插件。\n\n\n\n点击从 zip 文件安装。\n\n\n\n进入我们刚刚添加的 repository.jurialmunkey。\n\n\n\n选择 zip 文件点击 ok。\n\n\n\n\n# 2、安装插件\n\nPS:安装提前设置好梯子。\n\n右上角显示插件库安装完后，点击从库安装。\n\n\n\n选择 jurialmunkey。\n\n\n\n选择 界面外观 Look and feel。\n\n\n\n选择皮肤 skin。\n\n\n\n选择地平线 2 皮肤（Arctic Horizon2）。\n\n\n\n点击安装。\n\n\n\n跳出所需的依赖，点击 ok。\n\n\n\n如果一直安装不上的话，先去插件里把已有的这些依赖全部卸载掉，再来重新安装。\n\nPS：对于一些依赖比如 Tmdbmoviehelper 安装需要有梯子。另外它的使用也需要，否则会报错，如果不想显示报错可以在插件列表中选中该插件按菜单键禁用，不要进该插件设置里禁用。\n\n皮肤下载中。\n\n\n\n\n# 5、地平线皮肤使用 kodi\n\n\n# 1、切换皮肤\n\n皮肤下载完成后询问是否切换到此皮肤，点击 yes。\n\n\n\n切换后询问是否保持使用此皮肤 点击 yes。\n\n\n\n皮肤启动中。\n\n\n\n经过一小会加载后，皮肤安装完成了，这就是安装完毕的初始样式。\n\n\n\n\n# 2、切换中文\n\n点击右上角的设置图标，选择 settings 设置。\n\n\n\n选择皮肤 skin，把字符集 fonts 改成 CJK-Chinese/Japanese/Korean。\n\n\n\n选择区域 Regional，把语言 language 由默认的英语改成 Chinese（Simple).\n\n\n\n更改完成，界面变成了中文。\n\n\n\n\n# 3、安装依赖\n\n然后选到第一项把缺失依赖全部安装\n\n\n\n\n# 4、添加影视库\n\n推荐通过 jf 插件来导入视频。\n\n点击视频-文件。\n\n\n\n点击添加视频。\n\n\n\n点击浏览。\n\n\n\n这里有多个方式可以选择自己的影片保存的位置，点击添加网络位置。\n\n\n\n然后输入绿联的 IP 地址和绿联网络服务里的账号密码。\n\n\n\n再到这里找到刚刚设置的 IP 地址，点进去找自己的媒体库。Ps：Kodi 什么协议都可，但是 SMB 出卡顿的概率会更大，FTP 相对卡顿概率比较小。\n\n\n\n选择好媒体文件后点击确定。\n\n\n\n进行一些内容的设置：\n\n * 该目录包含选择电影或者电视。\n * 选择信息提供者：Local information only（只读取本地信息，如果有刮削好的话建议这个）或者 TMDB。\n * 在下方勾选电影在以片名命名的单独目录中和嵌套扫描。\n\n设置完成后点击确定。\n\n\n\n点击是来刷新信息。\n\n\n\n右上角会开始扫描内容。\n\n\n\n等一会，右上角显示扫描结束。\n\n\n\n点击刚刚增加的华语电影进去，等一会可以看到海报墙。\n\n\n\n添加完影视库后可以点击右上方的设置-视图。\n\n\n\n可以选择不同的视图设置。\n\n\n\n影视库的视频海报墙设置好了。\n\n\n# 5、主页视图设置\n\n此时我们的主页是这样。\n\n\n\n主页往下翻是这样。\n\n\n\n那我们想要主页也有海报墙怎么办？ 由于首页不能改样式，所以我们只能先把首页的关掉，再把下面的电影海报行顶上来。\n\n点击设置-皮肤-菜单-自定义主菜单。\n\n\n\n首先把电影的全屏小部件的内容改成无。\n\n\n\n然后点击小部件。\n\n\n\n把左边三个分类里对应的风格都改成 Poster，展开信息改成 Full。\n\n\n\n此时我们的主页变成了这样。\n\n\n\n其他的影视库是一样的设置。\n\n\n# 6、其他设置\n\n点击设置\n\n\n\n1）菜单样式\n\n菜单样式设置为图标或者其他设置。\n\n\n\n\n\n2）设置为专家模式\n\n把系统模式设置为专家模式。\n\n\n\n3）调整 Kodi 快进速度\n\n点击播放器-视频。\n\n\n\n将跳过步骤改为如下设置。\n\n\n\n\n# 7、插件安装\n\n点击设置-插件。\n\n\n\n来到插件界面。\n\n\n\n遥控器按快退键，进入设置，选择从 zip 文件安装。\n\n\n\n可以直接选择 zip 文件，也可以按取消。\n\n\n\n然后选择是从库安装还是从 zip 文件安装。\n\n\n\n\n# 8、字幕插件\n\n把 repository.xbmc-addons-chinese.zip 文件放到 nas 中，选择从 zip 文件安装插件，等会右上角跳出件已经安装。\n\n\n\n我们继续点从库安装：\n\n\n\n选择刚刚已经安装的这个字幕插件：\n\n\n\n点击字幕选项\n\n\n\n一共有 3 个字幕源。\n\n\n\n每个都点击进去然后点安装。\n\n\n\n三个都安装完成\n\n\n\n安装以后，随便打开一部电影，在右下角有字幕的按钮，点击这个字幕按钮。\n\n\n\n进入字幕页面，点击下载字幕：\n\n\n\n可以看到匹配到的字幕，点击一下即可下载。\n\n\n\n\n# 9、Emby 官方源\n\n输入路径http://kodi.emby.media，命名为emby后确定。\n\n\n\n\n# 10、遥控器插件\n\nkodi 默认遥控器配置比较反人类建议修改一下。\n\n点击搜索。\n\n\n\n搜索 Keymap Editor 插件。\n\n\n\n点击安装\n\n\n\n安装后右上角有提示。\n\n\n\n点击运行。\n\n\n\n点击编辑\n\n\n\n选择全屏视频\n\n\n\n选择 Playback\n\n\n\n选择停止\n\n\n\n编辑键（这时会跳出来一个倒计时，在 5 秒内你需要按下遥控器对应的按键（这里就是返回键））\n\n\n\n返回点击保存\n\n\n\n现在你再去播放影片，播放过程中按下返回键就可以直接退出了，类似的还可以自行设置 iptv 菜单调用键，上下键换台等等，非常方便。\n\n\n# 12、备份插件\n\n搜索 backup 插件\n\n\n\n点击安装\n\n\n\n安装完成后点击运行\n\n\n\n选择打开设置。\n\n\n\n常规目录下压缩文档如果有勾选建议取消勾选。\n\n\n\n设置挂载远程目录\n\n\n\n选择要备份的数据\n\n\n\n可以设置定时任务\n\n\n\n然后点击确定保存\n\n\n\n可以点击备份立即执行备份一次。\n\n\n\n\n# 13、安卓手机遥控器\n\n1）kodi 设置\n\n服务设置-常规里勾选向其它系统声明服务。\n\n\n\n在控制里开启 kodi web 控制，自行设置密码和端口。\n\n\n\n往下滑可以勾选这两项。\n\n\n\n在系统信息-摘要里查看 kodi 的 ip 地址。\n\n\n\n浏览器 Kodi ip+端口访问 web 界面。\n\n\n\n2）web 界面 UI\n\n默认的 Web 界面 UI 是 Kodi web interface-Chorus2。我们也可根据自己喜好更换 Web 界面 UI ，这里推荐 TeX。\n\n点开插件-所有库-Web 界面。\n\n\n\n选择 Tex。\n\n\n\n点击安装。\n\n打开设置-服务设置-控制，点击 web 界面。\n\n\n\n选择 Tex。\n\n\n\nTex UI 的界面是这样的。\n\n\n\n3）手机 app 下载使用\n\n下载 app 并安装：\n\n\n\n根据引导添加 kodi。它会自动搜索局域网的 kodi，如果搜索不到的话可以手动添加。\n\n\n\nApp 界面如下，功能强大，自行探索。\n\n\n\n\n# 14、歌词插件\n\nCU LRC Lyrics 是 Kodi 的歌词插件，该插件能搜索内嵌、本地文件(以相同文件名与歌曲文件保存在相同目录的 .lrc/.txt 歌词文件)或通过刮削器(网易云音乐等)获取歌词。不管是播放自己创建的音乐资料库还是音乐插件(网易云音乐插件)都能匹配展示。\n\n插件获取地址：http://www.kodiplayer.cn/plugins/3044.html\n\n使用插件后效果：\n\n\n\n\n# 15、其它插件\n\n更多插件可以点击：http://www.kodiplayer.cn/plugins/查看。",normalizedContent:"# kodi 安装配置\n\n\n# 1、kodi 介绍与安装\n\n\n# 1、介绍\n\nkodi 和 infuse 类似，都是本地媒体库管理软件。不同的是，kodi 免费！\n\n虽然 kodi 免费，但它的功能却非常强大，解码能力也极其优秀。可惜有点复杂，加上其反人类的操作逻辑，常常让新手一脸懵逼的放弃。\n\n\n# 2、软件安装\n\n从 kodi 官网 下载 并安装，安装完成后打开 kodi 软件，点击继续。\n\n\n\n然后对于一些权限点击允许，并进入 kodi 页面。\n\n\n# 2、kodi 使用\n\n\n# 1）默认皮肤更改中文\n\n如果需要安装地平线皮肤的话可以不进行这一步的更改，到时候更换了皮肤再更改。\n\n点击 系统设置（齿轮图标）\n\n\n\n进入 interface\n\n\n\n选择 皮肤 skin，将 fonts 字符集 修改为 arial based。这一步非常关键，如果没有选择 arial 字体，那么调整为中文后会出现乱码。\n\n\n\n进入 区域 regional， 在语言 language 里修改语言为 chinese-(simsimple) 简体中文，等待安装即可。\n\n\n\n如果 language 里只有一个 english，没有附带中文语言，也不用紧张，我们可以从插件库自行安装：返回到主界面，点击 add-on（插件），找到“install from repository”，再依次选择 look & feel→language，找到中文简体 chinese（simple），安装后启用，即可启用中文界面。\n\n\n\n如果不能修改为中文的话，重启一下 kodi： 返回 kodi 主页，点击开关，然后点击跳出的 exit，退出 kodi。\n\n\n\n顺便添加一下中文键盘 chinese basepy，以便 kodi 输入中文。\n\n\n\n\n# 2）插件安装设置\n\n默认从未知来源安装插件是关闭的，所以我们先得打开未知来源。\n\n点击系统 system，进入系统设置。\n\n\n\n选择插件 add-ons，将未知来源打开。\n\n\n\n打开未知来源后，把更新插件选择为从任何库。\n\n\n\n\n# 3）音频设置\n\n回音壁和音响用户，其他用户不用看保持默认即可。\n\n默认是基础设置，需要左下角的齿轮下点击 3 下后切换到专家模式。\n\n\n\nkodi 默认的声道数为 2.0，如果就是用电视机喇叭，那么这里不需要调整。如果使用回音壁或者家庭影院，需要修改成匹配所用家庭影院系统的声道数。例如，如果你正在使用 7.1 声道的回音壁或者家庭影院，就选择 7.1 声道，这个选项会影响 lpcm 和多声道 aac 音轨的表现：\n\n\n\n音频直通设置：\n\n\n\n\n# 4）播放器设置\n\n因为电影和大部分电视都是 24p 帧率，在使用 4k 60hz 的电视观看时会因为帧率不同而产生卡顿。（120hz 电视可以做 5:5 pulldown 所以不会卡顿）\n\n不过大部分电视机都有电影模式，只要检测到 24 帧信号，就会自动激活电影模式。所以，我们要开启帧率同步，开启方式是：设置 → 播放器 → 视频，调整显示刷新率，选择“在开始/停止时”\n\n\n\n这样，播放电影时，电视机就能自动进入电影模式；在电影结束后，又会恢复 60hz，ui 更顺滑。\n\n\n# 5）互联网访问\n\n按实际填写不多赘述\n\n\n\n\n# 3、jellyfin 插件\n\n\n# 1）kodi 安装 jf 插件\n\n点击插件\n\n\n\n选择从 zip 文件安装插件。\n\n\n\n选择 nas 中的 repository.jellyfin.kodi.zip 文件进行安装。\n\n\n\n等会右上角跳出件已经安装。\n\n\n\n我们继续点从库安装：\n\n\n\n选择 jf 插件。\n\n\n\n选择视频插件。\n\n\n\n这里的 jellycon 是新开项目目前 bug 比较多，我们用第二个。\n\n\n\n点击安装。\n\n\n\n第一次安装会跳出服务器添加引导，按引导添加服务器。\n\n\n\n输入 jf 服务器地址。\n\n\n\n输入账号密码。\n\n\n\n这里选择默认即可。\n\n\n\n安装完成右上角会出现提示，然后点击要添加的影视库。等待服务器同步后就能看见添加的影视了。\n\n\n\n\n# 2）jf 安装 kodi 插件\n\n然后我们回到 jellyfin 后台安装 kodi 同步插件，安装完成后得重启 jf，状态才是 active。\n\n\n\n点击插件下竖着的三点进入菜单，选择设置。\n\n\n\n选择要同步的媒体点击保存。\n\n\n\n\n# 4、地平线皮肤安装\n\n\n# 1、安装插件库\n\n两种方法任选一样即可。\n\n1）zip 文件安装\n\n点击 add-ons (插件)\n\n\n\n选择 install from zip file (从 zip 文件安装)。ps：kodi 只能安装 zip 格式插件，如果遇到其他格式如 rar 等需要把里面的 zip 解压出来。\n\n\n\n因为我们的插件放在 nas 里，所以选择 smb 来连接 nas。\n\n\n\n选择自己的机器\n\n\n\n这里是输入绿联网络服务里的账号密码。\n\n\n\n然后进入 nas 文件夹，找到之前存放插件库的目录。\n\n\n\n2）官方源安装\n\n在系统设置，进入文件管理。\n\n\n\n点击添加源。\n\n\n\n点击“无”，然后手动输入地址https://jurialmunkey.github.io/repository.jurialmunkey，自动命名为repository.jurialmunkey后点确定。\n\n\n\n成功完成后文件管理会增加一个“repository.jurialmunkey”的文件地址。\n\n\n\n回到系统设置，进入插件。\n\n\n\n点击从 zip 文件安装。\n\n\n\n进入我们刚刚添加的 repository.jurialmunkey。\n\n\n\n选择 zip 文件点击 ok。\n\n\n\n\n# 2、安装插件\n\nps:安装提前设置好梯子。\n\n右上角显示插件库安装完后，点击从库安装。\n\n\n\n选择 jurialmunkey。\n\n\n\n选择 界面外观 look and feel。\n\n\n\n选择皮肤 skin。\n\n\n\n选择地平线 2 皮肤（arctic horizon2）。\n\n\n\n点击安装。\n\n\n\n跳出所需的依赖，点击 ok。\n\n\n\n如果一直安装不上的话，先去插件里把已有的这些依赖全部卸载掉，再来重新安装。\n\nps：对于一些依赖比如 tmdbmoviehelper 安装需要有梯子。另外它的使用也需要，否则会报错，如果不想显示报错可以在插件列表中选中该插件按菜单键禁用，不要进该插件设置里禁用。\n\n皮肤下载中。\n\n\n\n\n# 5、地平线皮肤使用 kodi\n\n\n# 1、切换皮肤\n\n皮肤下载完成后询问是否切换到此皮肤，点击 yes。\n\n\n\n切换后询问是否保持使用此皮肤 点击 yes。\n\n\n\n皮肤启动中。\n\n\n\n经过一小会加载后，皮肤安装完成了，这就是安装完毕的初始样式。\n\n\n\n\n# 2、切换中文\n\n点击右上角的设置图标，选择 settings 设置。\n\n\n\n选择皮肤 skin，把字符集 fonts 改成 cjk-chinese/japanese/korean。\n\n\n\n选择区域 regional，把语言 language 由默认的英语改成 chinese（simple).\n\n\n\n更改完成，界面变成了中文。\n\n\n\n\n# 3、安装依赖\n\n然后选到第一项把缺失依赖全部安装\n\n\n\n\n# 4、添加影视库\n\n推荐通过 jf 插件来导入视频。\n\n点击视频-文件。\n\n\n\n点击添加视频。\n\n\n\n点击浏览。\n\n\n\n这里有多个方式可以选择自己的影片保存的位置，点击添加网络位置。\n\n\n\n然后输入绿联的 ip 地址和绿联网络服务里的账号密码。\n\n\n\n再到这里找到刚刚设置的 ip 地址，点进去找自己的媒体库。ps：kodi 什么协议都可，但是 smb 出卡顿的概率会更大，ftp 相对卡顿概率比较小。\n\n\n\n选择好媒体文件后点击确定。\n\n\n\n进行一些内容的设置：\n\n * 该目录包含选择电影或者电视。\n * 选择信息提供者：local information only（只读取本地信息，如果有刮削好的话建议这个）或者 tmdb。\n * 在下方勾选电影在以片名命名的单独目录中和嵌套扫描。\n\n设置完成后点击确定。\n\n\n\n点击是来刷新信息。\n\n\n\n右上角会开始扫描内容。\n\n\n\n等一会，右上角显示扫描结束。\n\n\n\n点击刚刚增加的华语电影进去，等一会可以看到海报墙。\n\n\n\n添加完影视库后可以点击右上方的设置-视图。\n\n\n\n可以选择不同的视图设置。\n\n\n\n影视库的视频海报墙设置好了。\n\n\n# 5、主页视图设置\n\n此时我们的主页是这样。\n\n\n\n主页往下翻是这样。\n\n\n\n那我们想要主页也有海报墙怎么办？ 由于首页不能改样式，所以我们只能先把首页的关掉，再把下面的电影海报行顶上来。\n\n点击设置-皮肤-菜单-自定义主菜单。\n\n\n\n首先把电影的全屏小部件的内容改成无。\n\n\n\n然后点击小部件。\n\n\n\n把左边三个分类里对应的风格都改成 poster，展开信息改成 full。\n\n\n\n此时我们的主页变成了这样。\n\n\n\n其他的影视库是一样的设置。\n\n\n# 6、其他设置\n\n点击设置\n\n\n\n1）菜单样式\n\n菜单样式设置为图标或者其他设置。\n\n\n\n\n\n2）设置为专家模式\n\n把系统模式设置为专家模式。\n\n\n\n3）调整 kodi 快进速度\n\n点击播放器-视频。\n\n\n\n将跳过步骤改为如下设置。\n\n\n\n\n# 7、插件安装\n\n点击设置-插件。\n\n\n\n来到插件界面。\n\n\n\n遥控器按快退键，进入设置，选择从 zip 文件安装。\n\n\n\n可以直接选择 zip 文件，也可以按取消。\n\n\n\n然后选择是从库安装还是从 zip 文件安装。\n\n\n\n\n# 8、字幕插件\n\n把 repository.xbmc-addons-chinese.zip 文件放到 nas 中，选择从 zip 文件安装插件，等会右上角跳出件已经安装。\n\n\n\n我们继续点从库安装：\n\n\n\n选择刚刚已经安装的这个字幕插件：\n\n\n\n点击字幕选项\n\n\n\n一共有 3 个字幕源。\n\n\n\n每个都点击进去然后点安装。\n\n\n\n三个都安装完成\n\n\n\n安装以后，随便打开一部电影，在右下角有字幕的按钮，点击这个字幕按钮。\n\n\n\n进入字幕页面，点击下载字幕：\n\n\n\n可以看到匹配到的字幕，点击一下即可下载。\n\n\n\n\n# 9、emby 官方源\n\n输入路径http://kodi.emby.media，命名为emby后确定。\n\n\n\n\n# 10、遥控器插件\n\nkodi 默认遥控器配置比较反人类建议修改一下。\n\n点击搜索。\n\n\n\n搜索 keymap editor 插件。\n\n\n\n点击安装\n\n\n\n安装后右上角有提示。\n\n\n\n点击运行。\n\n\n\n点击编辑\n\n\n\n选择全屏视频\n\n\n\n选择 playback\n\n\n\n选择停止\n\n\n\n编辑键（这时会跳出来一个倒计时，在 5 秒内你需要按下遥控器对应的按键（这里就是返回键））\n\n\n\n返回点击保存\n\n\n\n现在你再去播放影片，播放过程中按下返回键就可以直接退出了，类似的还可以自行设置 iptv 菜单调用键，上下键换台等等，非常方便。\n\n\n# 12、备份插件\n\n搜索 backup 插件\n\n\n\n点击安装\n\n\n\n安装完成后点击运行\n\n\n\n选择打开设置。\n\n\n\n常规目录下压缩文档如果有勾选建议取消勾选。\n\n\n\n设置挂载远程目录\n\n\n\n选择要备份的数据\n\n\n\n可以设置定时任务\n\n\n\n然后点击确定保存\n\n\n\n可以点击备份立即执行备份一次。\n\n\n\n\n# 13、安卓手机遥控器\n\n1）kodi 设置\n\n服务设置-常规里勾选向其它系统声明服务。\n\n\n\n在控制里开启 kodi web 控制，自行设置密码和端口。\n\n\n\n往下滑可以勾选这两项。\n\n\n\n在系统信息-摘要里查看 kodi 的 ip 地址。\n\n\n\n浏览器 kodi ip+端口访问 web 界面。\n\n\n\n2）web 界面 ui\n\n默认的 web 界面 ui 是 kodi web interface-chorus2。我们也可根据自己喜好更换 web 界面 ui ，这里推荐 tex。\n\n点开插件-所有库-web 界面。\n\n\n\n选择 tex。\n\n\n\n点击安装。\n\n打开设置-服务设置-控制，点击 web 界面。\n\n\n\n选择 tex。\n\n\n\ntex ui 的界面是这样的。\n\n\n\n3）手机 app 下载使用\n\n下载 app 并安装：\n\n\n\n根据引导添加 kodi。它会自动搜索局域网的 kodi，如果搜索不到的话可以手动添加。\n\n\n\napp 界面如下，功能强大，自行探索。\n\n\n\n\n# 14、歌词插件\n\ncu lrc lyrics 是 kodi 的歌词插件，该插件能搜索内嵌、本地文件(以相同文件名与歌曲文件保存在相同目录的 .lrc/.txt 歌词文件)或通过刮削器(网易云音乐等)获取歌词。不管是播放自己创建的音乐资料库还是音乐插件(网易云音乐插件)都能匹配展示。\n\n插件获取地址：http://www.kodiplayer.cn/plugins/3044.html\n\n使用插件后效果：\n\n\n\n\n# 15、其它插件\n\n更多插件可以点击：http://www.kodiplayer.cn/plugins/查看。",charsets:{cjk:!0}},{title:"jellyfin",frontmatter:{title:"jellyfin",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/jellyfin/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/01.%E5%BD%B1%E8%A7%86/07.Jellyfin.html",relativePath:"01.娱乐/01.影视/07.Jellyfin.md",key:"v-6925fc6a",path:"/fun/jellyfin/",headers:[{level:2,title:"1、容器部署",slug:"_1、容器部署",normalizedTitle:"1、容器部署",charIndex:2},{level:2,title:"2、使用",slug:"_2、使用",normalizedTitle:"2、使用",charIndex:682},{level:3,title:"1、初始化",slug:"_1、初始化",normalizedTitle:"1、初始化",charIndex:691},{level:3,title:"2、硬件转码设置",slug:"_2、硬件转码设置",normalizedTitle:"2、硬件转码设置",charIndex:1067},{level:2,title:"其它",slug:"其它",normalizedTitle:"其它",charIndex:1239},{level:3,title:"1、字幕插件",slug:"_1、字幕插件",normalizedTitle:"1、字幕插件",charIndex:1246},{level:3,title:"2、webhook",slug:"_2、webhook",normalizedTitle:"2、webhook",charIndex:1489}],headersStr:"1、容器部署 2、使用 1、初始化 2、硬件转码设置 其它 1、字幕插件 2、webhook",content:'# 1、容器部署\n\n1、下载镜像\n\n在绿联 docker-镜像管理-镜像仓库里搜索 jellyfin，有很多版本，其中:\n\n * jellyfin/jellyfin 和 linuxserver/jellyfin 这两个都是官方版本，没有进行魔改的；\n * nyanmisaka/jellyfin（后简称 ny)这个版本是 nyanmisaka 这位大神进行修改魔改的版本。\n\nny 大神的和官方版本的都是推荐安装的，而且区别不大。\n\n我这里选择 ny 大神的下载。\n\n\n\n2、部署安装\n\n1）在镜像管理-本地镜像找到刚刚下载的镜像，点击创建容器，勾选创建后启动容器，点击下一步。\n\n\n\n2）基础设置里勾选硬件渲染，设置重启策略。\n\n\n\n3）网络设置 bridge。\n\n\n\n4）设置存储空间前，我们首先在 docker 文件夹下创建一个 jellyfin 文件夹，再在 jellyfin 文件下创建 cache、config 两个子文件夹，分别用于存储缓存和配置文件。 然后把这两个子文件夹分别转载为/cache、/config，注意这两个装载路径不可以改名。再把我们的影视文件夹挂载上，这个可以自定义转载路径名称，注意类型全为读写。\n\n\n\n5）端口选项，如果本地端口 8096 没有被占用则填写 8096，被占用了填个没有被占用的其他端口，容器端口 8096（默认）。\n\n\n\n6）环境变量里添加两个变量，PUID 和 PGID，表示用哪个用户来运行程序，0 就表示直接作为最高权限的 root 用户。填写完这些后点击下一步，然后点击完成完成容器部署。\n\n\n\n\n# 2、使用\n\n\n# 1、初始化\n\n1）我们在浏览器中输入 绿联 ip 地址：端口 ，进入界面，先选择汉语（简化字）。\n\n\n\n2）然后进行用户名创建和密码设置。\n\n\n\n3）然后就是添加媒体库。\n\n\n\n4）首先来设置电影的文件夹，类别选择电影，路径为/data/电影，首选语言为 Chinese,国家和地区选择 People\'s Republic of China,勾选媒体资料存储方式 nfo。然后其他不会的全部默认即可，如果是已经刮削好的影视，可以把元数据下载器，图片下载器这些全部不要勾选，免得扫描库比较慢。\n\n\n\n\n\n5）添加完媒体库点击下一个。\n\n\n\n6）设置首选元数据语言：语言为 Chinese,国家和地区选择 People\'s Republic of China。\n\n\n\n7）远程访问默认即可。\n\n\n\n8）点击完成。\n\n\n\n9）输入账号密码登录。\n\n\n\n\n# 2、硬件转码设置\n\n1）进入首页会开始扫描媒体库。点击左上角的菜单。\n\n\n\n点击控制台。\n\n\n\n这里会显示扫描媒体库的进度和一些动态，我们点击播放。\n\n\n\n在播放的选下卡里，将硬件加速里面，选择 Video Acceleration API(VAAPI)这一项，在启用硬件解码当中，勾选所有的编码。\n\n\n\n设置完成之后，点击保存。\n\n\n\n\n# 其它\n\n\n# 1、字幕插件\n\n有时候我们下载的电影没有字幕，可以使用字幕插件自动下载匹配的字幕。在控制台点击“插件”选项，右边点击“目录”，然后往下移，在元数据类找到“open subtitles”这个插件，然后点击“Install”进行安装。\n\n\n\n安装完成后重启 jellyfin 服务，可以在插件-我的插件里看到它，状态为 Active，如果为 restart 的话，即表示需要重启。\n\n\n\n点击进入这个插件，填上账号密码就好了（没有账号就点击“Register”跳转网页去注册。\n\n\n\n\n# 2、webhook\n\ngithub 文档说明：https://github.com/jellyfin/jellyfin-plugin-webhook。\n\n1）默认设置\n\n1、打开 jf 控制台-插件，在插件目录里找到 Webhook 并点击。\n\n\n\n2、点击安装 Webhook。\n\n\n\n3、安装完后会提示重启 Jellyfin，按要求重启下即可，重启后状态显示 active 表示成功。\n\n\n\n4、Server Url 填写 Jellyfin 服务器 URL，然后点击 Add Generic Destination 按钮新增一个 Hook，并设置以下信息：\n\n * Webhook Name：自定义 Webhook 名称\n * Webhook Url：ms 地址/jellyfin\n * Notification Type：勾选你想触发通知的通知类型\n * User Filter：勾选你想触发通知的用户\n * Item Type：勾选你想监控的媒体类型\n * Send All Properties (ignores template)和 Template 二选一即可，默认勾选 Send All Properties (ignores template)。\n * 点击 Add Request Header，并新增一组：Key: Content-Type, Value: application/json\n\n设置完后点击保存。\n\n\n\n5、至此 Webhook 设置完成。\n\n\n\n6、如果我们的 Webhook 没起作用的话，我们可以更改 logging.default.json 文件以输出 Webhook 的调试日志。\n\n\n\n在文档中的"Serilog"下添加一行内容：\n\n"Jellyfin.Plugin.Webhook": "Debug"\n\n\n1\n\n\n添加后记得在"System": "Warning"的末尾添加个逗号。\n\n\n\n2）模板\n\n1、参数\n\n1）Helpers:\n\n * if_equals：如果第一个参数等于第二个参数,不区分大小写\n * if_exist：如果参数的值不为 null 或为空\n * link_to：将$url和$text包装在<a>标签中\n\n2）Variables:\n\n * 每个通知器\n   \n   * ServerId：服务器\n   * ServerName：服务器名称\n   * ServerVersion：服务器版本 $major.$minor.$build\n   * ServerUrl：服务器 Url\n   * NotificationType：通知类型\n     \n     None = 0,\n     ItemAdded = 1,  // 媒体添加\n     Generic = 2,  // 通用\n     PlaybackStart = 3,  // 开始播放\n     PlaybackProgress = 4,  // 播放进度\n     PlaybackStop = 5,  // 停止播放\n     SubtitleDownloadFailure = 6,  // 字幕下载失败\n     AuthenticationFailure = 7,  // 身份验证失败\n     AuthenticationSuccess = 8,  // 身份验证成功\n     SessionStart = 9,  // 会话开始\n     PendingRestart = 10,  // 挂起重启\n     TaskCompleted = 11,  // 任务已完成\n     PluginInstallationCancelled = 12,  // 取消安装插件\n     PluginInstallationFailed = 13,  // 插件安装失败\n     PluginInstalled = 14,  // 插件安装成功\n     PluginInstalling = 15,  // 正在安装插件\n     PluginUninstalled = 16,  // 卸载插件\n     PluginUpdated = 17,  // 更新插件\n     UserCreated = 18,  // 创建用户\n     UserDeleted = 19,  // 删除用户\n     UserLockedOut = 20,  // 锁定用户\n     UserPasswordChanged = 21,  // 用户密码更改\n     UserUpdated = 22,  // 用户更新\n     UserDataSaved = 23  // 用户数据保存\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     \n\n * 基础项\n   \n   * Timestamp：当前服务器时间 本地\n   * UtcTimestamp：当前服务器时间 UTC\n   * Name：媒体名称\n   * Overview：媒体简介\n   * Tagline：媒体标语\n   * ItemId：媒体 ID\n   * ItemType：媒体类型\n     \n     Movies,  // 电影\n     Episodes,  // 集\n     Season,  // 季\n     Series,  // 电视剧\n     Albums,  // 相册\n     Songs,  // 歌曲\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   * Year：媒体年份\n   * SeriesName：电视剧名称\n   * SeasonNumber：季数 - 直接格式\n   * SeasonNumber00：季数 - 填充 00\n   * SeasonNumber000：季数 - 填充 000\n   * EpisodeNumber：集数 - 直接格式\n   * EpisodeNumber00：集数 - 填充 00\n   * EpisodeNumber000：集数 - 填充 000\n   * Provider_{providerId_lowercase}：数据库\n   \n   Provider_imdb,  // IMDB\n   Provider_tmdb,  // TMDB\n   Provider_opendouban,  // 豆瓣\n   \n   \n   1\n   2\n   3\n   \n   * RunTimeTicks：运行时间格式： Ticks\n   * RunTime：运行时间格式： hh:mm:ss\n\n * 播放\n   \n   * 包括 BaseItem\n   * PlaybackPositionTicks：播放起点位置，格式为 Ticks\n   * PlaybackPosition：播放起点位置，格式为 hh:mm:ss\n   * MediaSourceId：媒体源 ID\n   * IsPaused：播放已暂停\n   * IsAutomated：通知是自动的，或者是用户触发的\n   * DeviceId：播放设备 ID\n   * DeviceName：播放的设备名称\n   * ClientName：播放的终端名称\n   * NotificationUsername：操作了会产生通知的用户名\n   * UserId：用户 ID\n   * PlayedToCompletion：true/false, 仅当 NotificationType == PlaybackStop\n\n3）Destination Specific\n\n * Discord\n   * MentionType\n   * EmbedColor\n   * AvatarUrl\n   * BotUsername\n * Gotify\n   * Priority\n * Pushbullet\n * Pushover\n   * Token 令 牌\n   * UserToken 用户令牌\n   * Device 设备\n   * Title 标题\n   * MessageUrl 消息 Url\n   * MessageUrlTitle 消息 Url 标题\n   * MessagePriority 消息优先级\n   * NotificationSound 通知声音\n * SMTP\n * Slack\n   * BotUsername\n   * SlackIconUrl',normalizedContent:'# 1、容器部署\n\n1、下载镜像\n\n在绿联 docker-镜像管理-镜像仓库里搜索 jellyfin，有很多版本，其中:\n\n * jellyfin/jellyfin 和 linuxserver/jellyfin 这两个都是官方版本，没有进行魔改的；\n * nyanmisaka/jellyfin（后简称 ny)这个版本是 nyanmisaka 这位大神进行修改魔改的版本。\n\nny 大神的和官方版本的都是推荐安装的，而且区别不大。\n\n我这里选择 ny 大神的下载。\n\n\n\n2、部署安装\n\n1）在镜像管理-本地镜像找到刚刚下载的镜像，点击创建容器，勾选创建后启动容器，点击下一步。\n\n\n\n2）基础设置里勾选硬件渲染，设置重启策略。\n\n\n\n3）网络设置 bridge。\n\n\n\n4）设置存储空间前，我们首先在 docker 文件夹下创建一个 jellyfin 文件夹，再在 jellyfin 文件下创建 cache、config 两个子文件夹，分别用于存储缓存和配置文件。 然后把这两个子文件夹分别转载为/cache、/config，注意这两个装载路径不可以改名。再把我们的影视文件夹挂载上，这个可以自定义转载路径名称，注意类型全为读写。\n\n\n\n5）端口选项，如果本地端口 8096 没有被占用则填写 8096，被占用了填个没有被占用的其他端口，容器端口 8096（默认）。\n\n\n\n6）环境变量里添加两个变量，puid 和 pgid，表示用哪个用户来运行程序，0 就表示直接作为最高权限的 root 用户。填写完这些后点击下一步，然后点击完成完成容器部署。\n\n\n\n\n# 2、使用\n\n\n# 1、初始化\n\n1）我们在浏览器中输入 绿联 ip 地址：端口 ，进入界面，先选择汉语（简化字）。\n\n\n\n2）然后进行用户名创建和密码设置。\n\n\n\n3）然后就是添加媒体库。\n\n\n\n4）首先来设置电影的文件夹，类别选择电影，路径为/data/电影，首选语言为 chinese,国家和地区选择 people\'s republic of china,勾选媒体资料存储方式 nfo。然后其他不会的全部默认即可，如果是已经刮削好的影视，可以把元数据下载器，图片下载器这些全部不要勾选，免得扫描库比较慢。\n\n\n\n\n\n5）添加完媒体库点击下一个。\n\n\n\n6）设置首选元数据语言：语言为 chinese,国家和地区选择 people\'s republic of china。\n\n\n\n7）远程访问默认即可。\n\n\n\n8）点击完成。\n\n\n\n9）输入账号密码登录。\n\n\n\n\n# 2、硬件转码设置\n\n1）进入首页会开始扫描媒体库。点击左上角的菜单。\n\n\n\n点击控制台。\n\n\n\n这里会显示扫描媒体库的进度和一些动态，我们点击播放。\n\n\n\n在播放的选下卡里，将硬件加速里面，选择 video acceleration api(vaapi)这一项，在启用硬件解码当中，勾选所有的编码。\n\n\n\n设置完成之后，点击保存。\n\n\n\n\n# 其它\n\n\n# 1、字幕插件\n\n有时候我们下载的电影没有字幕，可以使用字幕插件自动下载匹配的字幕。在控制台点击“插件”选项，右边点击“目录”，然后往下移，在元数据类找到“open subtitles”这个插件，然后点击“install”进行安装。\n\n\n\n安装完成后重启 jellyfin 服务，可以在插件-我的插件里看到它，状态为 active，如果为 restart 的话，即表示需要重启。\n\n\n\n点击进入这个插件，填上账号密码就好了（没有账号就点击“register”跳转网页去注册。\n\n\n\n\n# 2、webhook\n\ngithub 文档说明：https://github.com/jellyfin/jellyfin-plugin-webhook。\n\n1）默认设置\n\n1、打开 jf 控制台-插件，在插件目录里找到 webhook 并点击。\n\n\n\n2、点击安装 webhook。\n\n\n\n3、安装完后会提示重启 jellyfin，按要求重启下即可，重启后状态显示 active 表示成功。\n\n\n\n4、server url 填写 jellyfin 服务器 url，然后点击 add generic destination 按钮新增一个 hook，并设置以下信息：\n\n * webhook name：自定义 webhook 名称\n * webhook url：ms 地址/jellyfin\n * notification type：勾选你想触发通知的通知类型\n * user filter：勾选你想触发通知的用户\n * item type：勾选你想监控的媒体类型\n * send all properties (ignores template)和 template 二选一即可，默认勾选 send all properties (ignores template)。\n * 点击 add request header，并新增一组：key: content-type, value: application/json\n\n设置完后点击保存。\n\n\n\n5、至此 webhook 设置完成。\n\n\n\n6、如果我们的 webhook 没起作用的话，我们可以更改 logging.default.json 文件以输出 webhook 的调试日志。\n\n\n\n在文档中的"serilog"下添加一行内容：\n\n"jellyfin.plugin.webhook": "debug"\n\n\n1\n\n\n添加后记得在"system": "warning"的末尾添加个逗号。\n\n\n\n2）模板\n\n1、参数\n\n1）helpers:\n\n * if_equals：如果第一个参数等于第二个参数,不区分大小写\n * if_exist：如果参数的值不为 null 或为空\n * link_to：将$url和$text包装在<a>标签中\n\n2）variables:\n\n * 每个通知器\n   \n   * serverid：服务器\n   * servername：服务器名称\n   * serverversion：服务器版本 $major.$minor.$build\n   * serverurl：服务器 url\n   * notificationtype：通知类型\n     \n     none = 0,\n     itemadded = 1,  // 媒体添加\n     generic = 2,  // 通用\n     playbackstart = 3,  // 开始播放\n     playbackprogress = 4,  // 播放进度\n     playbackstop = 5,  // 停止播放\n     subtitledownloadfailure = 6,  // 字幕下载失败\n     authenticationfailure = 7,  // 身份验证失败\n     authenticationsuccess = 8,  // 身份验证成功\n     sessionstart = 9,  // 会话开始\n     pendingrestart = 10,  // 挂起重启\n     taskcompleted = 11,  // 任务已完成\n     plugininstallationcancelled = 12,  // 取消安装插件\n     plugininstallationfailed = 13,  // 插件安装失败\n     plugininstalled = 14,  // 插件安装成功\n     plugininstalling = 15,  // 正在安装插件\n     pluginuninstalled = 16,  // 卸载插件\n     pluginupdated = 17,  // 更新插件\n     usercreated = 18,  // 创建用户\n     userdeleted = 19,  // 删除用户\n     userlockedout = 20,  // 锁定用户\n     userpasswordchanged = 21,  // 用户密码更改\n     userupdated = 22,  // 用户更新\n     userdatasaved = 23  // 用户数据保存\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     \n\n * 基础项\n   \n   * timestamp：当前服务器时间 本地\n   * utctimestamp：当前服务器时间 utc\n   * name：媒体名称\n   * overview：媒体简介\n   * tagline：媒体标语\n   * itemid：媒体 id\n   * itemtype：媒体类型\n     \n     movies,  // 电影\n     episodes,  // 集\n     season,  // 季\n     series,  // 电视剧\n     albums,  // 相册\n     songs,  // 歌曲\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   * year：媒体年份\n   * seriesname：电视剧名称\n   * seasonnumber：季数 - 直接格式\n   * seasonnumber00：季数 - 填充 00\n   * seasonnumber000：季数 - 填充 000\n   * episodenumber：集数 - 直接格式\n   * episodenumber00：集数 - 填充 00\n   * episodenumber000：集数 - 填充 000\n   * provider_{providerid_lowercase}：数据库\n   \n   provider_imdb,  // imdb\n   provider_tmdb,  // tmdb\n   provider_opendouban,  // 豆瓣\n   \n   \n   1\n   2\n   3\n   \n   * runtimeticks：运行时间格式： ticks\n   * runtime：运行时间格式： hh:mm:ss\n\n * 播放\n   \n   * 包括 baseitem\n   * playbackpositionticks：播放起点位置，格式为 ticks\n   * playbackposition：播放起点位置，格式为 hh:mm:ss\n   * mediasourceid：媒体源 id\n   * ispaused：播放已暂停\n   * isautomated：通知是自动的，或者是用户触发的\n   * deviceid：播放设备 id\n   * devicename：播放的设备名称\n   * clientname：播放的终端名称\n   * notificationusername：操作了会产生通知的用户名\n   * userid：用户 id\n   * playedtocompletion：true/false, 仅当 notificationtype == playbackstop\n\n3）destination specific\n\n * discord\n   * mentiontype\n   * embedcolor\n   * avatarurl\n   * botusername\n * gotify\n   * priority\n * pushbullet\n * pushover\n   * token 令 牌\n   * usertoken 用户令牌\n   * device 设备\n   * title 标题\n   * messageurl 消息 url\n   * messageurltitle 消息 url 标题\n   * messagepriority 消息优先级\n   * notificationsound 通知声音\n * smtp\n * slack\n   * botusername\n   * slackiconurl',charsets:{cjk:!0}},{title:"iptv",frontmatter:{title:"iptv",date:"2025-01-13T03:00:43.000Z",permalink:"/pages/6222e7/",categories:["娱乐","影视"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/01.%E5%BD%B1%E8%A7%86/01.iptv.html",relativePath:"01.娱乐/01.影视/01.iptv.md",key:"v-1768c78b",path:"/pages/6222e7/",headers:[{level:2,title:"容器安装",slug:"容器安装",normalizedTitle:"容器安装",charIndex:27},{level:2,title:"添加M3U电视源",slug:"添加m3u电视源",normalizedTitle:"添加m3u电视源",charIndex:252},{level:2,title:"添加电视指南源",slug:"添加电视指南源",normalizedTitle:"添加电视指南源",charIndex:797},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:235}],headersStr:"容器安装 添加M3U电视源 添加电视指南源 使用",content:"docker项目：pixman/pixman\n\n\n# 容器安装\n\n1、绿联登录ssh，root运行以下命令：docker run -d --name=pixman -p 5555:5000 --restart=always pixman/pixman:latest 注意：\n\n * 如果端口5555被占用了，换成另一个未被占用的即可\n * 可以用lsof命令查看监听端口，比如lsof -i:5555\n\n2、安装完成后，可以输入 绿联IP:端口（我这里是5555） 转跳使用教程，代表安装正确。\n\n\n# 添加M3U电视源\n\n1、打开emby-电视直播，点击添加电视源\n\n2、添加电视源后点击储存\n\n3、可以添加以下地址\n\nhttps://cdn.jsdelivr.net/gh/vicjl/myIPTV@master/CCTV.m3u\n​\nhttps://cdn.jsdelivr.net/gh/vicjl/myIPTV@master/IPTV.m3u\n​\nhttp://192.168.5.167:5555/itv_proxy.m3u\n​\nhttp://192.168.5.167:5555/ysp.m3u\n​\nhttp://192.168.5.167:5555/tptv_proxy.m3u\n​\nhttp://192.168.5.167:5555/4gtv.m3u  台湾源需要emby环境变量里面添加代理\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n\n4、对于特殊的源在环境变量添加代理\n\nHTTP_PROXY=http://192.168.5.167:7890\n​\nALL_PROXY=http://192.168.5.167:7890\n​\nNO_PROXY=172.0.0.1,127.0.0.1,localhost\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n# 添加电视指南源\n\n\n\n1、emby点击电视直播-指南数据源，点击添加指南数据源\n\n2、填写国家和数据来源\n\n\n\n3、填写信息，可以添加以下两个xml地址\n\nhttps://cdn.jsdelivr.net/gh/vicjl/myIPTV@master/EPG.xml\n​\nhttps://assets.livednow.com/epg.xml\n\n\n\n1\n2\n3\n4\n\n\n\n\n4、两个数据源添加完成\n\n\n\n\n# 使用\n\n1、在主屏幕加载电视直播\n\n2、完成\n\n\n\n",normalizedContent:"docker项目：pixman/pixman\n\n\n# 容器安装\n\n1、绿联登录ssh，root运行以下命令：docker run -d --name=pixman -p 5555:5000 --restart=always pixman/pixman:latest 注意：\n\n * 如果端口5555被占用了，换成另一个未被占用的即可\n * 可以用lsof命令查看监听端口，比如lsof -i:5555\n\n2、安装完成后，可以输入 绿联ip:端口（我这里是5555） 转跳使用教程，代表安装正确。\n\n\n# 添加m3u电视源\n\n1、打开emby-电视直播，点击添加电视源\n\n2、添加电视源后点击储存\n\n3、可以添加以下地址\n\nhttps://cdn.jsdelivr.net/gh/vicjl/myiptv@master/cctv.m3u\n​\nhttps://cdn.jsdelivr.net/gh/vicjl/myiptv@master/iptv.m3u\n​\nhttp://192.168.5.167:5555/itv_proxy.m3u\n​\nhttp://192.168.5.167:5555/ysp.m3u\n​\nhttp://192.168.5.167:5555/tptv_proxy.m3u\n​\nhttp://192.168.5.167:5555/4gtv.m3u  台湾源需要emby环境变量里面添加代理\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n\n4、对于特殊的源在环境变量添加代理\n\nhttp_proxy=http://192.168.5.167:7890\n​\nall_proxy=http://192.168.5.167:7890\n​\nno_proxy=172.0.0.1,127.0.0.1,localhost\n\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n\n\n# 添加电视指南源\n\n\n\n1、emby点击电视直播-指南数据源，点击添加指南数据源\n\n2、填写国家和数据来源\n\n\n\n3、填写信息，可以添加以下两个xml地址\n\nhttps://cdn.jsdelivr.net/gh/vicjl/myiptv@master/epg.xml\n​\nhttps://assets.livednow.com/epg.xml\n\n\n\n1\n2\n3\n4\n\n\n\n\n4、两个数据源添加完成\n\n\n\n\n# 使用\n\n1、在主屏幕加载电视直播\n\n2、完成\n\n\n\n",charsets:{cjk:!0}},{title:"musictagweb 音乐标签编辑器",frontmatter:{title:"music_tag_web 音乐标签编辑器",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/musictag/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/02.%E9%9F%B3%E4%B9%90/02.musictag.html",relativePath:"01.娱乐/02.音乐/02.musictag.md",key:"v-7712b53a",path:"/fun/musictag/",headers:[{level:2,title:"一、 安装",slug:"一、-安装",normalizedTitle:"一、 安装",charIndex:54},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:385},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:559}],headersStr:"一、 安装 初始化 使用",content:"github 官网：https://github.com/xhongc/music-tag-web\n\n\n# 一、 安装\n\n打开 Docker,在镜像仓库搜索 music_tag_web，下载“xhongc/music_tag_web”最新版本镜像。\n\n\n\n2、点击创建容器，容器名称可以默认也可以自定义，勾选创建后启动容器，点击下一步\n\n\n\n3、基础设置设置重启策略\n\n\n\n4、设置存储空间设置：在 docker 文件夹下新建一个“music_tag_web”文件夹，然后新建了一个子文件夹“config” 用来存储其数据库和缓存，并把它挂载为“/app/data”；然后选择你的音乐文件夹挂载为“/app/media”\n\n\n\n5、端口设置：默认 8001，本地端口不冲突即可\n\n\n\n6、全部填写完成后可以点击下一步，然后点击完成并启动容器，至此容器部署完成。\n\n\n# 初始化\n\n1、浏览器输入 IP:端口/admin（端口号后加/admin）进入登录页，默认的账号和密码都是 admin。\n\n\n\n2、进入页面，点击用户\n\n\n\n3、点击用户名称 admin\n\n\n\n4、在这里可以修改用户名（自动生效）和一些个人信息，修改完个人信息后记得点下面的保存按钮。还可以点击表单进入修改密码。\n\n\n\n5、修改密码。\n\n\n\n\n# 使用\n\n1、浏览器输入 IP:端口，进入登录页，输入刚刚修改好的账号密码登录。\n\n\n\n2、右边的 media 下是我们之前挂载的音乐文件夹里的内容。\n\n\n\n3、可以对音乐文件的标签单独/批量修改。\n\n\n\n4、点击音乐名称可以看到该音乐文件的一些标签内容。\n\n",normalizedContent:"github 官网：https://github.com/xhongc/music-tag-web\n\n\n# 一、 安装\n\n打开 docker,在镜像仓库搜索 music_tag_web，下载“xhongc/music_tag_web”最新版本镜像。\n\n\n\n2、点击创建容器，容器名称可以默认也可以自定义，勾选创建后启动容器，点击下一步\n\n\n\n3、基础设置设置重启策略\n\n\n\n4、设置存储空间设置：在 docker 文件夹下新建一个“music_tag_web”文件夹，然后新建了一个子文件夹“config” 用来存储其数据库和缓存，并把它挂载为“/app/data”；然后选择你的音乐文件夹挂载为“/app/media”\n\n\n\n5、端口设置：默认 8001，本地端口不冲突即可\n\n\n\n6、全部填写完成后可以点击下一步，然后点击完成并启动容器，至此容器部署完成。\n\n\n# 初始化\n\n1、浏览器输入 ip:端口/admin（端口号后加/admin）进入登录页，默认的账号和密码都是 admin。\n\n\n\n2、进入页面，点击用户\n\n\n\n3、点击用户名称 admin\n\n\n\n4、在这里可以修改用户名（自动生效）和一些个人信息，修改完个人信息后记得点下面的保存按钮。还可以点击表单进入修改密码。\n\n\n\n5、修改密码。\n\n\n\n\n# 使用\n\n1、浏览器输入 ip:端口，进入登录页，输入刚刚修改好的账号密码登录。\n\n\n\n2、右边的 media 下是我们之前挂载的音乐文件夹里的内容。\n\n\n\n3、可以对音乐文件的标签单独/批量修改。\n\n\n\n4、点击音乐名称可以看到该音乐文件的一些标签内容。\n\n",charsets:{cjk:!0}},{title:"audiobookshelf",frontmatter:{title:"audiobookshelf",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/audiobookshelf/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/03.%E6%9C%89%E5%A3%B0%E4%B9%A6/01.audiobookshelf.html",relativePath:"01.娱乐/03.有声书/01.audiobookshelf.md",key:"v-64e6ec21",path:"/fun/audiobookshelf/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:2},{level:3,title:"1、下载镜像",slug:"_1、下载镜像",normalizedTitle:"1、下载镜像",charIndex:9},{level:3,title:"2、创建容器",slug:"_2、创建容器",normalizedTitle:"2、创建容器",charIndex:58},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:164}],headersStr:"安装 1、下载镜像 2、创建容器 使用",content:"# 安装\n\n\n# 1、下载镜像\n\n在绿联云镜像仓库里搜索 audiobookshelf，下载最新版本。\n\n\n\n\n# 2、创建容器\n\n1、点击创建容器，名称可自定义，资源限制也可自定义设置，勾选创建后启动容器。\n\n\n\n2、基础设置选择倒数第二项。\n\n\n\n3、存储空间如下配置\n\n\n\n4、本地端口随意，只要不冲突即可。\n\n\n\n\n# 使用\n\n1、浏览器输入 IP:189 即可进入注册界面，创建账号密码点击 submit。\n\n\n\n2、输入账号密码进行登录。\n\n\n\n3、点击右上角的设置，选择简体中文\n\n\n\n4、新建媒体库\n\n\n\n\n\n5、扫描媒体库\n\n\n\n6、完成扫描\n\n",normalizedContent:"# 安装\n\n\n# 1、下载镜像\n\n在绿联云镜像仓库里搜索 audiobookshelf，下载最新版本。\n\n\n\n\n# 2、创建容器\n\n1、点击创建容器，名称可自定义，资源限制也可自定义设置，勾选创建后启动容器。\n\n\n\n2、基础设置选择倒数第二项。\n\n\n\n3、存储空间如下配置\n\n\n\n4、本地端口随意，只要不冲突即可。\n\n\n\n\n# 使用\n\n1、浏览器输入 ip:189 即可进入注册界面，创建账号密码点击 submit。\n\n\n\n2、输入账号密码进行登录。\n\n\n\n3、点击右上角的设置，选择简体中文\n\n\n\n4、新建媒体库\n\n\n\n\n\n5、扫描媒体库\n\n\n\n6、完成扫描\n\n",charsets:{cjk:!0}},{title:"navidrome",frontmatter:{title:"navidrome",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/navidrome/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/02.%E9%9F%B3%E4%B9%90/01.Navidrome%20.html",relativePath:"01.娱乐/02.音乐/01.Navidrome .md",key:"v-4b5112b7",path:"/fun/navidrome/",headers:[{level:2,title:"一、 容器部署",slug:"一、-容器部署",normalizedTitle:"一、 容器部署",charIndex:2},{level:2,title:"二、使用",slug:"二、使用",normalizedTitle:"二、使用",charIndex:352},{level:3,title:"基础使用",slug:"基础使用",normalizedTitle:"基础使用",charIndex:361},{level:3,title:"2、第三方客户端",slug:"_2、第三方客户端",normalizedTitle:"2、第三方客户端",charIndex:551},{level:2,title:"三、环境配置",slug:"三、环境配置",normalizedTitle:"三、环境配置",charIndex:607},{level:3,title:"基本配置",slug:"基本配置",normalizedTitle:"基本配置",charIndex:684},{level:3,title:"高级配置",slug:"高级配置",normalizedTitle:"高级配置",charIndex:1683}],headersStr:"一、 容器部署 二、使用 基础使用 2、第三方客户端 三、环境配置 基本配置 高级配置",content:'# 一、 容器部署\n\n1、打开 Docker,在镜像仓库搜索 navidrome，下载“deluan/navidrome”最新版本镜像。\n\n\n\n2、点击创建容器，容器名称可以默认也可以自定义，点击下一步\n\n\n\n3、设置存储空间设置：在 docker 文件夹下新建一个“navidrome”文件夹，然后新建了一个子文件夹“data” 用来存储其数据库和缓存，并把它挂载为“/data”；然后选择你的音乐文件夹挂载为“/music”\n\n\n\n4、端口设置：默认 4533，本地端口不冲突即可\n\n\n\n5、环境设置\n\n环境变量可以按自己要求来增加，比如我增加了红框中的几项：\n\n\n\n更多的配置可以点击下方的环境配置进行查看。\n\n6、全部填写完成后可以点击下一步，然后点击完成并启动容器，至此容器部署完成。\n\n\n# 二、使用\n\n\n# 基础使用\n\n1）本地浏览器访问 ip:4533 会自动跳转到账号注册页面，填入管理员用户名与密码。\n\n\n\n2）语言设置\n\n如果环境中没有另外设置默认语言的话，默认的为英文。\n\n此时我们可以点击右上角小人头像-personal，然后在第二个框选择语言。\n\n\n\n在这里可以设置语言为简体中文。\n\n\n\n3）如果对音乐文件进行增加和删除操作，可以点击一下刷新按钮刷新音乐库。\n\n\n\n\n# 2、第三方客户端\n\nNavidrome 除了 WEB 网页界面，还支持各种第三方客户端。\n\n * 音流\n\n\n# 三、环境配置\n\n官方地址：https://www.navidrome.org/docs/usage/configuration-options/\n\n\n# 基本配置\n\n配置文件夹         环境变量             描述                                                            默认值\n              ND_CONFIGFILE    从外部配置文件中加载配置                                                  "./navidrome.toml"\nMusicFolder   ND_MUSICFOLDER   存储音乐库的文件夹。可以是只读的                                              "./music"\nDataFolder    ND_DATAFOLDER    用于存储应用程序数据 （DB） 的文件夹                                          "./data"\nCacheFolder   ND_CACHEFOLDER   用于存储缓存数据（转码、图像等）的文件夹                                          "/cache"\nLogLevel      ND_LOGLEVEL      日志级别。用于故障排除。可选的值：: error, warn, info, debug, trace            "info"\nAddress       ND_ADDRESS       服务器地址，可以是 IPv4 或 IPv6。 还支持 Unix 套接字文件的路径 unix:/path/to/file   0.0.0.0 and :: (all IPs)\nBaseUrl       ND_BASEURL       用于在代理后面配置 Navidrome 的基本 URL (例如：examples: /music,             Empty\n                               https://music.example.com)\nPort          ND_PORT HTTP     Navidrome 将使用的 HTTP 端口                                        4533\n\n\n# 高级配置\n\n配置文件夹                          环境变量                              描述                                                             默认值\nAuthRequestLimit*              ND_AUTHREQUESTLIMIT               在 AuthWindowLength 期间，单个 IP 可以处理多少个登录请求。设为 0 以禁用限制速率。          5\nAuthWindowLength*              ND_AUTHWINDOWLENGTH               用于身份验证速率限制的时间窗口长度                                              "20s"\nAutoImportPlaylists            ND_AUTOIMPORTPLAYLISTS            启用/禁用 .m3u 播放列表自动导入                                            true\nCoverArtPriority               ND_COVERARTPRIORITY               配置查找封面艺术图片的顺序，使用特殊embedded值从音频文件中获取嵌入图片                        cover., folder., front.*, embedded, external\nArtistArtPriority              ND_ARTISTARTPRIORITY              配置查找艺术家图片的顺序                                                   artist., album/artist., external\nCoverJpegQuality               ND_COVERJPEGQUALITY               通过设置 JPEG 质量百分比指定压缩后的封面艺术图片的质量级别                               75\nDefaultDownsamplingFormat      ND_DEFAULTDOWNSAMPLINGFORMAT      客户要求进行降采样时转码的格式（无格式时比特率最大）                                     opus\nDefaultLanguage                ND_DEFAULTLANGUAGE                设置在使用新浏览器登录时界面的默认语言。这个值必须与 resources/i18n                      "en"\n                                                                 文件夹中文件名之一相匹配。例如，对于简体中文，它必须是 zh-Hans（区分大小写）。\nDefaultTheme                   ND_DEFAULTTHEME                   设置在使用新浏览器登录时 UI 使用的默认主题。此值必须与 UI 中的某个选项匹配                      Dark\nEnableArtworkPrecache          ND_ENABLEARTWORKPRECACHE          启用对新添加的音乐进行图像预缓存                                               true\nEnableCoverAnimation           ND_ENABLECOVERANIMATION           控制 UI 中的播放器是否对专辑封面进行动画效果（旋转）                                   true\nEnableDownloads                ND_ENABLEDOWNLOADS                在 UI 中启用从服务器下载音乐/专辑/艺术家/播放列表的选项。                               true\nEnableExternalServices         ND_ENABLEEXTERNALSERVICES         将其设置为 false 以完全禁用所有外部集成                                        true\nEnableFavourites               ND_ENABLEFAVOURITES               在用户界面中启用对歌曲/专辑/艺术家进行‘喜爱’/\'收藏\'的切换功能（在 Subsonic                  true\n                                                                 客户端中被映射为‘星星’/\'标记\'）\nEnableGravatar                 ND_ENABLEGRAVATAR                 使用Gravatar图像作为用户个人资料图片。需要填写用户的电子邮件地址。                          false\nEnableLogRedacting             ND_ENABLELOGREDACTING             是否应该在日志中隐藏敏感信息（例如令牌和密码）                                        true\nEnableMediaFileCoverArt        ND_ENABLEMEDIAFILECOVERART        如果设置为 false，当请求歌曲封面时，将返回专辑封面                                   true\nEnableReplayGain               ND_ENABLEREPLAYGAIN               在 UI 中启用 ReplayGain 选项                                         true\nEnableSharing                  ND_ENABLESHARING                  启用分享功能                                                         false\nEnableStarRating               ND_ENABLESTARRATING               在 UI 中启用 5 星评级                                                 true\nEnableTranscodingConfig        ND_ENABLETRANSCODINGCONFIG        在 UI 中启用转码配置                                                   false\nEnableUserEditing              ND_ENABLEUSEREDITING              使普通用户能够编辑其详细信息并更改其密码                                           true\nFFmpegPath                     ND_FFMPEGPATH                     ffmpeg 可执行文件的路径。如果 Navidrome 无法找到 ffmpeg                       Empty (在 PATH 中搜索)\n                                                                 可执行文件，或者您想使用特定版本时，可以通过设置这个路径来使 Navidrome 将使用这个路径下的 ffmpeg\n                                                                 版本进行音频处理和解码。\nGATrackingID                   ND_GATRACKINGID                   将基本信息发送到您自己的 Google Analytics 账户。必须符合格式 UA-XXXXXXXX            Empty (禁用)\nIgnoredArticles                ND_IGNOREDARTICLES                在对艺术家进行排序/索引时被忽略的冠词列表                                          "The El La Los Las Le Les Os As O A"\nImageCacheSize                 ND_IMAGECACHESIZE                 图像（艺术作品）缓存的大小，将其设置为\'0\'以禁用缓存                                    "100MB"\nJukebox.Enabled                ND_JUKEBOX_ENABLED                启用点唱机模式（在服务器硬件上播放音频）                                           false\nJukebox.Devices                ND_JUKEBOX_DEVICES                点唱机可使用的设备列表                                                    Empty (自动检测)\nJukebox.Default                ND_JUKEBOX_DEFAULT                如果有多个 Jukebox.Devices 条目，则用于点唱机模式的设备                           Empty (自动检测)\nLastFM.ApiKey                  ND_LASTFM_APIKEY                  Last.fm ApiKey                                                 Navidrome 项目的共享 ApiKey\nLastFM.Enabled                 ND_LASTFM_ENABLED                 将此设置为 false 完全禁用 Last.fm 集成                                    true\nLastFM.Language                ND_LASTFM_LANGUAGE                用于从 Last.fm 获取传记信息的语言的两个字母码                                    "en"\nLastFM.Secret                  ND_LASTFM_SECRET                  Last.fm Shared Secret                                          Navidrome 项目的共享密钥\nListenBrainz.BaseURL           ND_LISTENBRAINZ_BASEURL           将此设置为覆盖默认的 ListenBrainz 基本 URL（在像 Maloja 这样的自托管解决方案中非常有用）      https://api.listenbrainz.org/1/\nListenBrainz.Enabled           ND_LISTENBRAINZ_ENABLED           将此设置为 false 完全禁用 ListenBrainz 集成                               true\nMaxSidebarPlaylists            ND_MAXSIDEBARPLAYLISTS            设置 UI 侧边栏显示的播放列表的最大数量。请注意，非常大的数量可能会导致 UI 性能问题                  100\nMPVPath                        ND_MPVPATH                        mpv 可执行文件的路径，用于点唱机模式                                           Empty (在 PATH 中搜索)\nPasswordEncryptionKey          ND_PASSWORDENCRYPTIONKEY          用于在数据库中加密密码的密码短语                                               -\nPlaylistsPath                  ND_PLAYLISTSPATH                  在哪里搜索并导入播放列表。可以是文件夹/通配符（用冒号“：”分隔，Windows                       ".:/" ("MusicFolder"目录及其所有子目录)\n                                                                 上用分号“;”分隔）。路径必须相对于“MusicFolder”（存放你音乐文件的根目录）\nPrometheus.Enabled             ND_PROMETHEUS_ENABLED             使用 Prometheus 指标启用额外的端点                                        false\nPrometheus.MetricsPath         ND_PROMETHEUS_METRICSPATH         自定义的 Prometheus 指标路径，用于阻止未经授权的指标请求                             "/metrics"\nRecentlyAddedByModTime         ND_RECENTLYADDEDBYMODTIME         按“最近添加”排序时使用音乐文件的修改时间，否则使用导入时间                                 false\nReverseProxyUserHeader         ND_REVERSEPROXYUSERHEADER         来自经过身份验证的代理的 HTTP 头包含用户名                                       "Remote-User"\nReverseProxyWhitelist          ND_REVERSEPROXYWHITELIST          当使用反向代理认证时，可以配置一个逗号分隔的 IP CIDR 列表，用于指定允许使用该认证机制的客户端 IP 地址范围,   Empty\n                                                                 如果为空则表示拒绝所有请求\nScanner.Extractor              ND_SCANNER_EXTRACTOR              元数据提取器的实现方式: taglib or ffmpeg                                  "taglib"\nScanner.GenreSeparators        ND_SCANNER_GENRESEPARATORS        用于拆分流派标签的分隔符列表                                                 ";/,"\nScanner.GroupAlbumReleases     ND_SCANNER_GROUPALBUMRELEASES     当设置为"true"时，会将具有相同艺术家（Artist）和专辑标题（Album                       false\n                                                                 Title）的音频文件分组为同一张专辑;\n                                                                 当设置为"false"时，会将重新发行（具有不同的发行日期）的音频文件视为独立的专辑\nScanSchedule                   ND_SCANSCHEDULE                   使用“cron”语法配置定期扫描,设置为"0"禁用它                                     "@every 1m"\nSearchFullString               ND_SEARCHFULLSTRING               匹配查询字符串在可搜索字段中的任意位置，而不仅限于单词边界。 适用于单词之间没有使用空格分隔的语言，例如中文或日语      false\nSessionTimeout                 ND_SESSIONTIMEOUT                 Web UI 的空闲会话超时时间                                               "24h"\nSpotify.ID                     ND_SPOTIFY_ID                     如果需要获取艺术家图片的话必须提供 Spotify 客户端 ID                               Empty\nSpotify.Secret                 ND_SPOTIFY_SECRET                 如果需要获取艺术家图片的话必须提供 Spotify 客户端密钥                                Empty\nSubsonicArtistParticipations   ND_SUBSONICARTISTPARTICIPATIONS   当请求艺术家的专辑时，可以选择包含艺术家参与的专辑，例如 Various Artists 合集专辑              false\nTLSCert                        ND_TLSCERT                        TLS 证书文件的路径                                                    Empty (disable TLS)\nTLSKey                         ND_TLSKEY                         TLS 密钥文件的路径                                                    Empty (disable TLS)\nTranscodingCacheSize           ND_TRANSCODINGCACHESIZE           转码缓存的大小，设置为"0"将禁用缓存                                            "100MB"\nUILoginBackgroundUrl           ND_UILOGINBACKGROUNDURL           更改登录页面中使用的背景图像                                                 Unsplash.com 的随机音乐图像\nUIWelcomeMessage               ND_UIWELCOMEMESSAGE               在登录屏幕添加欢迎消息                                                    Empty\n\n> 注意\n> \n>  * 对于时间持续长度，可以使用数字和一个单位后缀来指定，例如“24h”, “30s” 或 “1h10m”。有效时间单位为“s”、“m”、“h”。\n>  * 对于大小，可以使用数字和可选的单位后缀来指定，例如“1GB”或“150 MiB”。默认单位为字节。注意： “1KB” == “1000”， “1KiB” == “1024”。',normalizedContent:'# 一、 容器部署\n\n1、打开 docker,在镜像仓库搜索 navidrome，下载“deluan/navidrome”最新版本镜像。\n\n\n\n2、点击创建容器，容器名称可以默认也可以自定义，点击下一步\n\n\n\n3、设置存储空间设置：在 docker 文件夹下新建一个“navidrome”文件夹，然后新建了一个子文件夹“data” 用来存储其数据库和缓存，并把它挂载为“/data”；然后选择你的音乐文件夹挂载为“/music”\n\n\n\n4、端口设置：默认 4533，本地端口不冲突即可\n\n\n\n5、环境设置\n\n环境变量可以按自己要求来增加，比如我增加了红框中的几项：\n\n\n\n更多的配置可以点击下方的环境配置进行查看。\n\n6、全部填写完成后可以点击下一步，然后点击完成并启动容器，至此容器部署完成。\n\n\n# 二、使用\n\n\n# 基础使用\n\n1）本地浏览器访问 ip:4533 会自动跳转到账号注册页面，填入管理员用户名与密码。\n\n\n\n2）语言设置\n\n如果环境中没有另外设置默认语言的话，默认的为英文。\n\n此时我们可以点击右上角小人头像-personal，然后在第二个框选择语言。\n\n\n\n在这里可以设置语言为简体中文。\n\n\n\n3）如果对音乐文件进行增加和删除操作，可以点击一下刷新按钮刷新音乐库。\n\n\n\n\n# 2、第三方客户端\n\nnavidrome 除了 web 网页界面，还支持各种第三方客户端。\n\n * 音流\n\n\n# 三、环境配置\n\n官方地址：https://www.navidrome.org/docs/usage/configuration-options/\n\n\n# 基本配置\n\n配置文件夹         环境变量             描述                                                            默认值\n              nd_configfile    从外部配置文件中加载配置                                                  "./navidrome.toml"\nmusicfolder   nd_musicfolder   存储音乐库的文件夹。可以是只读的                                              "./music"\ndatafolder    nd_datafolder    用于存储应用程序数据 （db） 的文件夹                                          "./data"\ncachefolder   nd_cachefolder   用于存储缓存数据（转码、图像等）的文件夹                                          "/cache"\nloglevel      nd_loglevel      日志级别。用于故障排除。可选的值：: error, warn, info, debug, trace            "info"\naddress       nd_address       服务器地址，可以是 ipv4 或 ipv6。 还支持 unix 套接字文件的路径 unix:/path/to/file   0.0.0.0 and :: (all ips)\nbaseurl       nd_baseurl       用于在代理后面配置 navidrome 的基本 url (例如：examples: /music,             empty\n                               https://music.example.com)\nport          nd_port http     navidrome 将使用的 http 端口                                        4533\n\n\n# 高级配置\n\n配置文件夹                          环境变量                              描述                                                             默认值\nauthrequestlimit*              nd_authrequestlimit               在 authwindowlength 期间，单个 ip 可以处理多少个登录请求。设为 0 以禁用限制速率。          5\nauthwindowlength*              nd_authwindowlength               用于身份验证速率限制的时间窗口长度                                              "20s"\nautoimportplaylists            nd_autoimportplaylists            启用/禁用 .m3u 播放列表自动导入                                            true\ncoverartpriority               nd_coverartpriority               配置查找封面艺术图片的顺序，使用特殊embedded值从音频文件中获取嵌入图片                        cover., folder., front.*, embedded, external\nartistartpriority              nd_artistartpriority              配置查找艺术家图片的顺序                                                   artist., album/artist., external\ncoverjpegquality               nd_coverjpegquality               通过设置 jpeg 质量百分比指定压缩后的封面艺术图片的质量级别                               75\ndefaultdownsamplingformat      nd_defaultdownsamplingformat      客户要求进行降采样时转码的格式（无格式时比特率最大）                                     opus\ndefaultlanguage                nd_defaultlanguage                设置在使用新浏览器登录时界面的默认语言。这个值必须与 resources/i18n                      "en"\n                                                                 文件夹中文件名之一相匹配。例如，对于简体中文，它必须是 zh-hans（区分大小写）。\ndefaulttheme                   nd_defaulttheme                   设置在使用新浏览器登录时 ui 使用的默认主题。此值必须与 ui 中的某个选项匹配                      dark\nenableartworkprecache          nd_enableartworkprecache          启用对新添加的音乐进行图像预缓存                                               true\nenablecoveranimation           nd_enablecoveranimation           控制 ui 中的播放器是否对专辑封面进行动画效果（旋转）                                   true\nenabledownloads                nd_enabledownloads                在 ui 中启用从服务器下载音乐/专辑/艺术家/播放列表的选项。                               true\nenableexternalservices         nd_enableexternalservices         将其设置为 false 以完全禁用所有外部集成                                        true\nenablefavourites               nd_enablefavourites               在用户界面中启用对歌曲/专辑/艺术家进行‘喜爱’/\'收藏\'的切换功能（在 subsonic                  true\n                                                                 客户端中被映射为‘星星’/\'标记\'）\nenablegravatar                 nd_enablegravatar                 使用gravatar图像作为用户个人资料图片。需要填写用户的电子邮件地址。                          false\nenablelogredacting             nd_enablelogredacting             是否应该在日志中隐藏敏感信息（例如令牌和密码）                                        true\nenablemediafilecoverart        nd_enablemediafilecoverart        如果设置为 false，当请求歌曲封面时，将返回专辑封面                                   true\nenablereplaygain               nd_enablereplaygain               在 ui 中启用 replaygain 选项                                         true\nenablesharing                  nd_enablesharing                  启用分享功能                                                         false\nenablestarrating               nd_enablestarrating               在 ui 中启用 5 星评级                                                 true\nenabletranscodingconfig        nd_enabletranscodingconfig        在 ui 中启用转码配置                                                   false\nenableuserediting              nd_enableuserediting              使普通用户能够编辑其详细信息并更改其密码                                           true\nffmpegpath                     nd_ffmpegpath                     ffmpeg 可执行文件的路径。如果 navidrome 无法找到 ffmpeg                       empty (在 path 中搜索)\n                                                                 可执行文件，或者您想使用特定版本时，可以通过设置这个路径来使 navidrome 将使用这个路径下的 ffmpeg\n                                                                 版本进行音频处理和解码。\ngatrackingid                   nd_gatrackingid                   将基本信息发送到您自己的 google analytics 账户。必须符合格式 ua-xxxxxxxx            empty (禁用)\nignoredarticles                nd_ignoredarticles                在对艺术家进行排序/索引时被忽略的冠词列表                                          "the el la los las le les os as o a"\nimagecachesize                 nd_imagecachesize                 图像（艺术作品）缓存的大小，将其设置为\'0\'以禁用缓存                                    "100mb"\njukebox.enabled                nd_jukebox_enabled                启用点唱机模式（在服务器硬件上播放音频）                                           false\njukebox.devices                nd_jukebox_devices                点唱机可使用的设备列表                                                    empty (自动检测)\njukebox.default                nd_jukebox_default                如果有多个 jukebox.devices 条目，则用于点唱机模式的设备                           empty (自动检测)\nlastfm.apikey                  nd_lastfm_apikey                  last.fm apikey                                                 navidrome 项目的共享 apikey\nlastfm.enabled                 nd_lastfm_enabled                 将此设置为 false 完全禁用 last.fm 集成                                    true\nlastfm.language                nd_lastfm_language                用于从 last.fm 获取传记信息的语言的两个字母码                                    "en"\nlastfm.secret                  nd_lastfm_secret                  last.fm shared secret                                          navidrome 项目的共享密钥\nlistenbrainz.baseurl           nd_listenbrainz_baseurl           将此设置为覆盖默认的 listenbrainz 基本 url（在像 maloja 这样的自托管解决方案中非常有用）      https://api.listenbrainz.org/1/\nlistenbrainz.enabled           nd_listenbrainz_enabled           将此设置为 false 完全禁用 listenbrainz 集成                               true\nmaxsidebarplaylists            nd_maxsidebarplaylists            设置 ui 侧边栏显示的播放列表的最大数量。请注意，非常大的数量可能会导致 ui 性能问题                  100\nmpvpath                        nd_mpvpath                        mpv 可执行文件的路径，用于点唱机模式                                           empty (在 path 中搜索)\npasswordencryptionkey          nd_passwordencryptionkey          用于在数据库中加密密码的密码短语                                               -\nplaylistspath                  nd_playlistspath                  在哪里搜索并导入播放列表。可以是文件夹/通配符（用冒号“：”分隔，windows                       ".:/" ("musicfolder"目录及其所有子目录)\n                                                                 上用分号“;”分隔）。路径必须相对于“musicfolder”（存放你音乐文件的根目录）\nprometheus.enabled             nd_prometheus_enabled             使用 prometheus 指标启用额外的端点                                        false\nprometheus.metricspath         nd_prometheus_metricspath         自定义的 prometheus 指标路径，用于阻止未经授权的指标请求                             "/metrics"\nrecentlyaddedbymodtime         nd_recentlyaddedbymodtime         按“最近添加”排序时使用音乐文件的修改时间，否则使用导入时间                                 false\nreverseproxyuserheader         nd_reverseproxyuserheader         来自经过身份验证的代理的 http 头包含用户名                                       "remote-user"\nreverseproxywhitelist          nd_reverseproxywhitelist          当使用反向代理认证时，可以配置一个逗号分隔的 ip cidr 列表，用于指定允许使用该认证机制的客户端 ip 地址范围,   empty\n                                                                 如果为空则表示拒绝所有请求\nscanner.extractor              nd_scanner_extractor              元数据提取器的实现方式: taglib or ffmpeg                                  "taglib"\nscanner.genreseparators        nd_scanner_genreseparators        用于拆分流派标签的分隔符列表                                                 ";/,"\nscanner.groupalbumreleases     nd_scanner_groupalbumreleases     当设置为"true"时，会将具有相同艺术家（artist）和专辑标题（album                       false\n                                                                 title）的音频文件分组为同一张专辑;\n                                                                 当设置为"false"时，会将重新发行（具有不同的发行日期）的音频文件视为独立的专辑\nscanschedule                   nd_scanschedule                   使用“cron”语法配置定期扫描,设置为"0"禁用它                                     "@every 1m"\nsearchfullstring               nd_searchfullstring               匹配查询字符串在可搜索字段中的任意位置，而不仅限于单词边界。 适用于单词之间没有使用空格分隔的语言，例如中文或日语      false\nsessiontimeout                 nd_sessiontimeout                 web ui 的空闲会话超时时间                                               "24h"\nspotify.id                     nd_spotify_id                     如果需要获取艺术家图片的话必须提供 spotify 客户端 id                               empty\nspotify.secret                 nd_spotify_secret                 如果需要获取艺术家图片的话必须提供 spotify 客户端密钥                                empty\nsubsonicartistparticipations   nd_subsonicartistparticipations   当请求艺术家的专辑时，可以选择包含艺术家参与的专辑，例如 various artists 合集专辑              false\ntlscert                        nd_tlscert                        tls 证书文件的路径                                                    empty (disable tls)\ntlskey                         nd_tlskey                         tls 密钥文件的路径                                                    empty (disable tls)\ntranscodingcachesize           nd_transcodingcachesize           转码缓存的大小，设置为"0"将禁用缓存                                            "100mb"\nuiloginbackgroundurl           nd_uiloginbackgroundurl           更改登录页面中使用的背景图像                                                 unsplash.com 的随机音乐图像\nuiwelcomemessage               nd_uiwelcomemessage               在登录屏幕添加欢迎消息                                                    empty\n\n> 注意\n> \n>  * 对于时间持续长度，可以使用数字和一个单位后缀来指定，例如“24h”, “30s” 或 “1h10m”。有效时间单位为“s”、“m”、“h”。\n>  * 对于大小，可以使用数字和可选的单位后缀来指定，例如“1gb”或“150 mib”。默认单位为字节。注意： “1kb” == “1000”， “1kib” == “1024”。',charsets:{cjk:!0}},{title:"TaleBook",frontmatter:{title:"TaleBook",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/TaleBook/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/04.%E7%94%B5%E5%AD%90%E4%B9%A6/01.TaleBook.html",relativePath:"01.娱乐/04.电子书/01.TaleBook.md",key:"v-79024ae1",path:"/fun/TaleBook/",headers:[{level:2,title:"一、容器部署",slug:"一、容器部署",normalizedTitle:"一、容器部署",charIndex:42},{level:2,title:"二、配置",slug:"二、配置",normalizedTitle:"二、配置",charIndex:306}],headersStr:"一、容器部署 二、配置",content:"TaleBook 是基于 Calibre Web 二次开发的开源书库工具。\n\n\n# 一、容器部署\n\n首先我们先在 Docker 管理器中打开镜像管理，在镜像仓库中搜索 talebook/talebook，选择 latest 版本下载。\n\n\n\n然后我们在本地镜像中找到刚刚下载的镜像，点击创建容器。\n\n\n\n在基础设置中，将重启策略设置为容器退出时总是重启容器。\n\n\n\n在存储空间设置中，我们为容器的挂载目录/data 在 docker 盘新建一个目录 Talebook，并配置类型为读写。\n\n\n\n然后在端口设置中，我们设置一个好记的端口，后续访问的时候会用到。\n\n\n\n点下一步，再点完成，容器就创建好了。\n\n\n# 二、配置\n\n1、我们可以通过IP:端口或者域名:端口来访问我们刚搭好的容器进入注册页面。\n\n * 如果我们不希望其他人能随便访问的话，那么我们最好开启私人图书馆模式。\n * 网站标题、用户名、密码、邮箱、访问码等，都按自己的喜好填好即可。\n * 完成填写后，点击完成设置。\n\n\n\n2、这里输入刚刚设置的访问码。\n\n\n\n3、下面就会进入到首页。 然后我们在右上角点击“请登录”按钮，并通过刚才配置的账号密码登陆。\n\n\n\n4、然后我们在刚刚新建的 Talebook 目录下找到 books/imports 目录，并将我们的书籍上传到此目录。 上传成功后，在网页左上角找到管理，并进入导入图书页面，点击扫描书籍。\n\n\n\n5、在扫描出来的书籍列表中，勾选我们想要导入的书籍，并点击“导入书籍”按钮。\n\n\n\n6、等待一段时间后，我们就可以看到我们选择的书籍被成功导入了。\n\n\n\n7、回到首页，随便点击一本书进来，我们可以直接在线阅读，或者将它推送到邮箱、Kindle。如果书籍信息有错误的话，我们还可以手动更新书籍相关信息，并从互联网更新书籍信息。\n\n",normalizedContent:"talebook 是基于 calibre web 二次开发的开源书库工具。\n\n\n# 一、容器部署\n\n首先我们先在 docker 管理器中打开镜像管理，在镜像仓库中搜索 talebook/talebook，选择 latest 版本下载。\n\n\n\n然后我们在本地镜像中找到刚刚下载的镜像，点击创建容器。\n\n\n\n在基础设置中，将重启策略设置为容器退出时总是重启容器。\n\n\n\n在存储空间设置中，我们为容器的挂载目录/data 在 docker 盘新建一个目录 talebook，并配置类型为读写。\n\n\n\n然后在端口设置中，我们设置一个好记的端口，后续访问的时候会用到。\n\n\n\n点下一步，再点完成，容器就创建好了。\n\n\n# 二、配置\n\n1、我们可以通过ip:端口或者域名:端口来访问我们刚搭好的容器进入注册页面。\n\n * 如果我们不希望其他人能随便访问的话，那么我们最好开启私人图书馆模式。\n * 网站标题、用户名、密码、邮箱、访问码等，都按自己的喜好填好即可。\n * 完成填写后，点击完成设置。\n\n\n\n2、这里输入刚刚设置的访问码。\n\n\n\n3、下面就会进入到首页。 然后我们在右上角点击“请登录”按钮，并通过刚才配置的账号密码登陆。\n\n\n\n4、然后我们在刚刚新建的 talebook 目录下找到 books/imports 目录，并将我们的书籍上传到此目录。 上传成功后，在网页左上角找到管理，并进入导入图书页面，点击扫描书籍。\n\n\n\n5、在扫描出来的书籍列表中，勾选我们想要导入的书籍，并点击“导入书籍”按钮。\n\n\n\n6、等待一段时间后，我们就可以看到我们选择的书籍被成功导入了。\n\n\n\n7、回到首页，随便点击一本书进来，我们可以直接在线阅读，或者将它推送到邮箱、kindle。如果书籍信息有错误的话，我们还可以手动更新书籍相关信息，并从互联网更新书籍信息。\n\n",charsets:{cjk:!0}},{title:"qBittorrent",frontmatter:{title:"qBittorrent",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/qBittorrent/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/01.qBittorrent.html",relativePath:"02.工具/01.影视自动化工具/01.qBittorrent.md",key:"v-31756950",path:"/tool/qBittorrent/",headers:[{level:2,title:"1、容器创建",slug:"_1、容器创建",normalizedTitle:"1、容器创建",charIndex:2},{level:2,title:"2、初始化设置",slug:"_2、初始化设置",normalizedTitle:"2、初始化设置",charIndex:744},{level:2,title:"3、皮肤美化",slug:"_3、皮肤美化",normalizedTitle:"3、皮肤美化",charIndex:1001},{level:2,title:"4、进阶",slug:"_4、进阶",normalizedTitle:"4、进阶",charIndex:1542},{level:3,title:"1、忘记密码",slug:"_1、忘记密码",normalizedTitle:"1、忘记密码",charIndex:1551},{level:3,title:"2、详细说明",slug:"_2、详细说明",normalizedTitle:"2、详细说明",charIndex:1658}],headersStr:"1、容器创建 2、初始化设置 3、皮肤美化 4、进阶 1、忘记密码 2、详细说明",content:"# 1、容器创建\n\n1、首先登录绿联云 APP，并在存储空间 docker 目录下新建个 qBittorrent 文件夹来存储配置文件。\n\n\n\n2、登录绿联云 APP，打开 docker 在镜像管理，在镜像仓库中搜索 qbittorrent，点击下载版本选择最新版本即可（latest）。\n\n\n\n3、下载好后在本地镜像中找到已经下载好的镜像点击创建容器。\n\n\n\n4、容器名称保持默认，因为 qb 在下载较多种子的时候对系统资源的占用比较高，所以我对 qb 的系统资源占用情况进行了限制，大家根据自身需求进行设置，然后点击下一步。\n\n\n\n5、基础设置中重启策略选择最后一个容器退出时重启（不考虑在进程启...），网络和命令保持默认即可。\n\n\n\n6、存储空间中，首先将第一步中创建 qBittorrent 目录装载给/config，用来存储 qBittorrent 的配置文件。然后把影视文件夹目录装载给 hdd (这里 hdd 换成其它的名称也可以)。\n\n\n\n7、端口设置中本地端口和容器端口保持一样就行，因为很多 PT 站封禁了 6881 端口，所以我们修改 6881 端口为 16881 端口。\n\n\n\n8、环境中添加如下名称和值，然后点击下一步。\n\n * PUID=0\n * PGID=0\n * TZ=Asia/Shanghai\n * WEBUI_PORT=8080\n\n\n\n9、再次检查配置选项是否正确，没有问题后点击完成。\n\n\n\n10、然后点击启动容器，就可以看到 qBittorrent 显示运行中。\n\n\n\n11、打开浏览器，在地址栏输入绿联 IP:8080,就可以访问 qb 的 webui 页面了，输入初始的用户名（admin）和密码（adminadmin）登录。\n\n\n\n\n# 2、初始化设置\n\n> 下面的设置项设置完成后，记得点击保存。\n\n1、点击设置按钮，可以把语言设置为简体中文。\n\n\n\n2、在 web UI 下可以修改账户名称和密码，建议修改。\n\n\n\n3、如果下载没速度的话，可以点击一下随机端口，最好设置个 5 位数的端口。\n\n\n\n4、如果同时下载数很多的话，则有些会显示排队的状态，我们可以取消勾选 Torrent 排队来解决，也可以把默认的数值设置大一点。\n\n\n\n5、确认“总是向同级的所有 Tracker 汇报”、“总是向所有等级的 Tracker 汇报”选中。\n\n\n\n\n# 3、皮肤美化\n\n官方介绍：https://github.com/WDaan/VueTorrent\n\n1、VueTorrent 压缩包下载：https://github.com/WDaan/VueTorrent/releases,下载最新版本的即可。注意：下载的是 vuetorrent.zip 这个压缩包而不是下面两个源码的。\n\n\n\n2、在 docker 盘的 qb 目录（/config 挂载对应的目录）下新建一个文件夹 theme 用来存放皮肤文件。\n\n\n\n3、把下载的 VueTorrent 压缩包文件解压放进去。\n\n\n\n4、然后打开 qb，点开设置-Web UI 里面，勾选使用备用 Web UI，并选择路径。然后点击保存。\n\n\n\n5、重启 qb，进入已更换皮肤的 web 界面，点击右上角的齿轮进入设置界面，选择 VUETORRENT，往下翻，设置语言为中文，右上角点击保存。然后重新刷新界面，就是中文界面了。\n\n\n\n6、如果页面打不开，提示 xx 文件无效、找不到，那说明文件夹路径配置错误。\n\n可以打开 QB 配置文件（qBittorrent.conf，记事本等工具可以打开）。\n\n\n\n然后找到 WebUI\\RootFolder 行， 修改后面的值即可。\n\n\n\n\n# 4、进阶\n\n\n# 1、忘记密码\n\n如果忘记了密码，可以打开 QB 配置文件（qBittorrent.conf），删除 WebUI\\Password_PBKDF2 这一行把密码重置为默认密码，再重启 QB 容器就可以了。\n\n\n\n\n# 2、详细说明\n\n在网上看到的一个详细说明，仅供参考\n\n\n\n\n\n可实现下载完成通知、宕机通知、tracker 出错超出阈值通知、自动分类、tracker 出错打标签、批量修改 tracker、检测指定文件夹下未在 qbittorrent 客户端中做种的文件夹/文件、配合 IYUUAutoReseed 实现自动重新校验和自动恢复做种、指定设备上线时自动限速、多时段限速、导出做种文件清单、导出未做种文件清单等等等等。\n\n\n\n\n\n\n\n匿名模式说明：https://github.com/qbittorrent/qBittorrent/wiki/Anonymous-Mode\n\n\n\n\n\n可用的备用 WebUI 清单见：https://github.com/qbittorrent/qBittorrent/wiki/List-of-known-alternate-WebUIs。\n\n",normalizedContent:"# 1、容器创建\n\n1、首先登录绿联云 app，并在存储空间 docker 目录下新建个 qbittorrent 文件夹来存储配置文件。\n\n\n\n2、登录绿联云 app，打开 docker 在镜像管理，在镜像仓库中搜索 qbittorrent，点击下载版本选择最新版本即可（latest）。\n\n\n\n3、下载好后在本地镜像中找到已经下载好的镜像点击创建容器。\n\n\n\n4、容器名称保持默认，因为 qb 在下载较多种子的时候对系统资源的占用比较高，所以我对 qb 的系统资源占用情况进行了限制，大家根据自身需求进行设置，然后点击下一步。\n\n\n\n5、基础设置中重启策略选择最后一个容器退出时重启（不考虑在进程启...），网络和命令保持默认即可。\n\n\n\n6、存储空间中，首先将第一步中创建 qbittorrent 目录装载给/config，用来存储 qbittorrent 的配置文件。然后把影视文件夹目录装载给 hdd (这里 hdd 换成其它的名称也可以)。\n\n\n\n7、端口设置中本地端口和容器端口保持一样就行，因为很多 pt 站封禁了 6881 端口，所以我们修改 6881 端口为 16881 端口。\n\n\n\n8、环境中添加如下名称和值，然后点击下一步。\n\n * puid=0\n * pgid=0\n * tz=asia/shanghai\n * webui_port=8080\n\n\n\n9、再次检查配置选项是否正确，没有问题后点击完成。\n\n\n\n10、然后点击启动容器，就可以看到 qbittorrent 显示运行中。\n\n\n\n11、打开浏览器，在地址栏输入绿联 ip:8080,就可以访问 qb 的 webui 页面了，输入初始的用户名（admin）和密码（adminadmin）登录。\n\n\n\n\n# 2、初始化设置\n\n> 下面的设置项设置完成后，记得点击保存。\n\n1、点击设置按钮，可以把语言设置为简体中文。\n\n\n\n2、在 web ui 下可以修改账户名称和密码，建议修改。\n\n\n\n3、如果下载没速度的话，可以点击一下随机端口，最好设置个 5 位数的端口。\n\n\n\n4、如果同时下载数很多的话，则有些会显示排队的状态，我们可以取消勾选 torrent 排队来解决，也可以把默认的数值设置大一点。\n\n\n\n5、确认“总是向同级的所有 tracker 汇报”、“总是向所有等级的 tracker 汇报”选中。\n\n\n\n\n# 3、皮肤美化\n\n官方介绍：https://github.com/wdaan/vuetorrent\n\n1、vuetorrent 压缩包下载：https://github.com/wdaan/vuetorrent/releases,下载最新版本的即可。注意：下载的是 vuetorrent.zip 这个压缩包而不是下面两个源码的。\n\n\n\n2、在 docker 盘的 qb 目录（/config 挂载对应的目录）下新建一个文件夹 theme 用来存放皮肤文件。\n\n\n\n3、把下载的 vuetorrent 压缩包文件解压放进去。\n\n\n\n4、然后打开 qb，点开设置-web ui 里面，勾选使用备用 web ui，并选择路径。然后点击保存。\n\n\n\n5、重启 qb，进入已更换皮肤的 web 界面，点击右上角的齿轮进入设置界面，选择 vuetorrent，往下翻，设置语言为中文，右上角点击保存。然后重新刷新界面，就是中文界面了。\n\n\n\n6、如果页面打不开，提示 xx 文件无效、找不到，那说明文件夹路径配置错误。\n\n可以打开 qb 配置文件（qbittorrent.conf，记事本等工具可以打开）。\n\n\n\n然后找到 webui\\rootfolder 行， 修改后面的值即可。\n\n\n\n\n# 4、进阶\n\n\n# 1、忘记密码\n\n如果忘记了密码，可以打开 qb 配置文件（qbittorrent.conf），删除 webui\\password_pbkdf2 这一行把密码重置为默认密码，再重启 qb 容器就可以了。\n\n\n\n\n# 2、详细说明\n\n在网上看到的一个详细说明，仅供参考\n\n\n\n\n\n可实现下载完成通知、宕机通知、tracker 出错超出阈值通知、自动分类、tracker 出错打标签、批量修改 tracker、检测指定文件夹下未在 qbittorrent 客户端中做种的文件夹/文件、配合 iyuuautoreseed 实现自动重新校验和自动恢复做种、指定设备上线时自动限速、多时段限速、导出做种文件清单、导出未做种文件清单等等等等。\n\n\n\n\n\n\n\n匿名模式说明：https://github.com/qbittorrent/qbittorrent/wiki/anonymous-mode\n\n\n\n\n\n可用的备用 webui 清单见：https://github.com/qbittorrent/qbittorrent/wiki/list-of-known-alternate-webuis。\n\n",charsets:{cjk:!0}},{title:"reader小说阅读",frontmatter:{title:"reader小说阅读",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/reader/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/04.%E7%94%B5%E5%AD%90%E4%B9%A6/02.reader.html",relativePath:"01.娱乐/04.电子书/02.reader.md",key:"v-ecb0658a",path:"/fun/reader/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:50},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:636}],headersStr:"容器部署 初始化",content:"github 官网：https://github.com/hectorqin/reader\n\n\n# 容器部署\n\n1、在 Docker 管理器中打开镜像管理，在镜像仓库中搜索 hectorqin/reader，选择 latest 版本下载。\n\n\n\n2、点击本地镜像，找到刚才下载的镜像，并点击创建容器。在配置窗口容器名称可以自定义，勾选创建后启动容器，并点击下一步。\n\n\n\n3、在基础设置中，勾选重启策略为“容器退出时总是重启容器”。\n\n\n\n4、网络中保持默认为“bridge”，命令保持默认为 java -jar /app/bin/reader.jar。\n\n5、存储空间设置：在 docekr 文件夹下新建一个文件夹 reader，然后在这个文件夹下再创建两个子文件夹，分别叫 log 和 storage。\n\n * 选择 log 目录，然后配置装载路径为/log，类型为读写。\n * 选择 storage 目录，然后配置装载路径为/storage，类型为读写。\n\n\n\n6、在端口设置中，如果本地端口未被占用的话默认即可，要不设置一个未被占用的其他端口即可。\n\n\n\n7、在环境设置中，我们添加三个环境变量。\n\n * 配置邀请码：READER_APP_INVITECODE:your_invite_code\n * 配置访问密码：READER_APP_SECUREKEY:your_password\n * 开启安全访问：READER_APP_SECURE:true\n\n\n\n\n# 初始化\n\n1、在浏览器输入 IP:端口来访问网站，点击注册\n\n\n\n2、设置账号密码，邀请码为我们刚才在环境变量里配置的邀请码。\n\n\n\n3、自动登陆后点击左下角用户空间处的“进入管理模式”。输入我们在环境变量里配置的密码，点击确定。\n\n\n\n4、点击导入书源并选择书源配置文件，配置文件为 json 格式。\n\n",normalizedContent:"github 官网：https://github.com/hectorqin/reader\n\n\n# 容器部署\n\n1、在 docker 管理器中打开镜像管理，在镜像仓库中搜索 hectorqin/reader，选择 latest 版本下载。\n\n\n\n2、点击本地镜像，找到刚才下载的镜像，并点击创建容器。在配置窗口容器名称可以自定义，勾选创建后启动容器，并点击下一步。\n\n\n\n3、在基础设置中，勾选重启策略为“容器退出时总是重启容器”。\n\n\n\n4、网络中保持默认为“bridge”，命令保持默认为 java -jar /app/bin/reader.jar。\n\n5、存储空间设置：在 docekr 文件夹下新建一个文件夹 reader，然后在这个文件夹下再创建两个子文件夹，分别叫 log 和 storage。\n\n * 选择 log 目录，然后配置装载路径为/log，类型为读写。\n * 选择 storage 目录，然后配置装载路径为/storage，类型为读写。\n\n\n\n6、在端口设置中，如果本地端口未被占用的话默认即可，要不设置一个未被占用的其他端口即可。\n\n\n\n7、在环境设置中，我们添加三个环境变量。\n\n * 配置邀请码：reader_app_invitecode:your_invite_code\n * 配置访问密码：reader_app_securekey:your_password\n * 开启安全访问：reader_app_secure:true\n\n\n\n\n# 初始化\n\n1、在浏览器输入 ip:端口来访问网站，点击注册\n\n\n\n2、设置账号密码，邀请码为我们刚才在环境变量里配置的邀请码。\n\n\n\n3、自动登陆后点击左下角用户空间处的“进入管理模式”。输入我们在环境变量里配置的密码，点击确定。\n\n\n\n4、点击导入书源并选择书源配置文件，配置文件为 json 格式。\n\n",charsets:{cjk:!0}},{title:"transmission",frontmatter:{title:"transmission",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/transmission/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/02.transmission.html",relativePath:"02.工具/01.影视自动化工具/02.transmission.md",key:"v-50f0ebb8",path:"/tool/transmission/",headers:[{level:2,title:"1、容器安装",slug:"_1、容器安装",normalizedTitle:"1、容器安装",charIndex:2},{level:2,title:"2、初始化",slug:"_2、初始化",normalizedTitle:"2、初始化",charIndex:989}],headersStr:"1、容器安装 2、初始化",content:"# 1、容器安装\n\n1、在绿联云 APP 里打开 docker，在镜像管理-镜像仓库中搜索 transmission 并点击下载，版本选择最新版本即可（latest）。\n\n\n\n2、下载好后在本地镜像中找到已经下载好的镜像，点击创建容器。容器名称可以自定义，资源限制也可自定义，勾选创建后启动容器，然后点击下一步。\n\n\n\n3、基础设置中重启策略选择最后一个【容器退出时重启】，网络和命令保持默认即可。\n\n\n\n4、存储空间中，按以下来配置，注意类型是读写。\n\n文件/文件夹                                 装载路径      说明\n/docker 盘/Docker/transmission/config   /config   transmission 配置文件夹\n/娱乐盘/影视                                /hdd      影视文件夹，可自定义\n\n\n\n5、端口设置中本地端口和容器端口保持一样就行。\n\n\n\n6、环境中添加如下名称和值，然后点击下一步。\n\n环境名称                    环境值             说明\nTZ                      Asia/Shanghai   时区\nPUID                    0               容器内进程的用户 ID，默认 0\nPGID                    0               容器内进程所属的用户组 ID，默认 0\nUSER                    ***             web 登陆用户名，可自定义\nPASS                    ***             web 登陆密码，可自定义\nTRANSMISSION_WEB_HOME   /config/web     下载皮肤压缩包文件，将解压后的 web 文件夹放至/config 文件夹里\nRPCPORT                 9091            web 访问端口号，可自定义，默认为 9091\n\n\n\n\n\n7、再次检查配置选项是否正确，没有问题后点击完成。\n\n\n\n8、容器类表中可以看到 Transmission 已经正常运行。\n\n\n\n\n# 2、初始化\n\n1、打开浏览器，在地址栏输入绿联 IP:9091,输入初始的用户名和密码登录。\n\n\n\n登陆后界面\n\n",normalizedContent:"# 1、容器安装\n\n1、在绿联云 app 里打开 docker，在镜像管理-镜像仓库中搜索 transmission 并点击下载，版本选择最新版本即可（latest）。\n\n\n\n2、下载好后在本地镜像中找到已经下载好的镜像，点击创建容器。容器名称可以自定义，资源限制也可自定义，勾选创建后启动容器，然后点击下一步。\n\n\n\n3、基础设置中重启策略选择最后一个【容器退出时重启】，网络和命令保持默认即可。\n\n\n\n4、存储空间中，按以下来配置，注意类型是读写。\n\n文件/文件夹                                 装载路径      说明\n/docker 盘/docker/transmission/config   /config   transmission 配置文件夹\n/娱乐盘/影视                                /hdd      影视文件夹，可自定义\n\n\n\n5、端口设置中本地端口和容器端口保持一样就行。\n\n\n\n6、环境中添加如下名称和值，然后点击下一步。\n\n环境名称                    环境值             说明\ntz                      asia/shanghai   时区\npuid                    0               容器内进程的用户 id，默认 0\npgid                    0               容器内进程所属的用户组 id，默认 0\nuser                    ***             web 登陆用户名，可自定义\npass                    ***             web 登陆密码，可自定义\ntransmission_web_home   /config/web     下载皮肤压缩包文件，将解压后的 web 文件夹放至/config 文件夹里\nrpcport                 9091            web 访问端口号，可自定义，默认为 9091\n\n\n\n\n\n7、再次检查配置选项是否正确，没有问题后点击完成。\n\n\n\n8、容器类表中可以看到 transmission 已经正常运行。\n\n\n\n\n# 2、初始化\n\n1、打开浏览器，在地址栏输入绿联 ip:9091,输入初始的用户名和密码登录。\n\n\n\n登陆后界面\n\n",charsets:{cjk:!0}},{title:"moviepilot",frontmatter:{title:"moviepilot",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/moviepilot/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/04.moviepilot.html",relativePath:"02.工具/01.影视自动化工具/04.moviepilot.md",key:"v-5715e518",path:"/tool/moviepilot/",headers:[{level:2,title:"一、CookieCloud 部署",slug:"一、cookiecloud-部署",normalizedTitle:"一、cookiecloud 部署",charIndex:134},{level:3,title:"1、CookieCloud 容器部署",slug:"_1、cookiecloud-容器部署",normalizedTitle:"1、cookiecloud 容器部署",charIndex:155},{level:3,title:"2、安装 CookieCloud 插件",slug:"_2、安装-cookiecloud-插件",normalizedTitle:"2、安装 cookiecloud 插件",charIndex:285},{level:3,title:"3、插件使用",slug:"_3、插件使用",normalizedTitle:"3、插件使用",charIndex:480},{level:2,title:"二、mp 部署",slug:"二、mp-部署",normalizedTitle:"二、mp 部署",charIndex:1316},{level:3,title:"1、镜像下载",slug:"_1、镜像下载",normalizedTitle:"1、镜像下载",charIndex:1328},{level:3,title:"2、创建容器",slug:"_2、创建容器",normalizedTitle:"2、创建容器",charIndex:1383},{level:3,title:"3、mp 页面",slug:"_3、mp-页面",normalizedTitle:"3、mp 页面",charIndex:1535},{level:2,title:"三、环境配置",slug:"三、环境配置",normalizedTitle:"三、环境配置",charIndex:1671},{level:3,title:"1. 环境变量",slug:"_1-环境变量",normalizedTitle:"1. 环境变量",charIndex:1904},{level:3,title:"2. 配置文件",slug:"_2-配置文件",normalizedTitle:"2. 配置文件",charIndex:3720},{level:3,title:"3. 插件扩展",slug:"_3-插件扩展",normalizedTitle:"3. 插件扩展",charIndex:10784}],headersStr:"一、CookieCloud 部署 1、CookieCloud 容器部署 2、安装 CookieCloud 插件 3、插件使用 二、mp 部署 1、镜像下载 2、创建容器 3、mp 页面 三、环境配置 1. 环境变量 2. 配置文件 3. 插件扩展",content:"mp 官网：https://github.com/jxxghp/MoviePilot?ref=blog.digitalimmigrants.org\n\nCookieCloud 官网：https://github.com/easychen/CookieCloud\n\n\n# 一、CookieCloud 部署\n\n\n# 1、CookieCloud 容器部署\n\n1）下载 CookieCloud 镜像\n\n\n\n2）CookieCloud 容器部署，主要是设置个端口。\n\n\n\n3）部署完成后点击浏览器输入 IP:端口，可以看到 Hello World！字样，表示安装成功。\n\n\n\n\n# 2、安装 CookieCloud 插件\n\nmp 的站点信息需要通过 CookieCloud 同步获取，因此需要安装 CookieCloud 插件，将浏览器中的站点 Cookie 数据同步到云端后再同步到 MoviePilot 使用。\n\n安装方式：\n\n * 商店安装：Edge 商店 | Chrome 商店（ 注意：商店版本会因审核有延迟）\n * 手动下载安装：见 Release。\n\n\n# 3、插件使用\n\n\n\n1）工作模式\n\n一个浏览器只能工作在上传或者下载覆盖状态。一般来讲，我们会把最常使用的浏览器设为上传模式，其他都设置为下载覆盖模式。\n\n2）服务器地址\n\n你可以使用其它的第三方服务器端，也可以自行搭建。有一个需要注意的地方，早期版本的服务器端在 Cookie 过大时会报错，如果你在测试时遇到了，可以尝试添加「同步域名关键字」限制上传的 cookie 。\n\n3）用户 KEY\n\n由于一台服务器需要支持多个用户进行同步，因此需要通过用户 KEY 来进行区分。重复的用户 KEY 会导致同步数据覆盖，因此插件会自动生成一个足够长的随机 KEY 。当你配置下载覆盖模式时，需要使用同样的用户 KEY 。\n\n4）密码\n\n密码用于端对端加密，由于服务器端完全不知道密码，因此无法找回。不过我们的场景下只是备份 Cookie ，忘记后可以设置新的密码覆盖原有云端数据就行了。同样的，当你配置下载覆盖模式时，需要使用同样的用户 KEY 。\n\n\n\n5）同步域名关键词和同步域名黑名单\n\n默认情况下，会上传所有的 Cookie ，但这会带来额外的流量消耗。因此我们提供了同步域名关键词和同步域名黑名单，如果你填写了关键词，只有当 Cookie 的域名包含关键词时，才会上传/不上传对应的 Cookie 。有一个需要注意的地方是，部分网站的登入可能采用了其他二级域名，因此可能需要填写更短的顶级域名才能同步登入状态。\n\n6）Cookie 保活\n\n即使是常用浏览器，某些网站我们长期不打开它的 Cookie 也会过期，这样即使同步了 Cookie 也是过期的。因此，我们添加了 Cookie 保活功能，填到这里的网址会每 60 分钟在后台打开一次。\n\nCookie 保活示例代码：\n\nhttp://ftqq.com|5   //在 URL 后加上竖线和分钟数，指定自己想要的间隔时间\n\n\n1\n\n\n填写完上述内容后可以点击测试查看是否成功，然后点击保存保存内容。\n\n\n\n\n# 二、mp 部署\n\n\n# 1、镜像下载\n\n镜像仓库搜索 MoviePilot，选择jxxghp/moviepilot下载。\n\n\n\n\n# 2、创建容器\n\n1）名称可以默认，可以勾选创建后启动容器。\n\n\n\n2）基础设置设置重启策略：容器退出时总是重启容器。\n\n\n\n3）网络设置 host。\n\n\n\n4）存储空间设置。\n\n\n\n5）最重要的环境设置可跳转至环境配置查看具体的。\n\n\n\n环境配置完成后点击下一步。\n\n6）点击完成完成部署。\n\n\n\n\n# 3、mp 页面\n\n注意：容器首次启动需要下载浏览器内核，根据网络情况可能需要较长时间，此时无法登录。\n\n\n\n等加载完成后打开浏览器输入 IP:端口进入 mp 界面，输入环境中配置的超级管理员用户名（默认 admin）、密码（默认 password）进入首页。\n\n\n\n\n# 三、环境配置\n\n项目的所有配置均通过环境变量进行设置，支持两种配置方式：\n\n * 在 Docker 环境变量配置进行参数配置，如未自动显示配置项则需要手动增加对应环境变量。\n * 下载 app.env 配置文件，修改好配置后放置到配置文件映射路径根目录，配置项可根据说明自主增减。\n\n配置文件映射路径：/config，配置项生效优先级：环境变量 > env 文件 > 默认值。\n\n> ❗ 号标识的为必填项，其它为可选项，可选项可删除配置变量从而使用默认值。\n\n\n# 1. 环境变量\n\n部分参数如路径映射、站点认证、权限端口、时区等必须通过环境变量进行配置。\n\n * ❗NGINX_PORT： WEB 服务端口，默认3000，可自行修改，不能与 API 服务端口冲突（仅支持环境变量配置）\n * ❗PORT： API 服务端口，默认3001，可自行修改，不能与 WEB 服务端口冲突（仅支持环境变量配置）\n * PUID：运行程序用户的uid，默认0（仅支持环境变量配置）\n * PGID：运行程序用户的gid，默认0（仅支持环境变量配置）\n * UMASK：掩码权限，默认000，可以考虑设置为022（仅支持环境变量配置）\n * PROXY_HOST： 网络代理（可选），访问 themoviedb 或者重启更新需要使用代理访问，格式为http(s)://ip:port、socks5://user:pass@host:port（仅支持环境变量配置）\n * MOVIEPILOT_AUTO_UPDATE： 重启时自动更新，true/release/dev/false，默认release，需要能正常连接 Github 注意：如果出现网络问题可以配置PROXY_HOST（仅支持环境变量配置）\n * AUTO_UPDATE_RESOURCE：启动时自动检测和更新资源包（站点索引及认证等），true/false，默认true，需要能正常连接 Github，仅支持 Docker\n * ❗AUTH_SITE： 认证站点（认证通过后才能使用站点相关功能），支持配置多个认证站点，使用,分隔，如：iyuu,hhclub，会依次执行认证操作，直到有一个站点认证成功。认证资源v1.0.2支持iyuu/hhclub/audiences/hddolby/zmpt/freefarm/hdfans/wintersakura/leaves/1ptba/icc2022/ptlsp/xingtan/ptvicomo/agsvpt\n\n站点             参数\niyuu           IYUU_SIGN：IYUU 登录令牌\nhhclub         HHCLUB_USERNAME：用户名\n               HHCLUB_PASSKEY：密钥\naudiences      AUDIENCES_UID：用户 ID\n               AUDIENCES_PASSKEY：密钥\nhddolby        HDDOLBY_ID：用户 ID\n               HDDOLBY_PASSKEY：密钥\nzmpt           ZMPT_UID：用户 ID\n               ZMPT_PASSKEY：密钥\nfreefarm       FREEFARM_UID：用户 ID\n               FREEFARM_PASSKEY：密钥\nhdfans         HDFANS_UID：用户 ID\n               HDFANS_PASSKEY：密钥\nwintersakura   WINTERSAKURA_UID：用户 ID\n               WINTERSAKURA_PASSKEY：密钥\nleaves         LEAVES_UID：用户 ID\n               LEAVES_PASSKEY：密钥\n1ptba          1PTBA_UID：用户 ID\n               1PTBA_PASSKEY：密钥\nicc2022        ICC2022_UID：用户 ID\n               ICC2022_PASSKEY：密钥\nptlsp          PTLSP_UID：用户 ID\n               PTLSP_PASSKEY：密钥\nxingtan        XINGTAN_UID：用户 ID\n               XINGTAN_PASSKEY：密钥\nptvicomo       PTVICOMO_UID：用户 ID\n               PTVICOMO_PASSKEY：密钥\nagsvpt         AGSVPT_UID：用户 ID\n               AGSVPT_PASSKEY：密钥\n\n\n# 2. 配置文件\n\n可下载 app.env 配置文件，修改好配置后放置到配置文件映射路径根目录，配置项可根据说明自主增减，app.env 的所有配置项也可以通过环境变量进行配置。\n\n * ❗SUPERUSER： 超级管理员用户名，默认admin，安装后使用该用户登录后台管理界面\n * ❗SUPERUSER_PASSWORD： 超级管理员初始密码，默认password，建议修改为复杂密码\n * ❗API_TOKEN： API 密钥，默认moviepilot，在媒体服务器 Webhook、微信回调等地址配置中需要加上?token=该值，建议修改为复杂字符串\n * BIG_MEMORY_MODE： 大内存模式，默认为false，开启后会增加缓存数量，占用更多的内存，但响应速度会更快\n * GITHUB_TOKEN： Github token，提高请求 api 限流阈值 ghp_****\n\n----------------------------------------\n\n * TMDB_API_DOMAIN： TMDB API 地址，默认api.themoviedb.org，也可配置为api.tmdb.org或其它中转代理服务地址，能连通即可\n * TMDB_IMAGE_DOMAIN： TMDB 图片地址，默认image.tmdb.org，可配置为其它中转代理以加速 TMDB 图片显示，如：static-mdb.v.geilijiasu.com\n * WALLPAPER： 登录首页电影海报，tmdb/bing，默认tmdb，tmdb 要求能正常连接 api.themoviedb.org\n * RECOGNIZE_SOURCE： 媒体信息识别来源，themoviedb/douban，默认themoviedb，使用 themoviedb 时需要确保能正常连接 api.themoviedb.org，，使用douban时不支持二级分类\n * SCRAP_SOURCE： 刮削元数据及图片使用的数据源，themoviedb/douban，默认themoviedb，使用 themoviedb 时需要确保能正常连接 api.themoviedb.org，使用 douban 时会缺失部分信息\n * SCRAP_METADATA： 刮削入库的媒体文件，true/false，默认true\n * SCRAP_FOLLOW_TMDB： 新增已入库媒体是否跟随 TMDB 信息变化，true/false，默认true，为false时即使 TMDB 信息变化了也会仍然按历史记录中已入库的信息进行刮削\n\n----------------------------------------\n\n * ❗COOKIECLOUD_HOST： CookieCloud 服务器地址，格式：http(s)://ip:port，不配置默认使用内建服务器https://movie-pilot.org/cookiecloud\n * ❗COOKIECLOUD_KEY： CookieCloud 用户 KEY\n * ❗COOKIECLOUD_PASSWORD： CookieCloud 端对端加密密码\n * ❗COOKIECLOUD_INTERVAL： CookieCloud 同步间隔（分钟）\n * ❗USER_AGENT： CookieCloud 保存 Cookie 对应的浏览器 UA，建议配置，设置后可增加连接站点的成功率，同步站点后可以在管理界面中修改，值默认：Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36 Edg/113.0.1774.57\n\n----------------------------------------\n\n * ❗TRANSFER_TYPE： 整理转移方式，支持link/copy/move/softlink/rclone_copy/rclone_move 注意：在link和softlink转移方式下，转移后的文件会继承源文件的权限掩码，不受UMASK影响；rclone 需要自行映射 rclone 配置目录到容器中或在容器内完成 rclone 配置，节点名称必须为：MP\n * ❗OVERWRITE_MODE： 转移覆盖模式，默认为size，支持nerver/size/always/latest，分别表示不覆盖同名文件/同名文件根据文件大小覆盖（大覆盖小）/总是覆盖同名文件/仅保留最新版本，删除旧版本文件（包括非同名文件）\n * ❗LIBRARY_PATH： 媒体库目录，多个目录使用,分隔\n * LIBRARY_MOVIE_NAME： 电影媒体库目录名称（不是完整路径），默认电影\n * LIBRARY_TV_NAME： 电视剧媒体库目录称（不是完整路径），默认电视剧\n * LIBRARY_ANIME_NAME： 动漫媒体库目录称（不是完整路径），默认电视剧/动漫\n * LIBRARY_CATEGORY： 媒体库二级分类开关，true/false，默认false，开启后会根据配置 category.yaml 自动在媒体库目录下建立二级目录分类\n\n----------------------------------------\n\n * ❗DOWNLOAD_PATH： 下载保存目录，注意：需要将moviepilot及下载器的映射路径保持一致，否则会导致下载文件无法转移\n * DOWNLOAD_MOVIE_PATH： 电影下载保存目录路径，不设置则下载到DOWNLOAD_PATH\n * DOWNLOAD_TV_PATH： 电视剧下载保存目录路径，不设置则下载到DOWNLOAD_PATH\n * DOWNLOAD_ANIME_PATH： 动漫下载保存目录路径，不设置则下载到DOWNLOAD_PATH\n * DOWNLOAD_CATEGORY： 下载二级分类开关，true/false，默认false，开启后会根据配置 category.yaml 自动在下载目录下建立二级目录分类\n * DOWNLOAD_SUBTITLE： 下载站点字幕，true/false，默认true\n\n----------------------------------------\n\n * ❗DOWNLOADER： 下载器，支持qbittorrent/transmission，QB 版本号要求>= 4.3.9，TR 版本号要求>= 3.0，同时还需要配置对应渠道的环境变量，非对应渠道的变量可删除，推荐使用qbittorrent\n   \n   * qbittorrent设置项：\n     \n     * QB_HOST： qbittorrent 地址，格式：ip:port，https 需要添加https://前缀\n     * QB_USER： qbittorrent 用户名\n     * QB_PASSWORD： qbittorrent 密码\n     * QB_CATEGORY： qbittorrent 分类自动管理，true/false，默认false，开启后会将下载二级分类传递到下载器，由下载器管理下载目录，需要同步开启DOWNLOAD_CATEGORY\n     * QB_SEQUENTIAL： qbittorrent 按顺序下载，true/false，默认true\n     * QB_FORCE_RESUME： qbittorrent 忽略队列限制，强制继续，true/false，默认 false\n   \n   * transmission设置项：\n     \n     * TR_HOST： transmission 地址，格式：ip:port，https 需要添加https://前缀\n     * TR_USER： transmission 用户名\n     * TR_PASSWORD： transmission 密码\n\n * DOWNLOADER_MONITOR： 下载器监控，true/false，默认为true，开启后下载完成时才会自动整理入库\n\n * TORRENT_TAG： 下载器种子标签，默认为MOVIEPILOT，设置后只有 MoviePilot 添加的下载才会处理，留空所有下载器中的任务均会处理\n\n----------------------------------------\n\n * ❗MEDIASERVER： 媒体服务器，支持emby/jellyfin/plex，同时开启多个使用,分隔。还需要配置对应媒体服务器的环境变量，非对应媒体服务器的变量可删除，推荐使用emby\n   \n   * emby设置项：\n     \n     * EMBY_HOST： Emby 服务器地址，格式：ip:port，https 需要添加https://前缀\n     * EMBY_API_KEY： Emby Api Key，在设置->高级->API密钥处生成\n   \n   * jellyfin设置项：\n     \n     * JELLYFIN_HOST： Jellyfin 服务器地址，格式：ip:port，https 需要添加https://前缀\n     * JELLYFIN_API_KEY： Jellyfin Api Key，在设置->高级->API密钥处生成\n   \n   * plex设置项：\n     \n     * PLEX_HOST： Plex 服务器地址，格式：ip:port，https 需要添加https://前缀\n     * PLEX_TOKEN： Plex 网页 Url 中的X-Plex-Token，通过浏览器 F12->网络从请求 URL 中获取\n\n * MEDIASERVER_SYNC_INTERVAL: 媒体服务器同步间隔（小时），默认6，留空则不同步\n\n * MEDIASERVER_SYNC_BLACKLIST: 媒体服务器同步黑名单，多个媒体库名称使用,分割\n\n----------------------------------------\n\n * ❗MESSAGER： 消息通知渠道，支持 telegram/wechat/slack/synologychat，开启多个渠道时使用,分隔。同时还需要配置对应渠道的环境变量，非对应渠道的变量可删除，推荐使用telegram\n   \n   * wechat设置项：\n     \n     * WECHAT_CORPID： WeChat 企业 ID\n     * WECHAT_APP_SECRET： WeChat 应用 Secret\n     * WECHAT_APP_ID： WeChat 应用 ID\n     * WECHAT_TOKEN： WeChat 消息回调的 Token\n     * WECHAT_ENCODING_AESKEY： WeChat 消息回调的 EncodingAESKey\n     * WECHAT_ADMINS： WeChat 管理员列表，多个管理员用英文逗号分隔（可选）\n     * WECHAT_PROXY： WeChat 代理服务器（后面不要加/）\n   \n   * telegram设置项：\n     \n     * TELEGRAM_TOKEN： Telegram Bot Token\n     * TELEGRAM_CHAT_ID： Telegram Chat ID\n     * TELEGRAM_USERS： Telegram 用户 ID，多个使用,分隔，只有用户 ID 在列表中才可以使用 Bot，如未设置则均可以使用 Bot\n     * TELEGRAM_ADMINS： Telegram 管理员 ID，多个使用,分隔，只有管理员才可以操作 Bot 菜单，如未设置则均可以操作菜单（可选）\n   \n   * slack设置项：\n     \n     * SLACK_OAUTH_TOKEN： Slack Bot User OAuth Token\n     * SLACK_APP_TOKEN： Slack App-Level Token\n     * SLACK_CHANNEL： Slack 频道名称，默认全体（可选）\n   \n   * synologychat设置项：\n     \n     * SYNOLOGYCHAT_WEBHOOK： 在 Synology Chat 中创建机器人，获取机器人传入URL\n     * SYNOLOGYCHAT_TOKEN： SynologyChat 机器人令牌\n\n----------------------------------------\n\n * SUBSCRIBE_MODE： 订阅模式，rss/spider，默认spider，rss模式通过定时刷新 RSS 来匹配订阅（RSS 地址会自动获取，也可手动维护），对站点压力小，同时可设置订阅刷新周期，24 小时运行，但订阅和下载通知不能过滤和显示免费，推荐使用 rss 模式。\n * SUBSCRIBE_RSS_INTERVAL： RSS 订阅模式刷新时间间隔（分钟），默认30分钟，不能小于 5 分钟。\n * SUBSCRIBE_SEARCH： 订阅搜索，true/false，默认false，开启后会每隔 24 小时对所有订阅进行全量搜索，以补齐缺失剧集（一般情况下正常订阅即可，订阅搜索只做为兜底，会增加站点压力，不建议开启）。\n * AUTO_DOWNLOAD_USER： 远程交互搜索时自动择优下载的用户 ID（消息通知渠道的用户 ID），多个用户使用,分割，未设置需要选择资源或者回复0\n\n----------------------------------------\n\n * OCR_HOST： OCR 识别服务器地址，格式：http(s)://ip:port，用于识别站点验证码实现自动登录获取 Cookie 等，不配置默认使用内建服务器https://movie-pilot.org，可使用 这个镜像 自行搭建。\n\n----------------------------------------\n\n * MOVIE_RENAME_FORMAT： 电影重命名格式，基于 jinjia2 语法\n   \n   MOVIE_RENAME_FORMAT支持的配置项：\n   \n   > title： 标题\n   > original_name： 原文件名\n   > original_title： 原语种标题\n   > name： 识别名称\n   > year： 年份\n   > resourceType：资源类型\n   > effect：特效\n   > edition： 版本（资源类型+特效）\n   > videoFormat： 分辨率\n   > releaseGroup： 制作组/字幕组\n   > customization： 自定义占位符\n   > videoCodec： 视频编码\n   > audioCodec： 音频编码\n   > tmdbid： TMDBID\n   > imdbid： IMDBID\n   > part：段/节\n   > fileExt：文件扩展名 customization：自定义占位符\n   \n   MOVIE_RENAME_FORMAT默认配置格式：\n   \n   {{title}}{% if year %} ({{year}}){% endif %}/{{title}}{% if year %} ({{year}}){% endif %}{% if part %}-{{part}}{% endif %}{% if videoFormat %} - {{videoFormat}}{% endif %}{{fileExt}}\n   \n   \n   1\n   \n\n * TV_RENAME_FORMAT： 电视剧重命名格式，基于 jinjia2 语法\n   \n   TV_RENAME_FORMAT额外支持的配置项：\n   \n   > season： 季号\n   > episode： 集号\n   > season_episode： 季集 SxxExx\n   > episode_title： 集标题\n   \n   TV_RENAME_FORMAT默认配置格式：\n   \n   {{title}}{% if year %} ({{year}}){% endif %}/Season {{season}}/{{title}} - {{season_episode}}{% if part %}-{{part}}{% endif %}{% if episode %} - 第 {{episode}} 集{% endif %}{{fileExt}}\n   \n   \n   1\n   \n\n\n# 3. 插件扩展\n\n * PLUGIN_MARKET： 插件市场仓库地址，仅支持 Github 仓库main分支，多个地址使用,分隔，默认为官方插件仓库：https://github.com/jxxghp/MoviePilot-Plugins。",normalizedContent:"mp 官网：https://github.com/jxxghp/moviepilot?ref=blog.digitalimmigrants.org\n\ncookiecloud 官网：https://github.com/easychen/cookiecloud\n\n\n# 一、cookiecloud 部署\n\n\n# 1、cookiecloud 容器部署\n\n1）下载 cookiecloud 镜像\n\n\n\n2）cookiecloud 容器部署，主要是设置个端口。\n\n\n\n3）部署完成后点击浏览器输入 ip:端口，可以看到 hello world！字样，表示安装成功。\n\n\n\n\n# 2、安装 cookiecloud 插件\n\nmp 的站点信息需要通过 cookiecloud 同步获取，因此需要安装 cookiecloud 插件，将浏览器中的站点 cookie 数据同步到云端后再同步到 moviepilot 使用。\n\n安装方式：\n\n * 商店安装：edge 商店 | chrome 商店（ 注意：商店版本会因审核有延迟）\n * 手动下载安装：见 release。\n\n\n# 3、插件使用\n\n\n\n1）工作模式\n\n一个浏览器只能工作在上传或者下载覆盖状态。一般来讲，我们会把最常使用的浏览器设为上传模式，其他都设置为下载覆盖模式。\n\n2）服务器地址\n\n你可以使用其它的第三方服务器端，也可以自行搭建。有一个需要注意的地方，早期版本的服务器端在 cookie 过大时会报错，如果你在测试时遇到了，可以尝试添加「同步域名关键字」限制上传的 cookie 。\n\n3）用户 key\n\n由于一台服务器需要支持多个用户进行同步，因此需要通过用户 key 来进行区分。重复的用户 key 会导致同步数据覆盖，因此插件会自动生成一个足够长的随机 key 。当你配置下载覆盖模式时，需要使用同样的用户 key 。\n\n4）密码\n\n密码用于端对端加密，由于服务器端完全不知道密码，因此无法找回。不过我们的场景下只是备份 cookie ，忘记后可以设置新的密码覆盖原有云端数据就行了。同样的，当你配置下载覆盖模式时，需要使用同样的用户 key 。\n\n\n\n5）同步域名关键词和同步域名黑名单\n\n默认情况下，会上传所有的 cookie ，但这会带来额外的流量消耗。因此我们提供了同步域名关键词和同步域名黑名单，如果你填写了关键词，只有当 cookie 的域名包含关键词时，才会上传/不上传对应的 cookie 。有一个需要注意的地方是，部分网站的登入可能采用了其他二级域名，因此可能需要填写更短的顶级域名才能同步登入状态。\n\n6）cookie 保活\n\n即使是常用浏览器，某些网站我们长期不打开它的 cookie 也会过期，这样即使同步了 cookie 也是过期的。因此，我们添加了 cookie 保活功能，填到这里的网址会每 60 分钟在后台打开一次。\n\ncookie 保活示例代码：\n\nhttp://ftqq.com|5   //在 url 后加上竖线和分钟数，指定自己想要的间隔时间\n\n\n1\n\n\n填写完上述内容后可以点击测试查看是否成功，然后点击保存保存内容。\n\n\n\n\n# 二、mp 部署\n\n\n# 1、镜像下载\n\n镜像仓库搜索 moviepilot，选择jxxghp/moviepilot下载。\n\n\n\n\n# 2、创建容器\n\n1）名称可以默认，可以勾选创建后启动容器。\n\n\n\n2）基础设置设置重启策略：容器退出时总是重启容器。\n\n\n\n3）网络设置 host。\n\n\n\n4）存储空间设置。\n\n\n\n5）最重要的环境设置可跳转至环境配置查看具体的。\n\n\n\n环境配置完成后点击下一步。\n\n6）点击完成完成部署。\n\n\n\n\n# 3、mp 页面\n\n注意：容器首次启动需要下载浏览器内核，根据网络情况可能需要较长时间，此时无法登录。\n\n\n\n等加载完成后打开浏览器输入 ip:端口进入 mp 界面，输入环境中配置的超级管理员用户名（默认 admin）、密码（默认 password）进入首页。\n\n\n\n\n# 三、环境配置\n\n项目的所有配置均通过环境变量进行设置，支持两种配置方式：\n\n * 在 docker 环境变量配置进行参数配置，如未自动显示配置项则需要手动增加对应环境变量。\n * 下载 app.env 配置文件，修改好配置后放置到配置文件映射路径根目录，配置项可根据说明自主增减。\n\n配置文件映射路径：/config，配置项生效优先级：环境变量 > env 文件 > 默认值。\n\n> ❗ 号标识的为必填项，其它为可选项，可选项可删除配置变量从而使用默认值。\n\n\n# 1. 环境变量\n\n部分参数如路径映射、站点认证、权限端口、时区等必须通过环境变量进行配置。\n\n * ❗nginx_port： web 服务端口，默认3000，可自行修改，不能与 api 服务端口冲突（仅支持环境变量配置）\n * ❗port： api 服务端口，默认3001，可自行修改，不能与 web 服务端口冲突（仅支持环境变量配置）\n * puid：运行程序用户的uid，默认0（仅支持环境变量配置）\n * pgid：运行程序用户的gid，默认0（仅支持环境变量配置）\n * umask：掩码权限，默认000，可以考虑设置为022（仅支持环境变量配置）\n * proxy_host： 网络代理（可选），访问 themoviedb 或者重启更新需要使用代理访问，格式为http(s)://ip:port、socks5://user:pass@host:port（仅支持环境变量配置）\n * moviepilot_auto_update： 重启时自动更新，true/release/dev/false，默认release，需要能正常连接 github 注意：如果出现网络问题可以配置proxy_host（仅支持环境变量配置）\n * auto_update_resource：启动时自动检测和更新资源包（站点索引及认证等），true/false，默认true，需要能正常连接 github，仅支持 docker\n * ❗auth_site： 认证站点（认证通过后才能使用站点相关功能），支持配置多个认证站点，使用,分隔，如：iyuu,hhclub，会依次执行认证操作，直到有一个站点认证成功。认证资源v1.0.2支持iyuu/hhclub/audiences/hddolby/zmpt/freefarm/hdfans/wintersakura/leaves/1ptba/icc2022/ptlsp/xingtan/ptvicomo/agsvpt\n\n站点             参数\niyuu           iyuu_sign：iyuu 登录令牌\nhhclub         hhclub_username：用户名\n               hhclub_passkey：密钥\naudiences      audiences_uid：用户 id\n               audiences_passkey：密钥\nhddolby        hddolby_id：用户 id\n               hddolby_passkey：密钥\nzmpt           zmpt_uid：用户 id\n               zmpt_passkey：密钥\nfreefarm       freefarm_uid：用户 id\n               freefarm_passkey：密钥\nhdfans         hdfans_uid：用户 id\n               hdfans_passkey：密钥\nwintersakura   wintersakura_uid：用户 id\n               wintersakura_passkey：密钥\nleaves         leaves_uid：用户 id\n               leaves_passkey：密钥\n1ptba          1ptba_uid：用户 id\n               1ptba_passkey：密钥\nicc2022        icc2022_uid：用户 id\n               icc2022_passkey：密钥\nptlsp          ptlsp_uid：用户 id\n               ptlsp_passkey：密钥\nxingtan        xingtan_uid：用户 id\n               xingtan_passkey：密钥\nptvicomo       ptvicomo_uid：用户 id\n               ptvicomo_passkey：密钥\nagsvpt         agsvpt_uid：用户 id\n               agsvpt_passkey：密钥\n\n\n# 2. 配置文件\n\n可下载 app.env 配置文件，修改好配置后放置到配置文件映射路径根目录，配置项可根据说明自主增减，app.env 的所有配置项也可以通过环境变量进行配置。\n\n * ❗superuser： 超级管理员用户名，默认admin，安装后使用该用户登录后台管理界面\n * ❗superuser_password： 超级管理员初始密码，默认password，建议修改为复杂密码\n * ❗api_token： api 密钥，默认moviepilot，在媒体服务器 webhook、微信回调等地址配置中需要加上?token=该值，建议修改为复杂字符串\n * big_memory_mode： 大内存模式，默认为false，开启后会增加缓存数量，占用更多的内存，但响应速度会更快\n * github_token： github token，提高请求 api 限流阈值 ghp_****\n\n----------------------------------------\n\n * tmdb_api_domain： tmdb api 地址，默认api.themoviedb.org，也可配置为api.tmdb.org或其它中转代理服务地址，能连通即可\n * tmdb_image_domain： tmdb 图片地址，默认image.tmdb.org，可配置为其它中转代理以加速 tmdb 图片显示，如：static-mdb.v.geilijiasu.com\n * wallpaper： 登录首页电影海报，tmdb/bing，默认tmdb，tmdb 要求能正常连接 api.themoviedb.org\n * recognize_source： 媒体信息识别来源，themoviedb/douban，默认themoviedb，使用 themoviedb 时需要确保能正常连接 api.themoviedb.org，，使用douban时不支持二级分类\n * scrap_source： 刮削元数据及图片使用的数据源，themoviedb/douban，默认themoviedb，使用 themoviedb 时需要确保能正常连接 api.themoviedb.org，使用 douban 时会缺失部分信息\n * scrap_metadata： 刮削入库的媒体文件，true/false，默认true\n * scrap_follow_tmdb： 新增已入库媒体是否跟随 tmdb 信息变化，true/false，默认true，为false时即使 tmdb 信息变化了也会仍然按历史记录中已入库的信息进行刮削\n\n----------------------------------------\n\n * ❗cookiecloud_host： cookiecloud 服务器地址，格式：http(s)://ip:port，不配置默认使用内建服务器https://movie-pilot.org/cookiecloud\n * ❗cookiecloud_key： cookiecloud 用户 key\n * ❗cookiecloud_password： cookiecloud 端对端加密密码\n * ❗cookiecloud_interval： cookiecloud 同步间隔（分钟）\n * ❗user_agent： cookiecloud 保存 cookie 对应的浏览器 ua，建议配置，设置后可增加连接站点的成功率，同步站点后可以在管理界面中修改，值默认：mozilla/5.0 (windows nt 10.0; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/113.0.0.0 safari/537.36 edg/113.0.1774.57\n\n----------------------------------------\n\n * ❗transfer_type： 整理转移方式，支持link/copy/move/softlink/rclone_copy/rclone_move 注意：在link和softlink转移方式下，转移后的文件会继承源文件的权限掩码，不受umask影响；rclone 需要自行映射 rclone 配置目录到容器中或在容器内完成 rclone 配置，节点名称必须为：mp\n * ❗overwrite_mode： 转移覆盖模式，默认为size，支持nerver/size/always/latest，分别表示不覆盖同名文件/同名文件根据文件大小覆盖（大覆盖小）/总是覆盖同名文件/仅保留最新版本，删除旧版本文件（包括非同名文件）\n * ❗library_path： 媒体库目录，多个目录使用,分隔\n * library_movie_name： 电影媒体库目录名称（不是完整路径），默认电影\n * library_tv_name： 电视剧媒体库目录称（不是完整路径），默认电视剧\n * library_anime_name： 动漫媒体库目录称（不是完整路径），默认电视剧/动漫\n * library_category： 媒体库二级分类开关，true/false，默认false，开启后会根据配置 category.yaml 自动在媒体库目录下建立二级目录分类\n\n----------------------------------------\n\n * ❗download_path： 下载保存目录，注意：需要将moviepilot及下载器的映射路径保持一致，否则会导致下载文件无法转移\n * download_movie_path： 电影下载保存目录路径，不设置则下载到download_path\n * download_tv_path： 电视剧下载保存目录路径，不设置则下载到download_path\n * download_anime_path： 动漫下载保存目录路径，不设置则下载到download_path\n * download_category： 下载二级分类开关，true/false，默认false，开启后会根据配置 category.yaml 自动在下载目录下建立二级目录分类\n * download_subtitle： 下载站点字幕，true/false，默认true\n\n----------------------------------------\n\n * ❗downloader： 下载器，支持qbittorrent/transmission，qb 版本号要求>= 4.3.9，tr 版本号要求>= 3.0，同时还需要配置对应渠道的环境变量，非对应渠道的变量可删除，推荐使用qbittorrent\n   \n   * qbittorrent设置项：\n     \n     * qb_host： qbittorrent 地址，格式：ip:port，https 需要添加https://前缀\n     * qb_user： qbittorrent 用户名\n     * qb_password： qbittorrent 密码\n     * qb_category： qbittorrent 分类自动管理，true/false，默认false，开启后会将下载二级分类传递到下载器，由下载器管理下载目录，需要同步开启download_category\n     * qb_sequential： qbittorrent 按顺序下载，true/false，默认true\n     * qb_force_resume： qbittorrent 忽略队列限制，强制继续，true/false，默认 false\n   \n   * transmission设置项：\n     \n     * tr_host： transmission 地址，格式：ip:port，https 需要添加https://前缀\n     * tr_user： transmission 用户名\n     * tr_password： transmission 密码\n\n * downloader_monitor： 下载器监控，true/false，默认为true，开启后下载完成时才会自动整理入库\n\n * torrent_tag： 下载器种子标签，默认为moviepilot，设置后只有 moviepilot 添加的下载才会处理，留空所有下载器中的任务均会处理\n\n----------------------------------------\n\n * ❗mediaserver： 媒体服务器，支持emby/jellyfin/plex，同时开启多个使用,分隔。还需要配置对应媒体服务器的环境变量，非对应媒体服务器的变量可删除，推荐使用emby\n   \n   * emby设置项：\n     \n     * emby_host： emby 服务器地址，格式：ip:port，https 需要添加https://前缀\n     * emby_api_key： emby api key，在设置->高级->api密钥处生成\n   \n   * jellyfin设置项：\n     \n     * jellyfin_host： jellyfin 服务器地址，格式：ip:port，https 需要添加https://前缀\n     * jellyfin_api_key： jellyfin api key，在设置->高级->api密钥处生成\n   \n   * plex设置项：\n     \n     * plex_host： plex 服务器地址，格式：ip:port，https 需要添加https://前缀\n     * plex_token： plex 网页 url 中的x-plex-token，通过浏览器 f12->网络从请求 url 中获取\n\n * mediaserver_sync_interval: 媒体服务器同步间隔（小时），默认6，留空则不同步\n\n * mediaserver_sync_blacklist: 媒体服务器同步黑名单，多个媒体库名称使用,分割\n\n----------------------------------------\n\n * ❗messager： 消息通知渠道，支持 telegram/wechat/slack/synologychat，开启多个渠道时使用,分隔。同时还需要配置对应渠道的环境变量，非对应渠道的变量可删除，推荐使用telegram\n   \n   * wechat设置项：\n     \n     * wechat_corpid： wechat 企业 id\n     * wechat_app_secret： wechat 应用 secret\n     * wechat_app_id： wechat 应用 id\n     * wechat_token： wechat 消息回调的 token\n     * wechat_encoding_aeskey： wechat 消息回调的 encodingaeskey\n     * wechat_admins： wechat 管理员列表，多个管理员用英文逗号分隔（可选）\n     * wechat_proxy： wechat 代理服务器（后面不要加/）\n   \n   * telegram设置项：\n     \n     * telegram_token： telegram bot token\n     * telegram_chat_id： telegram chat id\n     * telegram_users： telegram 用户 id，多个使用,分隔，只有用户 id 在列表中才可以使用 bot，如未设置则均可以使用 bot\n     * telegram_admins： telegram 管理员 id，多个使用,分隔，只有管理员才可以操作 bot 菜单，如未设置则均可以操作菜单（可选）\n   \n   * slack设置项：\n     \n     * slack_oauth_token： slack bot user oauth token\n     * slack_app_token： slack app-level token\n     * slack_channel： slack 频道名称，默认全体（可选）\n   \n   * synologychat设置项：\n     \n     * synologychat_webhook： 在 synology chat 中创建机器人，获取机器人传入url\n     * synologychat_token： synologychat 机器人令牌\n\n----------------------------------------\n\n * subscribe_mode： 订阅模式，rss/spider，默认spider，rss模式通过定时刷新 rss 来匹配订阅（rss 地址会自动获取，也可手动维护），对站点压力小，同时可设置订阅刷新周期，24 小时运行，但订阅和下载通知不能过滤和显示免费，推荐使用 rss 模式。\n * subscribe_rss_interval： rss 订阅模式刷新时间间隔（分钟），默认30分钟，不能小于 5 分钟。\n * subscribe_search： 订阅搜索，true/false，默认false，开启后会每隔 24 小时对所有订阅进行全量搜索，以补齐缺失剧集（一般情况下正常订阅即可，订阅搜索只做为兜底，会增加站点压力，不建议开启）。\n * auto_download_user： 远程交互搜索时自动择优下载的用户 id（消息通知渠道的用户 id），多个用户使用,分割，未设置需要选择资源或者回复0\n\n----------------------------------------\n\n * ocr_host： ocr 识别服务器地址，格式：http(s)://ip:port，用于识别站点验证码实现自动登录获取 cookie 等，不配置默认使用内建服务器https://movie-pilot.org，可使用 这个镜像 自行搭建。\n\n----------------------------------------\n\n * movie_rename_format： 电影重命名格式，基于 jinjia2 语法\n   \n   movie_rename_format支持的配置项：\n   \n   > title： 标题\n   > original_name： 原文件名\n   > original_title： 原语种标题\n   > name： 识别名称\n   > year： 年份\n   > resourcetype：资源类型\n   > effect：特效\n   > edition： 版本（资源类型+特效）\n   > videoformat： 分辨率\n   > releasegroup： 制作组/字幕组\n   > customization： 自定义占位符\n   > videocodec： 视频编码\n   > audiocodec： 音频编码\n   > tmdbid： tmdbid\n   > imdbid： imdbid\n   > part：段/节\n   > fileext：文件扩展名 customization：自定义占位符\n   \n   movie_rename_format默认配置格式：\n   \n   {{title}}{% if year %} ({{year}}){% endif %}/{{title}}{% if year %} ({{year}}){% endif %}{% if part %}-{{part}}{% endif %}{% if videoformat %} - {{videoformat}}{% endif %}{{fileext}}\n   \n   \n   1\n   \n\n * tv_rename_format： 电视剧重命名格式，基于 jinjia2 语法\n   \n   tv_rename_format额外支持的配置项：\n   \n   > season： 季号\n   > episode： 集号\n   > season_episode： 季集 sxxexx\n   > episode_title： 集标题\n   \n   tv_rename_format默认配置格式：\n   \n   {{title}}{% if year %} ({{year}}){% endif %}/season {{season}}/{{title}} - {{season_episode}}{% if part %}-{{part}}{% endif %}{% if episode %} - 第 {{episode}} 集{% endif %}{{fileext}}\n   \n   \n   1\n   \n\n\n# 3. 插件扩展\n\n * plugin_market： 插件市场仓库地址，仅支持 github 仓库main分支，多个地址使用,分隔，默认为官方插件仓库：https://github.com/jxxghp/moviepilot-plugins。",charsets:{cjk:!0}},{title:"Nastool",frontmatter:{title:"Nastool",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/nastool/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/03.nastool.html",relativePath:"02.工具/01.影视自动化工具/03.nastool.md",key:"v-79ea4098",path:"/tool/nastool/",headers:[{level:2,title:"一、前期准备",slug:"一、前期准备",normalizedTitle:"一、前期准备",charIndex:2},{level:3,title:"1、申请 TMDB 的 Api",slug:"_1、申请-tmdb-的-api",normalizedTitle:"1、申请 tmdb 的 api",charIndex:13},{level:3,title:"2、查看豆瓣 ID",slug:"_2、查看豆瓣-id",normalizedTitle:"2、查看豆瓣 id",charIndex:54},{level:3,title:"3、安装 nastool 容器",slug:"_3、安装-nastool-容器",normalizedTitle:"3、安装 nastool 容器",charIndex:163},{level:3,title:"4、初始化 nastool 媒体库",slug:"_4、初始化-nastool-媒体库",normalizedTitle:"4、初始化 nastool 媒体库",charIndex:571},{level:2,title:"二、文件目录讲解",slug:"二、文件目录讲解",normalizedTitle:"二、文件目录讲解",charIndex:871},{level:2,title:"三、nastool 详解",slug:"三、nastool-详解",normalizedTitle:"三、nastool 详解",charIndex:1347},{level:3,title:"1、探索",slug:"_1、探索",normalizedTitle:"1、探索",charIndex:1364},{level:3,title:"2、资源搜索",slug:"_2、资源搜索",normalizedTitle:"2、资源搜索",charIndex:1470},{level:3,title:"3、站点管理",slug:"_3、站点管理",normalizedTitle:"3、站点管理",charIndex:1619},{level:3,title:"4、订阅管理",slug:"_4、订阅管理",normalizedTitle:"4、订阅管理",charIndex:1978},{level:3,title:"5、下载管理",slug:"_5、下载管理",normalizedTitle:"5、下载管理",charIndex:2114},{level:3,title:"6、媒体整理",slug:"_6、媒体整理",normalizedTitle:"6、媒体整理",charIndex:2205},{level:3,title:"7、服务",slug:"_7、服务",normalizedTitle:"7、服务",charIndex:2470},{level:3,title:"8、设置模块",slug:"_8、设置模块",normalizedTitle:"8、设置模块",charIndex:2604}],headersStr:"一、前期准备 1、申请 TMDB 的 Api 2、查看豆瓣 ID 3、安装 nastool 容器 4、初始化 nastool 媒体库 二、文件目录讲解 三、nastool 详解 1、探索 2、资源搜索 3、站点管理 4、订阅管理 5、下载管理 6、媒体整理 7、服务 8、设置模块",content:"# 一、前期准备\n\n\n# 1、申请 TMDB 的 Api\n\n可点击查看申请 TMDB 的 Api。\n\n\n# 2、查看豆瓣 ID\n\n豆瓣 ID 编号方便将豆瓣账号中想看的电影或者剧集直接推送到 NAS-TOOL 工具，来实现下载。\n\n登录豆瓣点击个人主页，地址栏的链接中的数字为豆瓣 ID，复制这串 ID 并保存。\n\n\n\n\n# 3、安装 nastool 容器\n\n1）下载镜像\n\n打开 docker,搜索 nastool，有两个版本，一个为 2.91 版本，一个版本为 3.x。\n\n我这里下载 3.x 版本，版本选择最新的（latest）。\n\n\n\n2）创建容器\n\n\n\n主要更改以下几个地方，其他的默认\n\n * 基础设置中重启策略选择最后一个。\n   \n   \n\n * 在 docker 盘新建一个 nastool 文件，映射给容器的/config 用来存储 nastool 配置文件。 将下载目录文件映射给容器的/hhd，这个目录最好和 qbitorrent 里的设置一样。\n   \n   \n\n * 3、端口设置中本地端口和容器端口都是 3000。\n   \n   \n\n * 4、环境中将自动更新开关 NASTOOL_AUTO_UPDATE 的 true 改为 false。\n   \n   \n\n * 5、创建完成后启动容器\n   \n   \n\n\n# 4、初始化 nastool 媒体库\n\n1）绿联 ip+端口进入 nastool 页面，登录页面默认用户名是 amdin，密码：password，点击登录。\n\n\n\n2）登录成功以后首先需要配置 TMDB API，和修改密码，我们点击确定，然后系统会自动进入基础设置配置页面。\n\n\n\n3）填入 TMDB API 以后点击保存，这一步是必要的，因为 nastool 的所有媒体检索服务都要依托于 TMDB 的信息库。\n\n\n\n4）接下来需要进行 nastool 的认证，默认没有认证的 nastool 页面如下。\n\n\n\n5）点击左下角的用户认证，输入支持认证的 PT 站点账号和密码，点击认证。\n\n\n\n\n# 二、文件目录讲解\n\nnastool 媒体库是一整套软件和容器的组合，其中目录相关配置在其中占据了百分之八十，可以这么说明白了目录配置，nastool 的所有配置你就会了百分之八十。\n\n这里为了考虑到新手用户我将对目录来做一个讲解，大家根据我的讲解来分析自己的目录应该怎么配置。\n\n1、首先说一下我的绿联云存储空间情况，其中我有一块专门的 16T 的盘用来存储我的影视，音乐，电子书资源。\n\n\n\n2、在娱乐盘中我建立了一个存放影视的目录【影视】，并且把这个目录映射给了 nastool、qb 等。 nastool 容器目录映射\n\n\n\nqbittorrent 容器目录映射\n\n\n\n3、我影视文件夹里设立了两个子文件夹：data、data_link，其中 data 和 data_link 文件夹里我各建了两个子文件夹：电影、电视。\n\n\n\n\n\n如上面图片所示，如果我在容器 nastool 或者 qbitorrent 中想访问【娱乐盘/影视/电影】目录我应该访问【/hdd/电影】。\n\n明白了上面的的目录映射关系我们就很容易完成下载器等目录的配置。\n\n\n# 三、nastool 详解\n\n\n# 1、探索\n\n探索中提供了豆瓣和 TMDB 的榜单等，点击相关影视下面的订阅按钮（一个爱心）后，媒体库在匹配到相关资源后会自动完成下载、信息刮削、添加到媒体库等操作。（需完成站点、下载器、媒体库配置）\n\n\n\n\n# 2、资源搜索\n\n可以在搜索框中输入想看的电影或者电视剧，然后可以将影视添加到订阅，在匹配到合适资源的时候会自动下载，并且添加到媒体库。（需完成站点、下载器、媒体库配置）\n\n\n\n点进去可以搜索资源或者添加订阅。\n\n\n\n搜索资源是在你添加的站点里查找看是否有匹配的资源，然后可以选择下载。\n\n\n\n\n# 3、站点管理\n\n1、COOKIE 获取\n\n进入 PT 站，保证是自己在登录状态下，按下 F12，进入开发者模式，刷新下 pt 站，然后点击网络-文档。点开文档下的文件（一般第一个就是我们要的），找到 cookie。\n\n\n\n2、站点添加\n\n在站点维护里点击新增站点\n\n\n\n按照要求填写入相关信息，然后点击新增，有什么不懂的可以看对应的？号，说明很详细。\n\n\n\nPs：RSS 地址获取,不选默认全勾选：\n\n\n\n站点添加以后点击站点测试可以看各站点网络连接情况。\n\n\n\n3、数据统计\n\n数据统计可以看到各个站点的上传和下载情况\n\n\n\n4、站点资源\n\n点击站点可以看到站点的资源列表，也可以在这里进行下载。\n\n\n\n5、刷流任务\n\n点击右上角可以新增任务。\n\n\n\n可以按要求填写相关信息，如果不懂的可以看后面的？。\n\n\n\n\n# 4、订阅管理\n\n在探索和搜索中订阅的电影、电视剧可以在此处查看到，nastool 会每天在相关的站点检索相关资源，有适合的资源自动下载整理，当订阅的资源下载完成以后，会自动删除相关订阅任务。\n\n\n\n完成下载器等配置后要设置订阅设置，否则订阅下载将会出现问题。\n\n\n\n\n# 5、下载管理\n\n正在下载和近期下载看名字就知道含义。就是个统计界面。\n\n\n\n自动删种中我们可以设置一些任务，当种子达到某些条件的时候进行删除，相关条件说明查看请点击？。\n\n\n\n\n# 6、媒体整理\n\n1、文件管理\n\n可以对文件夹里的文件进行单独/批量的转移，也就是手动刮削。\n\n\n\n填写相关设置\n\n\n\n2、手动识别\n\n某些资源因为名称或者网络问题无法识别的时候会出现在这里。可以重新进行识别。\n\n\n\n比如消失的 11 层的第 5 集识别不了，我们选择手动识别，填写相关信息，点击转移。\n\n\n\n处理成功\n\n\n\n手动识别里没有这个文件了\n\n\n\n历史记录里多了条\n\n\n\n3、历史记录\n\n这是我们处理成功的一些记录，也可以在这里进行一些操作。\n\n\n\n4、TMDB 缓存\n\n可以对 TMDB 缓存进行修改和删除\n\n\n\n\n# 7、服务\n\n服务模块是各种服务的启动开关，有些是自动启动的，有些需要手动启动。\n\n\n\n1）点击目录同步，选择目录，点击开始同步，就会开始执行同步任务。\n\n\n\n2）使用网络联通性测试可以快速帮助我们检测到网络是否正常，如果出现如下问题第一步考虑网络连通性。\n\n\n\n\n# 8、设置模块\n\n1、基础设置\n\n1）系统\n\n可以对账号和密码进行修改，也可以修改日志级别为 DEBUG，方便查看错误原因。修改后记得点击保存按钮。\n\n\n\n点击右上角头像，可以查看实时日志，有问题询问其他大佬建议带上日志截图。\n\n\n\n2）媒体\n\n必须配置的选项为 TMDB 的 API 在之前我们已经配置好了。\n\n其他的可以动下面这些，推荐刮削设置全选，然后选上刮削元数据及图片。\n\n电影电视的重命名这里可以看？后面的说明，具体说明每个符号代表的意思，注意，中间一定要有个/，/前面是影视所在文件夹名称的命名，/后面是影视文件的命名。如果没有/只有一个命名规则，则识别不出文件，硬链接后文件夹里没有文件。\n\n\n\n3）其他\n\n剩下的没啥，一般默认，只有服务下的这几项任务时间设置可以按自己的需求来更改。\n\n\n\n2、媒体库\n\n媒体库目录为硬链接后的目录，也是 emby、jellyfin、plxe 等的媒体路径。\n\n\n\n3、目录同步\n\n在右上方可以新增目录同步，源目录选择 tr 和 qb 的下载目录，目的目录是硬链接后的目录，同步方式选择硬链接。\n\n\n\n设置好目录同步后，可以点击服务-目录同步，然后勾选需要同步的文件夹开始同步。\n\n\n\n4、消息通知\n\n可选择的消息通知类型很多，这里以 pushplus 为例。\n\n打开pushplus 官网，点击登录，并用微信扫码登录\n\n\n\n选择【发送消息】--【一对一消息】获取 token\n\n\n\n复制 Token：\n\n\n\n在设置-消息通知里新增消息通知，选择 pushplus，填写名称和 pushplus 的 Token：\n\n\n\n完成设置：\n\n\n\n5、过滤规则\n\n在日常订阅一些电影的时候，往往站点提供了多种字幕清晰度的视频，过滤规则可以很好的帮助我们确定优先下载哪种清晰度的资源。\n\n默认提供了两种规则，将我们想使用的规则的星号带上标记即可。一般选择日常观影就够了。 也可以创建自己的规则。\n\n\n\n6、自定义识别词\n\n自定义识别词多用来修改未能识别的电影电视剧名称，从而提高媒体库识别率。\n\n我们进入页面可以看到有一个默认的识别词组【通用】，在右边点击+可以新增识别词。\n\n\n\n新增识别词界面可以先选择不同的类型，有屏蔽、替换、替换+集偏移、集偏移，然后在类型上面填写相应的信息，类型下方的正则表达式自定义填写。\n\n\n\n然后在在右上角我们也可以新增些识别词组。\n\n\n\n比如我们有部电视消失的 11 层最近更新了两集，但是由于下载的文件文件名比较复杂，所以识别不了。\n\n\n\n所以我们先在 TMDB 里查找对应的 ID\n\n\n\n然后新建个消失的十一层楼的识别词组。\n\n\n\n然后新建个识别词把文件名【The.Lost.11th.Floor.2023.E08.WEB-DL.4K.H265.DDP.AAC-HDCTV.mp4】里的前部分替换一下。\n\n\n\n结果如图。\n\n\n\n这时我们去媒体整理-文件管理里可以点击识别，发现可以识别了。\n\n\n\n再去媒体整理-手动识别里把刚刚失败的重新处理一下，发现成功了。\n\n\n\n7、索引器\n\n注意：3.x 以及更新版本的 nastool 将不再支持 bt。\n\n\n\n并且只有选中的 PT 站才会在搜索中使用。\n\n\n\n8、下载器\n\n1、新增下载器\n\n在右上方可以选择新增下载器。\n\n * 下载器名称自定义个\n * 状态设置为启用\n * 类型选择 qb\n * 依次输入地址、端口、用户名、密码。\n * 转移方式一般是硬链接\n * 下载目录设置可以参考我的\n * 填写完后点击测试，显示测试成功以后再点击确定保存。\n\n\n\n有 transmission 的也是差不多的设置。\n\n成功添加了下载器后，可以点击小星星将下载器设置成默认。\n\n\n\n2、下载设置\n\n下载设置可以对 qb 或者 tr 添加规则，来满足不同的下载需求，在我们搜索或者订阅电影的时候可以应用此选项。\n\n\n\n右上方可以新增下载设置。\n\n名称自定义，下载器选择 qb 或者 tr，动作默认，分类（仅限于 Qbitorrent）自定义，标签可填可不填，其他的自己一般选择默认。\n\n\n\n比如我的设置\n\n\n\n如果下载的时候我选择电视。\n\n\n\n那 qb 里分类也就会给我打上电视。\n\n\n\n9、媒体服务器\n\n以 emby 为例，其他的类似。\n\n1）登录 emby 服务器,点击右上角的设置-API 密钥-新 API 密钥。\n\n\n\n2）名称自定义，然后复制密钥，注意不要复制后面的名称。\n\n\n\n3）回到 nastool，点击设置-媒体服务器，选择 emby 服务器，将 emby 的局域网访问地址（ip+端口）和 api 密钥填入对应选项框中，然后点击测试，出现测试成功以后点击确定。\n\n\n\n10、插件\n\n在新版本的 nastool 中很多功能不再集成，大家可以根据自己的需求可以在插件市场安装插件来丰富 nastool 的功能。\n\n\n\n在这里我介绍下几个常用的插件。\n\n1、媒体库刮削\n\n刮削周期可以点击？查看说明，用得是 cron 表达式：\n\n\n\n\n\n2、站点自动签到\n\n对自己的站点进行自动签到。\n\n\n\n3、刷新媒体库\n\n\n\n4、chinesesubfinder 字幕下载\n\n需额外配置 chinesesubfinder 容器。\n\n\n\n5、自动备份\n\n",normalizedContent:"# 一、前期准备\n\n\n# 1、申请 tmdb 的 api\n\n可点击查看申请 tmdb 的 api。\n\n\n# 2、查看豆瓣 id\n\n豆瓣 id 编号方便将豆瓣账号中想看的电影或者剧集直接推送到 nas-tool 工具，来实现下载。\n\n登录豆瓣点击个人主页，地址栏的链接中的数字为豆瓣 id，复制这串 id 并保存。\n\n\n\n\n# 3、安装 nastool 容器\n\n1）下载镜像\n\n打开 docker,搜索 nastool，有两个版本，一个为 2.91 版本，一个版本为 3.x。\n\n我这里下载 3.x 版本，版本选择最新的（latest）。\n\n\n\n2）创建容器\n\n\n\n主要更改以下几个地方，其他的默认\n\n * 基础设置中重启策略选择最后一个。\n   \n   \n\n * 在 docker 盘新建一个 nastool 文件，映射给容器的/config 用来存储 nastool 配置文件。 将下载目录文件映射给容器的/hhd，这个目录最好和 qbitorrent 里的设置一样。\n   \n   \n\n * 3、端口设置中本地端口和容器端口都是 3000。\n   \n   \n\n * 4、环境中将自动更新开关 nastool_auto_update 的 true 改为 false。\n   \n   \n\n * 5、创建完成后启动容器\n   \n   \n\n\n# 4、初始化 nastool 媒体库\n\n1）绿联 ip+端口进入 nastool 页面，登录页面默认用户名是 amdin，密码：password，点击登录。\n\n\n\n2）登录成功以后首先需要配置 tmdb api，和修改密码，我们点击确定，然后系统会自动进入基础设置配置页面。\n\n\n\n3）填入 tmdb api 以后点击保存，这一步是必要的，因为 nastool 的所有媒体检索服务都要依托于 tmdb 的信息库。\n\n\n\n4）接下来需要进行 nastool 的认证，默认没有认证的 nastool 页面如下。\n\n\n\n5）点击左下角的用户认证，输入支持认证的 pt 站点账号和密码，点击认证。\n\n\n\n\n# 二、文件目录讲解\n\nnastool 媒体库是一整套软件和容器的组合，其中目录相关配置在其中占据了百分之八十，可以这么说明白了目录配置，nastool 的所有配置你就会了百分之八十。\n\n这里为了考虑到新手用户我将对目录来做一个讲解，大家根据我的讲解来分析自己的目录应该怎么配置。\n\n1、首先说一下我的绿联云存储空间情况，其中我有一块专门的 16t 的盘用来存储我的影视，音乐，电子书资源。\n\n\n\n2、在娱乐盘中我建立了一个存放影视的目录【影视】，并且把这个目录映射给了 nastool、qb 等。 nastool 容器目录映射\n\n\n\nqbittorrent 容器目录映射\n\n\n\n3、我影视文件夹里设立了两个子文件夹：data、data_link，其中 data 和 data_link 文件夹里我各建了两个子文件夹：电影、电视。\n\n\n\n\n\n如上面图片所示，如果我在容器 nastool 或者 qbitorrent 中想访问【娱乐盘/影视/电影】目录我应该访问【/hdd/电影】。\n\n明白了上面的的目录映射关系我们就很容易完成下载器等目录的配置。\n\n\n# 三、nastool 详解\n\n\n# 1、探索\n\n探索中提供了豆瓣和 tmdb 的榜单等，点击相关影视下面的订阅按钮（一个爱心）后，媒体库在匹配到相关资源后会自动完成下载、信息刮削、添加到媒体库等操作。（需完成站点、下载器、媒体库配置）\n\n\n\n\n# 2、资源搜索\n\n可以在搜索框中输入想看的电影或者电视剧，然后可以将影视添加到订阅，在匹配到合适资源的时候会自动下载，并且添加到媒体库。（需完成站点、下载器、媒体库配置）\n\n\n\n点进去可以搜索资源或者添加订阅。\n\n\n\n搜索资源是在你添加的站点里查找看是否有匹配的资源，然后可以选择下载。\n\n\n\n\n# 3、站点管理\n\n1、cookie 获取\n\n进入 pt 站，保证是自己在登录状态下，按下 f12，进入开发者模式，刷新下 pt 站，然后点击网络-文档。点开文档下的文件（一般第一个就是我们要的），找到 cookie。\n\n\n\n2、站点添加\n\n在站点维护里点击新增站点\n\n\n\n按照要求填写入相关信息，然后点击新增，有什么不懂的可以看对应的？号，说明很详细。\n\n\n\nps：rss 地址获取,不选默认全勾选：\n\n\n\n站点添加以后点击站点测试可以看各站点网络连接情况。\n\n\n\n3、数据统计\n\n数据统计可以看到各个站点的上传和下载情况\n\n\n\n4、站点资源\n\n点击站点可以看到站点的资源列表，也可以在这里进行下载。\n\n\n\n5、刷流任务\n\n点击右上角可以新增任务。\n\n\n\n可以按要求填写相关信息，如果不懂的可以看后面的？。\n\n\n\n\n# 4、订阅管理\n\n在探索和搜索中订阅的电影、电视剧可以在此处查看到，nastool 会每天在相关的站点检索相关资源，有适合的资源自动下载整理，当订阅的资源下载完成以后，会自动删除相关订阅任务。\n\n\n\n完成下载器等配置后要设置订阅设置，否则订阅下载将会出现问题。\n\n\n\n\n# 5、下载管理\n\n正在下载和近期下载看名字就知道含义。就是个统计界面。\n\n\n\n自动删种中我们可以设置一些任务，当种子达到某些条件的时候进行删除，相关条件说明查看请点击？。\n\n\n\n\n# 6、媒体整理\n\n1、文件管理\n\n可以对文件夹里的文件进行单独/批量的转移，也就是手动刮削。\n\n\n\n填写相关设置\n\n\n\n2、手动识别\n\n某些资源因为名称或者网络问题无法识别的时候会出现在这里。可以重新进行识别。\n\n\n\n比如消失的 11 层的第 5 集识别不了，我们选择手动识别，填写相关信息，点击转移。\n\n\n\n处理成功\n\n\n\n手动识别里没有这个文件了\n\n\n\n历史记录里多了条\n\n\n\n3、历史记录\n\n这是我们处理成功的一些记录，也可以在这里进行一些操作。\n\n\n\n4、tmdb 缓存\n\n可以对 tmdb 缓存进行修改和删除\n\n\n\n\n# 7、服务\n\n服务模块是各种服务的启动开关，有些是自动启动的，有些需要手动启动。\n\n\n\n1）点击目录同步，选择目录，点击开始同步，就会开始执行同步任务。\n\n\n\n2）使用网络联通性测试可以快速帮助我们检测到网络是否正常，如果出现如下问题第一步考虑网络连通性。\n\n\n\n\n# 8、设置模块\n\n1、基础设置\n\n1）系统\n\n可以对账号和密码进行修改，也可以修改日志级别为 debug，方便查看错误原因。修改后记得点击保存按钮。\n\n\n\n点击右上角头像，可以查看实时日志，有问题询问其他大佬建议带上日志截图。\n\n\n\n2）媒体\n\n必须配置的选项为 tmdb 的 api 在之前我们已经配置好了。\n\n其他的可以动下面这些，推荐刮削设置全选，然后选上刮削元数据及图片。\n\n电影电视的重命名这里可以看？后面的说明，具体说明每个符号代表的意思，注意，中间一定要有个/，/前面是影视所在文件夹名称的命名，/后面是影视文件的命名。如果没有/只有一个命名规则，则识别不出文件，硬链接后文件夹里没有文件。\n\n\n\n3）其他\n\n剩下的没啥，一般默认，只有服务下的这几项任务时间设置可以按自己的需求来更改。\n\n\n\n2、媒体库\n\n媒体库目录为硬链接后的目录，也是 emby、jellyfin、plxe 等的媒体路径。\n\n\n\n3、目录同步\n\n在右上方可以新增目录同步，源目录选择 tr 和 qb 的下载目录，目的目录是硬链接后的目录，同步方式选择硬链接。\n\n\n\n设置好目录同步后，可以点击服务-目录同步，然后勾选需要同步的文件夹开始同步。\n\n\n\n4、消息通知\n\n可选择的消息通知类型很多，这里以 pushplus 为例。\n\n打开pushplus 官网，点击登录，并用微信扫码登录\n\n\n\n选择【发送消息】--【一对一消息】获取 token\n\n\n\n复制 token：\n\n\n\n在设置-消息通知里新增消息通知，选择 pushplus，填写名称和 pushplus 的 token：\n\n\n\n完成设置：\n\n\n\n5、过滤规则\n\n在日常订阅一些电影的时候，往往站点提供了多种字幕清晰度的视频，过滤规则可以很好的帮助我们确定优先下载哪种清晰度的资源。\n\n默认提供了两种规则，将我们想使用的规则的星号带上标记即可。一般选择日常观影就够了。 也可以创建自己的规则。\n\n\n\n6、自定义识别词\n\n自定义识别词多用来修改未能识别的电影电视剧名称，从而提高媒体库识别率。\n\n我们进入页面可以看到有一个默认的识别词组【通用】，在右边点击+可以新增识别词。\n\n\n\n新增识别词界面可以先选择不同的类型，有屏蔽、替换、替换+集偏移、集偏移，然后在类型上面填写相应的信息，类型下方的正则表达式自定义填写。\n\n\n\n然后在在右上角我们也可以新增些识别词组。\n\n\n\n比如我们有部电视消失的 11 层最近更新了两集，但是由于下载的文件文件名比较复杂，所以识别不了。\n\n\n\n所以我们先在 tmdb 里查找对应的 id\n\n\n\n然后新建个消失的十一层楼的识别词组。\n\n\n\n然后新建个识别词把文件名【the.lost.11th.floor.2023.e08.web-dl.4k.h265.ddp.aac-hdctv.mp4】里的前部分替换一下。\n\n\n\n结果如图。\n\n\n\n这时我们去媒体整理-文件管理里可以点击识别，发现可以识别了。\n\n\n\n再去媒体整理-手动识别里把刚刚失败的重新处理一下，发现成功了。\n\n\n\n7、索引器\n\n注意：3.x 以及更新版本的 nastool 将不再支持 bt。\n\n\n\n并且只有选中的 pt 站才会在搜索中使用。\n\n\n\n8、下载器\n\n1、新增下载器\n\n在右上方可以选择新增下载器。\n\n * 下载器名称自定义个\n * 状态设置为启用\n * 类型选择 qb\n * 依次输入地址、端口、用户名、密码。\n * 转移方式一般是硬链接\n * 下载目录设置可以参考我的\n * 填写完后点击测试，显示测试成功以后再点击确定保存。\n\n\n\n有 transmission 的也是差不多的设置。\n\n成功添加了下载器后，可以点击小星星将下载器设置成默认。\n\n\n\n2、下载设置\n\n下载设置可以对 qb 或者 tr 添加规则，来满足不同的下载需求，在我们搜索或者订阅电影的时候可以应用此选项。\n\n\n\n右上方可以新增下载设置。\n\n名称自定义，下载器选择 qb 或者 tr，动作默认，分类（仅限于 qbitorrent）自定义，标签可填可不填，其他的自己一般选择默认。\n\n\n\n比如我的设置\n\n\n\n如果下载的时候我选择电视。\n\n\n\n那 qb 里分类也就会给我打上电视。\n\n\n\n9、媒体服务器\n\n以 emby 为例，其他的类似。\n\n1）登录 emby 服务器,点击右上角的设置-api 密钥-新 api 密钥。\n\n\n\n2）名称自定义，然后复制密钥，注意不要复制后面的名称。\n\n\n\n3）回到 nastool，点击设置-媒体服务器，选择 emby 服务器，将 emby 的局域网访问地址（ip+端口）和 api 密钥填入对应选项框中，然后点击测试，出现测试成功以后点击确定。\n\n\n\n10、插件\n\n在新版本的 nastool 中很多功能不再集成，大家可以根据自己的需求可以在插件市场安装插件来丰富 nastool 的功能。\n\n\n\n在这里我介绍下几个常用的插件。\n\n1、媒体库刮削\n\n刮削周期可以点击？查看说明，用得是 cron 表达式：\n\n\n\n\n\n2、站点自动签到\n\n对自己的站点进行自动签到。\n\n\n\n3、刷新媒体库\n\n\n\n4、chinesesubfinder 字幕下载\n\n需额外配置 chinesesubfinder 容器。\n\n\n\n5、自动备份\n\n",charsets:{cjk:!0}},{title:"IYUU转种辅种",frontmatter:{title:"IYUU转种辅种",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/iyuu/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/06.IYUU.html",relativePath:"02.工具/01.影视自动化工具/06.IYUU.md",key:"v-15bc16e8",path:"/tool/iyuu/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:2,title:"登录",slug:"登录",normalizedTitle:"登录",charIndex:323},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:343},{level:3,title:"1、添加下载器",slug:"_1、添加下载器",normalizedTitle:"1、添加下载器",charIndex:467},{level:3,title:"2、创建目录",slug:"_2、创建目录",normalizedTitle:"2、创建目录",charIndex:804},{level:3,title:"3、添加站点",slug:"_3、添加站点",normalizedTitle:"3、添加站点",charIndex:846},{level:3,title:"4、创建转种任务",slug:"_4、创建转种任务",normalizedTitle:"4、创建转种任务",charIndex:910},{level:3,title:"5、创建辅种任务",slug:"_5、创建辅种任务",normalizedTitle:"5、创建辅种任务",charIndex:1339}],headersStr:"容器部署 登录 使用 1、添加下载器 2、创建目录 3、添加站点 4、创建转种任务 5、创建辅种任务",content:"# 容器部署\n\n1、搜索 IYUUPlus 镜像并下载最新版\n\n\n\n2、点击创建容器，容器名默认，点击下一步\n\n\n\n3、重启策略选择容器退出时总是重启容器\n\n\n\n4、本地端口填写 8787\n\n\n\n5、存储空间设置\n\n创建个 iYuuPlus 文件夹挂载为/IYUU，并在 iYuuPlus 文件夹里新建个 db 文件夹挂在为/IYUU/db。 qb 下载器的种子文件夹在 BT_backup 文件夹里，我们把这个挂载为/qb-torrent，同理，tr 下载器的种子文件夹在/config/torrents 文件夹，我们把它挂在为/tr-torrent。\n\n\n\n设置完成后点击下一步，然后检查无误点击完成，容器就创建完成，点击启动容器。\n\n\n# 登录\n\n1、打开IYUU 官网，点击开始使用，然后手机扫码关注账号，获取 Token 。\n\n\n\n2、点击 IP:端口进入 IYUU 页面，账户名填写刚刚获取的 token，密码直接填写你要设置的密码。\n\n\n\n3、选择站点点击验证。\n\n\n\n4、验证成功后来到页面\n\n\n\n\n# 使用\n\n\n# 1、添加下载器\n\n点击左侧菜单系统设置 ，然后点击下载器设置 ，点下面的下拉框，选择你要新增的下载器。\n\n\n\n1）qB 下载器\n\n\n\n下面讲一下配置的含义：\n\n * 下载器名字：给你自己看的，自定义\n * 下载器地址端口：就是我们上面 qb 的网页地址，比如 http://192.168.31.88:8081\n * 用户名：qb 用户名\n * 密码：qb 密码\n * Docker 安装：因为我们是容器安装的，这里勾上\n * 默认下载器：哪个是你常用的，你就选这个\n * 种子目录：下载器的种子存放目录，容器安装的和我们映射的目录对应起来，填入 /BT_backup\n * 其他的默认即可，懂了后可以继续设置。\n\n2）tr 下载器\n\n与 qb 设置基本一致。\n\n\n\n\n# 2、创建目录\n\n点击【系统设置】-【目录设置】 ，可以新增/编辑目录。\n\n\n\n\n# 3、添加站点\n\n要添加辅种任务，我们需要先添加站点，在【系统设置】-【站点设置】里选择自己有的站点，并按要求填写。\n\n\n\n\n# 4、创建转种任务\n\n点击左侧菜单【计划任务】 ，任务类型选择【转移任务】，分别按照下面的进行填写：\n\n * 任务类型： 转移任务\n * 任务名称：自己起一个\n * 任务使能：需要启用该任务时打开，不需要时关闭\n * 执行周期：定期执行的周期\n * 来源下载器：qb，因为我们教程里需要的是 qb 转 tr，可以根据自己实际情况修改\n * 转移到下载器：tr\n * 过滤器：如果没有需要排除的可不选\n * 选择器：我们需要转移的种子所在文件的数据，添加到右侧\n * 路径转换类型：用于相对路径与绝对路径之间互相转换\n * 路径转换规则：可以看页面中的注释解释，这里使用 {#**#} 作为分隔符\n\n一切完成后，点击确认保存即可。\n\n\n\n因为我们创建的是定时任务，只有到指定时间才会运行。所以配置完成后，如果我们想要立刻看一看配置对不对的话可以手动运行我们的任务，即点击【运行】 按钮，开始我们的转种任务，点击 【日志】 可以看任务的运行情况日志。\n\n\n\n\n# 5、创建辅种任务\n\n点击【计划任务】，选择【辅种任务】，然后配置完成后点击保存。\n\n这里稍微解释下配置：\n\n * 任务类型： 辅种任务任务名称：自己起一个\n * 任务使能：需要启用改任务时打开，不需要时关闭\n * 执行周期：定期执行的周期，建议设置在转种任务之后运行\n * 辅种的站点：勾选我们之前添加的站点，选择你想要辅种的站点\n * 辅种的下载器：选择我们需要辅种的下载器\n * 自动检验：tr 默认自动校验，可勾可不勾；qb 如果没有自动校验，可以勾选\n\n",normalizedContent:"# 容器部署\n\n1、搜索 iyuuplus 镜像并下载最新版\n\n\n\n2、点击创建容器，容器名默认，点击下一步\n\n\n\n3、重启策略选择容器退出时总是重启容器\n\n\n\n4、本地端口填写 8787\n\n\n\n5、存储空间设置\n\n创建个 iyuuplus 文件夹挂载为/iyuu，并在 iyuuplus 文件夹里新建个 db 文件夹挂在为/iyuu/db。 qb 下载器的种子文件夹在 bt_backup 文件夹里，我们把这个挂载为/qb-torrent，同理，tr 下载器的种子文件夹在/config/torrents 文件夹，我们把它挂在为/tr-torrent。\n\n\n\n设置完成后点击下一步，然后检查无误点击完成，容器就创建完成，点击启动容器。\n\n\n# 登录\n\n1、打开iyuu 官网，点击开始使用，然后手机扫码关注账号，获取 token 。\n\n\n\n2、点击 ip:端口进入 iyuu 页面，账户名填写刚刚获取的 token，密码直接填写你要设置的密码。\n\n\n\n3、选择站点点击验证。\n\n\n\n4、验证成功后来到页面\n\n\n\n\n# 使用\n\n\n# 1、添加下载器\n\n点击左侧菜单系统设置 ，然后点击下载器设置 ，点下面的下拉框，选择你要新增的下载器。\n\n\n\n1）qb 下载器\n\n\n\n下面讲一下配置的含义：\n\n * 下载器名字：给你自己看的，自定义\n * 下载器地址端口：就是我们上面 qb 的网页地址，比如 http://192.168.31.88:8081\n * 用户名：qb 用户名\n * 密码：qb 密码\n * docker 安装：因为我们是容器安装的，这里勾上\n * 默认下载器：哪个是你常用的，你就选这个\n * 种子目录：下载器的种子存放目录，容器安装的和我们映射的目录对应起来，填入 /bt_backup\n * 其他的默认即可，懂了后可以继续设置。\n\n2）tr 下载器\n\n与 qb 设置基本一致。\n\n\n\n\n# 2、创建目录\n\n点击【系统设置】-【目录设置】 ，可以新增/编辑目录。\n\n\n\n\n# 3、添加站点\n\n要添加辅种任务，我们需要先添加站点，在【系统设置】-【站点设置】里选择自己有的站点，并按要求填写。\n\n\n\n\n# 4、创建转种任务\n\n点击左侧菜单【计划任务】 ，任务类型选择【转移任务】，分别按照下面的进行填写：\n\n * 任务类型： 转移任务\n * 任务名称：自己起一个\n * 任务使能：需要启用该任务时打开，不需要时关闭\n * 执行周期：定期执行的周期\n * 来源下载器：qb，因为我们教程里需要的是 qb 转 tr，可以根据自己实际情况修改\n * 转移到下载器：tr\n * 过滤器：如果没有需要排除的可不选\n * 选择器：我们需要转移的种子所在文件的数据，添加到右侧\n * 路径转换类型：用于相对路径与绝对路径之间互相转换\n * 路径转换规则：可以看页面中的注释解释，这里使用 {#**#} 作为分隔符\n\n一切完成后，点击确认保存即可。\n\n\n\n因为我们创建的是定时任务，只有到指定时间才会运行。所以配置完成后，如果我们想要立刻看一看配置对不对的话可以手动运行我们的任务，即点击【运行】 按钮，开始我们的转种任务，点击 【日志】 可以看任务的运行情况日志。\n\n\n\n\n# 5、创建辅种任务\n\n点击【计划任务】，选择【辅种任务】，然后配置完成后点击保存。\n\n这里稍微解释下配置：\n\n * 任务类型： 辅种任务任务名称：自己起一个\n * 任务使能：需要启用改任务时打开，不需要时关闭\n * 执行周期：定期执行的周期，建议设置在转种任务之后运行\n * 辅种的站点：勾选我们之前添加的站点，选择你想要辅种的站点\n * 辅种的下载器：选择我们需要辅种的下载器\n * 自动检验：tr 默认自动校验，可勾可不勾；qb 如果没有自动校验，可以勾选\n\n",charsets:{cjk:!0}},{title:"Wizarr影视库自动开号",frontmatter:{title:"Wizarr影视库自动开号",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/wizarr/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/07.Wizarr.html",relativePath:"02.工具/01.影视自动化工具/07.Wizarr.md",key:"v-59516fd0",path:"/tool/wizarr/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:70},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:388},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:1209},{level:3,title:"邀请",slug:"邀请",normalizedTitle:"邀请",charIndex:17}],headersStr:"容器部署 初始化 使用 邀请",content:"可以为 Jellyfin 创建用户邀请，github 地址：https://github.com/wizarrrr/wizarr。\n\n\n# 容器部署\n\n1、在绿联云 APP 里打开 docker，在镜像管理-镜像仓库中搜索 wizarr，选择第一个并点击下载，版本选择最新版本即可。\n\n\n\n2、在本地仓库里找到刚刚下载好的镜像，点击创建容器。容器名称可以自定义，勾选创建后启动容器，然后点击下一步。\n\n\n\n3、基础设置这里设置下重启策略。此时先不要点下一步。\n\n\n\n4、存储空间设置：在 docker 文件夹下新建一个文件夹 wizarr，并建一个子文件夹 database，把它挂载为/data/database，类型设置读写。\n\n\n\n5、端口设置：本地端口如果 5690 没有被占用的话，默认 5690 即可。端口设置完可以点下一步了。\n\n\n\n6、点击完成。\n\n\n\n\n# 初始化\n\n在浏览器中打开 ip:5690，进入 Wizarr 设置界面。\n\n1、功能说明提示，点击 next\n\n\n\n2、说明目前 Wizarr 仅支持其内部 SQLite 数据库，点击 next\n\n\n\n3、说明从备份文件还原数据库和配置的备份，点击 next\n\n\n\n4、输入管理员账号的用户名、密码、邮箱，输入完之后点击 Create Account。\n\n\n\n5、配置媒体服务器信息\n\n * Display Name 自定义即可\n * 在 Media Server Address 中填入你的 Jellyfin/Emby/Plex 的地址，然后点击旁边的 Detect Server，没问题的话右下角会自动识别出媒体服务器的类型，比如我这里是 jf。\n * 在媒体库中（我这里是 jf）中创建一个 API Key，粘贴在 Server API Key 下。\n * 点击 Verify Connection\n\n\n\n6、点完 Verify Connection 后右下角会跳出个成功的提示，此时页面也已更改，我们继续点击 Save Connection\n\n\n\n7、点完 Save Connection 后右下角会跳出个成功的提示，此时页面也已更改，我们点击 Scan Libraies\n\n\n\n8、点完 Scan Libraies 后，会扫描出你的媒体服务器所有的媒体库，选择你后续想用来分享的媒体库，建议全部都选上，选完后点击 Select Libraies\n\n\n\n9、点完 Select Libraies 后右下角会跳出个成功的提示，此时页面也已更改，最后继续点击 Next。\n\n\n\n10、现在设置都完成了，点 Go to Login 去登录\n\n\n\n11、输入用户名和密码，点击 Login with Password 登录\n\n\n\n12、进入界面会有功能说明教程，一直点击 next 查看就行\n\n\n\n13、点完后成功地初始化完成了\n\n\n\n\n# 使用\n\n\n# 邀请\n\n点击 Invitations - Create Invitations，选择有效期（有一天、一月、一年、永久、自定义日期等选项）后点击 Create Invitations。\n\n\n\n会跳出个分享的链接，点击 share 分享给别人即可。\n\n",normalizedContent:"可以为 jellyfin 创建用户邀请，github 地址：https://github.com/wizarrrr/wizarr。\n\n\n# 容器部署\n\n1、在绿联云 app 里打开 docker，在镜像管理-镜像仓库中搜索 wizarr，选择第一个并点击下载，版本选择最新版本即可。\n\n\n\n2、在本地仓库里找到刚刚下载好的镜像，点击创建容器。容器名称可以自定义，勾选创建后启动容器，然后点击下一步。\n\n\n\n3、基础设置这里设置下重启策略。此时先不要点下一步。\n\n\n\n4、存储空间设置：在 docker 文件夹下新建一个文件夹 wizarr，并建一个子文件夹 database，把它挂载为/data/database，类型设置读写。\n\n\n\n5、端口设置：本地端口如果 5690 没有被占用的话，默认 5690 即可。端口设置完可以点下一步了。\n\n\n\n6、点击完成。\n\n\n\n\n# 初始化\n\n在浏览器中打开 ip:5690，进入 wizarr 设置界面。\n\n1、功能说明提示，点击 next\n\n\n\n2、说明目前 wizarr 仅支持其内部 sqlite 数据库，点击 next\n\n\n\n3、说明从备份文件还原数据库和配置的备份，点击 next\n\n\n\n4、输入管理员账号的用户名、密码、邮箱，输入完之后点击 create account。\n\n\n\n5、配置媒体服务器信息\n\n * display name 自定义即可\n * 在 media server address 中填入你的 jellyfin/emby/plex 的地址，然后点击旁边的 detect server，没问题的话右下角会自动识别出媒体服务器的类型，比如我这里是 jf。\n * 在媒体库中（我这里是 jf）中创建一个 api key，粘贴在 server api key 下。\n * 点击 verify connection\n\n\n\n6、点完 verify connection 后右下角会跳出个成功的提示，此时页面也已更改，我们继续点击 save connection\n\n\n\n7、点完 save connection 后右下角会跳出个成功的提示，此时页面也已更改，我们点击 scan libraies\n\n\n\n8、点完 scan libraies 后，会扫描出你的媒体服务器所有的媒体库，选择你后续想用来分享的媒体库，建议全部都选上，选完后点击 select libraies\n\n\n\n9、点完 select libraies 后右下角会跳出个成功的提示，此时页面也已更改，最后继续点击 next。\n\n\n\n10、现在设置都完成了，点 go to login 去登录\n\n\n\n11、输入用户名和密码，点击 login with password 登录\n\n\n\n12、进入界面会有功能说明教程，一直点击 next 查看就行\n\n\n\n13、点完后成功地初始化完成了\n\n\n\n\n# 使用\n\n\n# 邀请\n\n点击 invitations - create invitations，选择有效期（有一天、一月、一年、永久、自定义日期等选项）后点击 create invitations。\n\n\n\n会跳出个分享的链接，点击 share 分享给别人即可。\n\n",charsets:{cjk:!0}},{title:"chinesesubfinder",frontmatter:{title:"chinesesubfinder",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/chinesesubfinder/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/05.chinesesubfinder.html",relativePath:"02.工具/01.影视自动化工具/05.chinesesubfinder.md",key:"v-b1c15bd8",path:"/tool/chinesesubfinder/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:32},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:330},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:670}],headersStr:"安装 初始化 使用",content:"chinesesubfinder：自动化中文字幕下载。\n\n\n# 安装\n\n1、下载镜像\n\n\n\n2、先在 docker 盘里新建几个文件夹，先创建个 chinesesubfinder 文件夹，然后在这个文件夹里创建两个子文件夹：config 和 cache。\n\n\n\n3、点击创建容器\n\n\n\n4、存储空间设置，把刚刚新建的两个文件夹用上，另外选择个存放影视的文件夹挂载/media。注意类型改成读写。\n\n\n\n5、端口设置 19037 和 19035.\n\n\n\n6、环境设置\n\n环境这里默认的 PUID 是 1026，PGID 是 100，可以先按默认的来，如果有问题则都改成 0，一般 0 是代表最高权限。我先不改。\n\n\n\n至此，容器创建完成，我们点击启动。\n\n\n# 初始化\n\n1、在浏览器输入绿联 IP+端口进去容器，如果一开始是无法访问，可以多等几分钟再进，因为容器启用需要时间，可能还没有完全启动。\n\n\n\n2、好了，现在我们进来了这个容器，我们先按照要求填写管理账号的账号名和密码，然后点击下一步。\n\n\n\n3、在这之前首先看看我的影视文件夹目录情况：\n\n\n\n4、所以我是这样填的，填完之后选择下一步。\n\n\n\n5、这里就按你的情况来选择，我的是 emby，选择完成后点击下一步。\n\n\n\n6、填写 URL 和 API，URL 即为绿联 IP+端口，也就是你进 emby 的链接。\n\n\n\n7、API 可以在 emby 后台为 chinesesubfinder 新建个。\n\n\n\n8、填写完成后点击完成。然后重新登录下\n\n\n\n9、进入界面\n\n\n\n\n# 使用\n\n1、后台设置\n\n1）点击配置中心，修改字幕格式为默认格式\n\n\n\n2）然后往下翻，启用 TMDB，填写 TMDB 的 API 密钥。点击保存\n\n\n\n3）在字幕源设置里可以添加伪射手网址。相当于增加个搜索字幕的来源。\n\n\n\n4）Emby 这里我们在刚开始就设置了，可以点下检测，一般没问题。\n\n\n\n设置就设置完成了。\n\n5）然后我我们可以去我们的库里看看，刚开始建没有东西的话，点击更新缓存。更新完后点击下刷新，影视就出来了。\n\n\n\n2、字幕\n\n1）我们可以在下面看到字幕情况，也可以点击放大镜搜索字幕了。\n\n\n\n2）它可以跳转到字幕网站进行检索，比如点击第一个\n\n\n\n3）这样就出来了一些字幕，我们可以点进去进行下载\n\n\n\n4）比如点击刚刚的第一个\n\n\n\n5）跳转到下载页面\n\n\n\n6）下载完成后是个压缩包，解压后发现里面有一个 srt 和一个 ass 文件，这两个都是字幕的常见格式。\n\n\n\n7）然后回到我们的字幕网站，选择刚刚下载的影片，点击上传字幕。\n\n\n\n8）选择刚刚下载好的字幕\n\n\n\n9）上传完成后，cc 变黑，显示已有字幕，点击可以看到字幕情况。\n\n\n\n3、和 nastool 联动\n\n1）chinesesubfinder 中打开配置中心-API key，获取密钥，然后点击保存\n\n\n\n2）打开 nastool，选择字幕里的 ChineseSubFinder。\n\n\n\n3）如果是最新版可能没有字幕在左侧，则点击插件，下载 ChineseSubFinder 插件。\n\n\n\n4）打开 ChineseSubFinder 插件，填写内容\n\n\n\n5）本地路径可以参考自己 nastool 媒体库的\n\n\n\n6）远程路径可以参考自己 ChineseSubFinder 里的\n\n\n\n7）然后我们点击 nastool 里的目录同步，看看是否生效。\n\n\n\n8）然后我们也可以把守护进程打开，这样就算 nastool 没有成功下载字幕的时候，ChineseSubFinder 也会每隔几个小时去重新整理一下这个影片资源。\n\n",normalizedContent:"chinesesubfinder：自动化中文字幕下载。\n\n\n# 安装\n\n1、下载镜像\n\n\n\n2、先在 docker 盘里新建几个文件夹，先创建个 chinesesubfinder 文件夹，然后在这个文件夹里创建两个子文件夹：config 和 cache。\n\n\n\n3、点击创建容器\n\n\n\n4、存储空间设置，把刚刚新建的两个文件夹用上，另外选择个存放影视的文件夹挂载/media。注意类型改成读写。\n\n\n\n5、端口设置 19037 和 19035.\n\n\n\n6、环境设置\n\n环境这里默认的 puid 是 1026，pgid 是 100，可以先按默认的来，如果有问题则都改成 0，一般 0 是代表最高权限。我先不改。\n\n\n\n至此，容器创建完成，我们点击启动。\n\n\n# 初始化\n\n1、在浏览器输入绿联 ip+端口进去容器，如果一开始是无法访问，可以多等几分钟再进，因为容器启用需要时间，可能还没有完全启动。\n\n\n\n2、好了，现在我们进来了这个容器，我们先按照要求填写管理账号的账号名和密码，然后点击下一步。\n\n\n\n3、在这之前首先看看我的影视文件夹目录情况：\n\n\n\n4、所以我是这样填的，填完之后选择下一步。\n\n\n\n5、这里就按你的情况来选择，我的是 emby，选择完成后点击下一步。\n\n\n\n6、填写 url 和 api，url 即为绿联 ip+端口，也就是你进 emby 的链接。\n\n\n\n7、api 可以在 emby 后台为 chinesesubfinder 新建个。\n\n\n\n8、填写完成后点击完成。然后重新登录下\n\n\n\n9、进入界面\n\n\n\n\n# 使用\n\n1、后台设置\n\n1）点击配置中心，修改字幕格式为默认格式\n\n\n\n2）然后往下翻，启用 tmdb，填写 tmdb 的 api 密钥。点击保存\n\n\n\n3）在字幕源设置里可以添加伪射手网址。相当于增加个搜索字幕的来源。\n\n\n\n4）emby 这里我们在刚开始就设置了，可以点下检测，一般没问题。\n\n\n\n设置就设置完成了。\n\n5）然后我我们可以去我们的库里看看，刚开始建没有东西的话，点击更新缓存。更新完后点击下刷新，影视就出来了。\n\n\n\n2、字幕\n\n1）我们可以在下面看到字幕情况，也可以点击放大镜搜索字幕了。\n\n\n\n2）它可以跳转到字幕网站进行检索，比如点击第一个\n\n\n\n3）这样就出来了一些字幕，我们可以点进去进行下载\n\n\n\n4）比如点击刚刚的第一个\n\n\n\n5）跳转到下载页面\n\n\n\n6）下载完成后是个压缩包，解压后发现里面有一个 srt 和一个 ass 文件，这两个都是字幕的常见格式。\n\n\n\n7）然后回到我们的字幕网站，选择刚刚下载的影片，点击上传字幕。\n\n\n\n8）选择刚刚下载好的字幕\n\n\n\n9）上传完成后，cc 变黑，显示已有字幕，点击可以看到字幕情况。\n\n\n\n3、和 nastool 联动\n\n1）chinesesubfinder 中打开配置中心-api key，获取密钥，然后点击保存\n\n\n\n2）打开 nastool，选择字幕里的 chinesesubfinder。\n\n\n\n3）如果是最新版可能没有字幕在左侧，则点击插件，下载 chinesesubfinder 插件。\n\n\n\n4）打开 chinesesubfinder 插件，填写内容\n\n\n\n5）本地路径可以参考自己 nastool 媒体库的\n\n\n\n6）远程路径可以参考自己 chinesesubfinder 里的\n\n\n\n7）然后我们点击 nastool 里的目录同步，看看是否生效。\n\n\n\n8）然后我们也可以把守护进程打开，这样就算 nastool 没有成功下载字幕的时候，chinesesubfinder 也会每隔几个小时去重新整理一下这个影片资源。\n\n",charsets:{cjk:!0}},{title:"MediaServerTools媒体中文自动同步",frontmatter:{title:"MediaServerTools媒体中文自动同步",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/mediaservertools/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/01.%E5%BD%B1%E8%A7%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/08.MediaServerTools.html",relativePath:"02.工具/01.影视自动化工具/08.MediaServerTools.md",key:"v-6708e7a4",path:"/tool/mediaservertools/",headers:[{level:2,title:"介绍",slug:"介绍",normalizedTitle:"介绍",charIndex:2},{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:278},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:1534}],headersStr:"介绍 容器部署 初始化",content:"# 介绍\n\n是一个 Emby/Jellyfin/Plex 媒体中文自动同步工具。\n\n * 中文标题\n * 媒体概述\n * 中文人名(Plex 暂时不支持)\n * 中文扮演(Plex 暂时不支持)\n * 剧集概述评分图片同步\n * 剧集组自定义同步\n * 媒体搜刮检查是否正确(配合 NasTools)\n\nDockerhub 地址: https://hub.docker.com/r/ddsderek/mediaservertools\n\nGithub 地址: https://github.com/sleikang/MediaServerTools\n\n\n# 容器部署\n\n1、在绿联云 APP 里打开 docker，在镜像管理-镜像仓库中搜索 mediaservertools，选择第一个 ddsderek/mediaservertools 镜像，并点击下载最新版本。\n\n\n\n2、官方 docker-compose 安装命令\n\nversion: '3.3'\nservices:\n    MediaServerTools:\n        container_name: MediaServerTools\n        volumes:\n            - './config:/config'\n        environment:\n            - TZ=Asia/Shanghai\n            - PUID=1000  # 可以改成0\n            - PGID=1000   # 可以改成0\n            - UMASK=022\n            - MediaServerTools_AUTO_UPDATE=true # 自动更新，建议关掉\n            - MediaServerTools_CN_UPDATE=true # 使用国内源更新\n        network_mode: host\n        logging:\n          driver: json-file\n          options:\n            max-size: 5m\n        image: 'ddsderek/mediaservertools:latest'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n2、在本地仓库里找到刚刚下载好的镜像，点击创建容器。容器名称可以自定义，勾选创建后启动容器，然后点击下一步。\n\n\n\n3、基础设置这里设置下重启策略。此时先不要点下一步。\n\n\n\n4、网络：设置为 host 模式。\n\n\n\n5、存储空间设置：在 docker 文件夹下新建一个文件夹 MediaServerTools，并建一个子文件夹 config，把它挂载为/config，类型设置读写。\n\n\n\n6、环境这里可以把 PUID、PGID 都由默认的 1000 改成 0，把自动更新 MediaServerTools_AUTO_UPDATE 由默认的 true 改成 false。\n\n\n\n需要加代理的话（建议增加代理环境），环境可以另外加三行：\n\nNO_PROXY=172.17.0.1,127.0.0.1,localhost ##保持默认\nALL_PROXY=http://192.168.31.2:7890 ## 更换为自己的http代理\nHTTP_PROXY=http://10.0.0.4:10081 ##更换为自己的http代理\n\n\n1\n2\n3\n\n\n7、点击下一步，然后点击完成，完成容器部署。\n\n\n# 初始化\n\n1、打开刚刚新建的 MediaServerTools-config 文件夹，找到 config.yaml 文件。下载到本地。\n\n\n\n2、打开文档，初始样子是这样。\n\n\n\n3、我们需要填写或修改些内容。\n\n1）emby 和 jf\n\n * host：jf/emby 的内网访问地址及端口，后面不要带/\n * key：jf/emby 的 api key，点击 jf/emby 控制台-API 密钥，点击新建 API 密钥，名称可以填 MediaServerTools，得到 key 值。\n   * emby：\n   * jf：\n * userid：jf/emby 的管理员 ID，点击 jf/emby 控制台-用户，找到当前管理员账户点进去浏览器地址显示的 userid=后面的内容就是我们需要的 userid 值。\n   * emby 的 userid 获取：\n   * jf 的 userid 获取：\n\n2）nastools\n\n * authorization: '' # nastools 基础设置-安全-API 密钥\n * host: # nastools 内网地址地址及端口，后面不要带/\n * passwd: '' # nastools 密码\n * username: '' # nastools 用户名\n\n3）douban\n\n * cookie: '' # 豆瓣 PC 端个人页 cookie\n   * cookie 获取：\n * key: 0ac44ae016490db2204ce0a042db2916 # 豆瓣 API KEY，默认这个就可\n * mediacachefailtime: 1 # 媒体数据缓存失效时间，单位：天\n * peoplecachefailtime: 10 # 人物数据缓存失效时间，单位：天\n\n3）tmdb\n\n * key:'' # TMDB 的 API KEY，未申请的话点击查看申请 TMDB 的 Api\n * mediacachefailtime: 1 # 媒体数据缓存失效时间，单位：天\n * peoplecachefailtime: 10 # 人物数据缓存失效时间，单位：天\n\n4）system\n\nmediaserver: Jellyfin # 使用的媒体服务器，可选 Emby Jellyfin\ncheckmediasearch: true # 检查媒体搜刮是否正确,不正确自动更新,需要配合NasTools使用\ndelnotimagepeople: true # 是否删除没有头像的演员\ntaskdonespace: 20 # 任务完成等待时间，单位：秒。豆瓣API有请求频率限制，建议时间可以设置长一点\nthreadnum: 8  # 线程数量，豆瓣API有请求频率限制，建议线程数量不要过多\nupdateoverview: true # 是否更新简介，建议打开\nupdatepeople: true # 是否刷新人名，建议打开，这样可以把演员英文名字换成中文\nupdatetime: 24 # 每次刷新全部媒体间隔时间，单位：小时\n\nupdateseasongroup: false # 是否更新剧集组\n\n#剧集组配置, 在启用更新剧集组后有效，不用的话保持默认即可\nseasongroup:\n- \"\\u7EB8\\u623F\\u5B50|62ed7ac87d5504007e4ab046\" # 内容：\"EMBY媒体名称|TMDB episode_group剧集组ID\" ，比如：\"纸房子|5eb730dfca7ec6001f7beb51\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n4、把 docker 盘中的 MediaServerTools-config 文件夹里的原 config.yaml 删除，并把修改好的 config.yaml 文件上传进去。\n\n5、点击重启，然后点击详情\n\n\n\n6、点击日志，查看运行情况\n\n\n\n",normalizedContent:"# 介绍\n\n是一个 emby/jellyfin/plex 媒体中文自动同步工具。\n\n * 中文标题\n * 媒体概述\n * 中文人名(plex 暂时不支持)\n * 中文扮演(plex 暂时不支持)\n * 剧集概述评分图片同步\n * 剧集组自定义同步\n * 媒体搜刮检查是否正确(配合 nastools)\n\ndockerhub 地址: https://hub.docker.com/r/ddsderek/mediaservertools\n\ngithub 地址: https://github.com/sleikang/mediaservertools\n\n\n# 容器部署\n\n1、在绿联云 app 里打开 docker，在镜像管理-镜像仓库中搜索 mediaservertools，选择第一个 ddsderek/mediaservertools 镜像，并点击下载最新版本。\n\n\n\n2、官方 docker-compose 安装命令\n\nversion: '3.3'\nservices:\n    mediaservertools:\n        container_name: mediaservertools\n        volumes:\n            - './config:/config'\n        environment:\n            - tz=asia/shanghai\n            - puid=1000  # 可以改成0\n            - pgid=1000   # 可以改成0\n            - umask=022\n            - mediaservertools_auto_update=true # 自动更新，建议关掉\n            - mediaservertools_cn_update=true # 使用国内源更新\n        network_mode: host\n        logging:\n          driver: json-file\n          options:\n            max-size: 5m\n        image: 'ddsderek/mediaservertools:latest'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n2、在本地仓库里找到刚刚下载好的镜像，点击创建容器。容器名称可以自定义，勾选创建后启动容器，然后点击下一步。\n\n\n\n3、基础设置这里设置下重启策略。此时先不要点下一步。\n\n\n\n4、网络：设置为 host 模式。\n\n\n\n5、存储空间设置：在 docker 文件夹下新建一个文件夹 mediaservertools，并建一个子文件夹 config，把它挂载为/config，类型设置读写。\n\n\n\n6、环境这里可以把 puid、pgid 都由默认的 1000 改成 0，把自动更新 mediaservertools_auto_update 由默认的 true 改成 false。\n\n\n\n需要加代理的话（建议增加代理环境），环境可以另外加三行：\n\nno_proxy=172.17.0.1,127.0.0.1,localhost ##保持默认\nall_proxy=http://192.168.31.2:7890 ## 更换为自己的http代理\nhttp_proxy=http://10.0.0.4:10081 ##更换为自己的http代理\n\n\n1\n2\n3\n\n\n7、点击下一步，然后点击完成，完成容器部署。\n\n\n# 初始化\n\n1、打开刚刚新建的 mediaservertools-config 文件夹，找到 config.yaml 文件。下载到本地。\n\n\n\n2、打开文档，初始样子是这样。\n\n\n\n3、我们需要填写或修改些内容。\n\n1）emby 和 jf\n\n * host：jf/emby 的内网访问地址及端口，后面不要带/\n * key：jf/emby 的 api key，点击 jf/emby 控制台-api 密钥，点击新建 api 密钥，名称可以填 mediaservertools，得到 key 值。\n   * emby：\n   * jf：\n * userid：jf/emby 的管理员 id，点击 jf/emby 控制台-用户，找到当前管理员账户点进去浏览器地址显示的 userid=后面的内容就是我们需要的 userid 值。\n   * emby 的 userid 获取：\n   * jf 的 userid 获取：\n\n2）nastools\n\n * authorization: '' # nastools 基础设置-安全-api 密钥\n * host: # nastools 内网地址地址及端口，后面不要带/\n * passwd: '' # nastools 密码\n * username: '' # nastools 用户名\n\n3）douban\n\n * cookie: '' # 豆瓣 pc 端个人页 cookie\n   * cookie 获取：\n * key: 0ac44ae016490db2204ce0a042db2916 # 豆瓣 api key，默认这个就可\n * mediacachefailtime: 1 # 媒体数据缓存失效时间，单位：天\n * peoplecachefailtime: 10 # 人物数据缓存失效时间，单位：天\n\n3）tmdb\n\n * key:'' # tmdb 的 api key，未申请的话点击查看申请 tmdb 的 api\n * mediacachefailtime: 1 # 媒体数据缓存失效时间，单位：天\n * peoplecachefailtime: 10 # 人物数据缓存失效时间，单位：天\n\n4）system\n\nmediaserver: jellyfin # 使用的媒体服务器，可选 emby jellyfin\ncheckmediasearch: true # 检查媒体搜刮是否正确,不正确自动更新,需要配合nastools使用\ndelnotimagepeople: true # 是否删除没有头像的演员\ntaskdonespace: 20 # 任务完成等待时间，单位：秒。豆瓣api有请求频率限制，建议时间可以设置长一点\nthreadnum: 8  # 线程数量，豆瓣api有请求频率限制，建议线程数量不要过多\nupdateoverview: true # 是否更新简介，建议打开\nupdatepeople: true # 是否刷新人名，建议打开，这样可以把演员英文名字换成中文\nupdatetime: 24 # 每次刷新全部媒体间隔时间，单位：小时\n\nupdateseasongroup: false # 是否更新剧集组\n\n#剧集组配置, 在启用更新剧集组后有效，不用的话保持默认即可\nseasongroup:\n- \"\\u7eb8\\u623f\\u5b50|62ed7ac87d5504007e4ab046\" # 内容：\"emby媒体名称|tmdb episode_group剧集组id\" ，比如：\"纸房子|5eb730dfca7ec6001f7beb51\"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n4、把 docker 盘中的 mediaservertools-config 文件夹里的原 config.yaml 删除，并把修改好的 config.yaml 文件上传进去。\n\n5、点击重启，然后点击详情\n\n\n\n6、点击日志，查看运行情况\n\n\n\n",charsets:{cjk:!0}},{title:"alist",frontmatter:{title:"alist",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/alist/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/02.%E4%B8%8B%E8%BD%BD/01.alist.html",relativePath:"02.工具/02.下载/01.alist.md",key:"v-ee230736",path:"/tool/alist/",headers:[{level:2,title:"1、容器部署",slug:"_1、容器部署",normalizedTitle:"1、容器部署",charIndex:2},{level:2,title:"2、初始化",slug:"_2、初始化",normalizedTitle:"2、初始化",charIndex:389},{level:2,title:"3、挂载",slug:"_3、挂载",normalizedTitle:"3、挂载",charIndex:649},{level:3,title:"挂载绿联",slug:"挂载绿联",normalizedTitle:"挂载绿联",charIndex:658},{level:3,title:"挂载百度网盘",slug:"挂载百度网盘",normalizedTitle:"挂载百度网盘",charIndex:687},{level:3,title:"挂载阿里云盘",slug:"挂载阿里云盘",normalizedTitle:"挂载阿里云盘",charIndex:732},{level:3,title:"挂载夸克网盘",slug:"挂载夸克网盘",normalizedTitle:"挂载夸克网盘",charIndex:1030},{level:3,title:"挂载阿里云盘分享链接",slug:"挂载阿里云盘分享链接",normalizedTitle:"挂载阿里云盘分享链接",charIndex:1124},{level:2,title:"4、进阶使用",slug:"_4、进阶使用",normalizedTitle:"4、进阶使用",charIndex:1700},{level:3,title:"游客访问下载",slug:"游客访问下载",normalizedTitle:"游客访问下载",charIndex:1711}],headersStr:"1、容器部署 2、初始化 3、挂载 挂载绿联 挂载百度网盘 挂载阿里云盘 挂载夸克网盘 挂载阿里云盘分享链接 4、进阶使用 游客访问下载",content:"# 1、容器部署\n\n1、在绿联 Docker 界面进入镜像管理-镜像仓库，搜索框内搜索“xhofe”，回车，选中第一个“xhofe/alist”下载最新版本。\n\n\n\n2、在本地镜像找到刚刚下载的镜像文件，点击创建容器\n\n\n\n3、改下容器名称（方便你自己后期管理和辨识），打开“高级模式”，点“下一步”。\n\n\n\n4、由于 alist 成功后会挂载上很多网盘，这里重启策略建议选择“容器退出时总是重启容器” 。\n\n\n\n5、点存储空间，在 docker 目录下新建一个 alist 文件夹，再建一个 data 子文件夹用来存放配置文件，再点击添加挂载一个下载目录，类型都为读写。\n\n\n\n6、点上方端口设置，把本地端口填写“5244”\n\n\n\n7、填写完后点击下一步。检查完后点击完成。\n\n\n\n8、点左边“容器管理”，找到你刚才创建的“alist”容器，点对应下面的“启动”\n\n\n\n\n# 2、初始化\n\n1、在容器管理里点 alist 容器的“详情”，再在详情界面上方点“日志”，然后在日志里找到密码。\n\n\n\n2、在浏览器输入 nas 的 ip:5244 进入 alist 页面。登录的默认用户名是“admin”；密码为刚刚找到的密码。\n\n\n\n3、登陆完点后击管理进入管理界面。\n\n\n\n4、点击个人资料可以修改密码。\n\n\n\n5、点击存储-添加可以挂载云盘。\n\n\n\n6、点击文档可以进入说明页面。\n\n\n\n7、在说明页面可以把文字改成简体中文，然后在左方选择添加存储，可以看到挂载不同网盘的说明文档。\n\n\n\n\n# 3、挂载\n\n\n# 挂载绿联\n\n填写以下内容：\n\n\n\n挂载成功：\n\n\n\n\n# 挂载百度网盘\n\n在文档里点击刷新令牌，获取密钥等内容。\n\n\n\n\n\n填写内容：\n\n\n\n\n# 挂载阿里云盘\n\n1、在文档里点击刷新令牌的链接，获取二维码。\n\n\n\n2、扫码登录获取令牌。\n\n\n\n3、填写以下内容：\n\n\n\n4、阿里云盘解限速方法：\n\n * 在 alist 中新建存储，改旧的不行有缓存\n * Oauth 令牌链接写这个 https://aliyundrive-oauth.messense.me/oauth/access_token\n * 访问这个地址取得新 token 并填入： https://messense-aliyundrive-webdav-backendrefresh-token-ucs0wn.streamlit.app/\n * 保存存储 解除限速成功\n\n\n# 挂载夸克网盘\n\n从请求中获取 Cookie 和根文件夹 ID 的方法：按 F12 打开“调试”，选中“网络”，找到一个以“sort”开头的文件即可找到。\n\n\n\n填写以下内容：\n\n\n\n\n# 挂载阿里云盘分享链接\n\n1、首先我们找到我们想要接入的阿里云分享链接，举个例子，比如这个链接：https://www.aliyundrive.com/s/gQZfdoexuBs。我们所需的是 gQZfdoexuBs 这串代码。\n\n\n\n2、在 alist 管理界面，点击存储-添加。\n\n\n\n3、填写以下内容，然后点击添加：\n\n * 驱动选择阿里云盘分享；\n\n * 挂载路径填写/自己自己喜欢的路径，比如这里我填/N1-Hi6；\n\n * 序号因为这里是我的第 1 个分享驱动盘，这里我填 1；\n\n * 刷新令牌填写阿里云盘的短 Token；\n   \n   * 打开链接：https://alist.nn.ci/zh/guide/drivers/aliyundrive.html，点击获取 Token。\n     \n     \n   \n   * 用手机上的阿里云盘 App 扫描生成的二维码，扫描完以后点击上方的“使用阿里云盘 APP 扫描然后点击”这个按钮，随后二维码下方会生成一串 Token。\n     \n     \n\n * 分享 ID 填写我们刚刚复制的那串 ID（举例的是 gQZfdoexuBs）\n\n\n\n4、添加完成后我们就能看到我们挂载的阿里云盘分享链接已经出现了，状态显示 work。\n\n\n\n5、在主页也能看到链接的分享内容了。\n\n\n\n\n# 4、进阶使用\n\n\n# 游客访问下载\n\n1、在管理界面点击用户，默认有个管理用户和一个关闭了的访客用户，可以对用户进行编辑，当然我们也可以点击添加添加用户。\n\n\n\n2、用户编辑界面，可以选择可以看到的文件夹的路径，勾选一些权限和选择是否停用，编辑完后点击保存。\n\n",normalizedContent:"# 1、容器部署\n\n1、在绿联 docker 界面进入镜像管理-镜像仓库，搜索框内搜索“xhofe”，回车，选中第一个“xhofe/alist”下载最新版本。\n\n\n\n2、在本地镜像找到刚刚下载的镜像文件，点击创建容器\n\n\n\n3、改下容器名称（方便你自己后期管理和辨识），打开“高级模式”，点“下一步”。\n\n\n\n4、由于 alist 成功后会挂载上很多网盘，这里重启策略建议选择“容器退出时总是重启容器” 。\n\n\n\n5、点存储空间，在 docker 目录下新建一个 alist 文件夹，再建一个 data 子文件夹用来存放配置文件，再点击添加挂载一个下载目录，类型都为读写。\n\n\n\n6、点上方端口设置，把本地端口填写“5244”\n\n\n\n7、填写完后点击下一步。检查完后点击完成。\n\n\n\n8、点左边“容器管理”，找到你刚才创建的“alist”容器，点对应下面的“启动”\n\n\n\n\n# 2、初始化\n\n1、在容器管理里点 alist 容器的“详情”，再在详情界面上方点“日志”，然后在日志里找到密码。\n\n\n\n2、在浏览器输入 nas 的 ip:5244 进入 alist 页面。登录的默认用户名是“admin”；密码为刚刚找到的密码。\n\n\n\n3、登陆完点后击管理进入管理界面。\n\n\n\n4、点击个人资料可以修改密码。\n\n\n\n5、点击存储-添加可以挂载云盘。\n\n\n\n6、点击文档可以进入说明页面。\n\n\n\n7、在说明页面可以把文字改成简体中文，然后在左方选择添加存储，可以看到挂载不同网盘的说明文档。\n\n\n\n\n# 3、挂载\n\n\n# 挂载绿联\n\n填写以下内容：\n\n\n\n挂载成功：\n\n\n\n\n# 挂载百度网盘\n\n在文档里点击刷新令牌，获取密钥等内容。\n\n\n\n\n\n填写内容：\n\n\n\n\n# 挂载阿里云盘\n\n1、在文档里点击刷新令牌的链接，获取二维码。\n\n\n\n2、扫码登录获取令牌。\n\n\n\n3、填写以下内容：\n\n\n\n4、阿里云盘解限速方法：\n\n * 在 alist 中新建存储，改旧的不行有缓存\n * oauth 令牌链接写这个 https://aliyundrive-oauth.messense.me/oauth/access_token\n * 访问这个地址取得新 token 并填入： https://messense-aliyundrive-webdav-backendrefresh-token-ucs0wn.streamlit.app/\n * 保存存储 解除限速成功\n\n\n# 挂载夸克网盘\n\n从请求中获取 cookie 和根文件夹 id 的方法：按 f12 打开“调试”，选中“网络”，找到一个以“sort”开头的文件即可找到。\n\n\n\n填写以下内容：\n\n\n\n\n# 挂载阿里云盘分享链接\n\n1、首先我们找到我们想要接入的阿里云分享链接，举个例子，比如这个链接：https://www.aliyundrive.com/s/gqzfdoexubs。我们所需的是 gqzfdoexubs 这串代码。\n\n\n\n2、在 alist 管理界面，点击存储-添加。\n\n\n\n3、填写以下内容，然后点击添加：\n\n * 驱动选择阿里云盘分享；\n\n * 挂载路径填写/自己自己喜欢的路径，比如这里我填/n1-hi6；\n\n * 序号因为这里是我的第 1 个分享驱动盘，这里我填 1；\n\n * 刷新令牌填写阿里云盘的短 token；\n   \n   * 打开链接：https://alist.nn.ci/zh/guide/drivers/aliyundrive.html，点击获取 token。\n     \n     \n   \n   * 用手机上的阿里云盘 app 扫描生成的二维码，扫描完以后点击上方的“使用阿里云盘 app 扫描然后点击”这个按钮，随后二维码下方会生成一串 token。\n     \n     \n\n * 分享 id 填写我们刚刚复制的那串 id（举例的是 gqzfdoexubs）\n\n\n\n4、添加完成后我们就能看到我们挂载的阿里云盘分享链接已经出现了，状态显示 work。\n\n\n\n5、在主页也能看到链接的分享内容了。\n\n\n\n\n# 4、进阶使用\n\n\n# 游客访问下载\n\n1、在管理界面点击用户，默认有个管理用户和一个关闭了的访客用户，可以对用户进行编辑，当然我们也可以点击添加添加用户。\n\n\n\n2、用户编辑界面，可以选择可以看到的文件夹的路径，勾选一些权限和选择是否停用，编辑完后点击保存。\n\n",charsets:{cjk:!0}},{title:"阿里云订阅",frontmatter:{title:"阿里云订阅",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/aliyundrive/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/02.%E4%B8%8B%E8%BD%BD/03.%E9%98%BF%E9%87%8C%E4%BA%91%E8%AE%A2%E9%98%85.html",relativePath:"02.工具/02.下载/03.阿里云订阅.md",key:"v-528ab2c0",path:"/tool/aliyundrive/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:263}],headersStr:"容器部署 使用",content:"# 容器部署\n\n1、在绿联 docker-镜像管理-镜像仓库中输入 aliyundrive，选择第二个镜像下载。\n\n\n\n2、在本地仓库中找到刚刚下载好的镜像，点击创建容器，点击下一步。\n\n\n\n3、在基础设置里把容器能力全部勾选，重启策略选择容器退出时总是重启容器。\n\n\n\n4、在 docker 盘里新建个文件夹 aliyundrive-subscribe，并把子文件夹 conf 挂载为/conf.\n\n\n\n5、端口设置这里本地端口设置个没有被占用的即可。然后点击下一步。\n\n\n\n6、勾选创建后启动容器，点击完成。\n\n\n\n\n# 使用\n\n1、在浏览器输入绿联 IP:本地端口，进入登录界面，初始用户名和密码都是 admin。\n\n\n\n2、点击云盘设置，输入阿里云的 refresh_token.\n\n",normalizedContent:"# 容器部署\n\n1、在绿联 docker-镜像管理-镜像仓库中输入 aliyundrive，选择第二个镜像下载。\n\n\n\n2、在本地仓库中找到刚刚下载好的镜像，点击创建容器，点击下一步。\n\n\n\n3、在基础设置里把容器能力全部勾选，重启策略选择容器退出时总是重启容器。\n\n\n\n4、在 docker 盘里新建个文件夹 aliyundrive-subscribe，并把子文件夹 conf 挂载为/conf.\n\n\n\n5、端口设置这里本地端口设置个没有被占用的即可。然后点击下一步。\n\n\n\n6、勾选创建后启动容器，点击完成。\n\n\n\n\n# 使用\n\n1、在浏览器输入绿联 ip:本地端口，进入登录界面，初始用户名和密码都是 admin。\n\n\n\n2、点击云盘设置，输入阿里云的 refresh_token.\n\n",charsets:{cjk:!0}},{title:"clouddrive2云盘挂载",frontmatter:{title:"clouddrive2云盘挂载",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/clouddrive2/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/02.%E4%B8%8B%E8%BD%BD/04.clouddrive2.html",relativePath:"02.工具/02.下载/04.clouddrive2.md",key:"v-37ada763",path:"/tool/clouddrive2/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:215}],headersStr:"容器部署 使用",content:'# 容器部署\n\n1、在 docker 文件夹下创建一个 clouddrive2 文件夹，并在其下面再创建两个子文件夹：cloudshare 和 Config。\n\n\n\n2、绿联-设备管理-调试功能里打开远程调试功能，有个验证码，后面有个复制按钮，可以点击复制。\n\n\n\n3、如果是 win 系统的话，按 win+R 键输入 cmd，进入命令提示符窗口，然后在终端输入命令 ssh -p 922 root@绿联的ip，注意 ip 是绿联使用 ipv4 ip。比如我的绿联 ip 是 192.168.1.6，则我输入的命令是ssh -p 922 root@192.168.1.6。\n\n中间有个叫你确认的地方，直接输入 yes 即可。然后会让你输入密码，即在这里输入刚刚在绿联客户端拿到的验证码（在绿联点击复制后，在这里鼠标右击即为粘贴），注意这里的输入是不会显示的，请一次输入正确然后回车。\n\n\n\n4、然后我们输入以下命令：\n\nfind /mnt -type d -iname "cloudshare"\n\n\n1\n\n\n找到刚创建的 cloudshare 目录的绝对路径，类似于：/mnt/dm-4/.ugreen_nas/164025/Docker/clouddrive2/cloudshare。注意：先将这个路径先复制下来备用。\n\n\n\n5、然后输入以下两个命令\n\ncd /etc/init.d # 进入到init.d目录\nvi mountshare # 创建一个脚本文件并编辑\n\n\n1\n2\n\n\n\n\n6、英文环境下点击键盘 i 进入编辑模式，复制以下内容，右键粘贴到刚才的命令行窗口中。\n\n> 注意：下面的命令中的两个 dm-4 是上面找到的 cloudshare 路径/mnt/dm-4/.ugreen_nas/164025/Docker/clouddrive2/cloudshare中/mnt/后的内容，你的可能不一样，比如会是 dm-2 之类的，记得改成自己的\n\n#!/bin/sh /etc/rc.common\nSTART=99\nstart(){\nfor num in $(seq 1 60); do\nif [ "$(mount | grep -c /dev/dm-4)" -gt 0 ]; then\nbreak\nfi\nsleep 1\ndone\nmount --make-shared /mnt/dm-4\necho "myscript is start"\n}\n\nstop(){\necho "myscript is stop"\n}\nrestart(){\necho "myscript is restart"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n\n点击 esc 退出编辑模式。\n\n\n\n然后在键盘英文环境下输入：\n\n:wq # 保存并退出文件\n\n\n1\n\n\n\n\n7、接下来输入以下两个命令\n\nchmod +x mountshare # 给刚才的脚本添加执行权限\n./mountshare enable # 应用脚本并添加开机启动\n\n\n1\n2\n\n\n\n\n8、执行完后，输入reboot命令，重启 nas。注意：如果有正在执行的传输任务等，记得等传输结束后再执行下面的命令。\n\n或者你可以到 nas 的客户端中执行重启操作\n\n\n\n9、重启完后，重新连接到命令行，输入以下 docker run 命令然后按回车键。\n\n命令中我们需要替换三个东西：\n\n * 第一个是-p 19798:19798，冒号前的数字需要替换成本地没有占用的端口，一般来说不用动\n * 第二个是/mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/cloudshare这个路径替换成我们上面找到的 cloudshare 路径\n * 第三个是把/mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/Config替换成我们上面找到的 cloudshare 路径的 cloudshare 改成 Config 后的路径\n\ndocker run -d --name clouddrive2 --privileged=true --restart=always --device /dev/fuse:/dev/fuse -v /mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/cloudshare/:/cloudshare:shared -v /mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/Config:/Config -p 19798:19798 -e TZ=Asia/Shanghai -e CLOUDDRIVE_HOME=/Config cloudnas/clouddrive2-unstable:latest\n\n\n1\n\n\n第一次执行会拉取镜像，时间可能会比较长，大家耐心等待下，当出现图中类似的字符串之后，就表示容器已经创建成功了。\n\n\n# 使用\n\n1、接下来浏览器输入 ip:19798（如果没改端口号的话）进入 clouddrive2，首次打开需要点击注册来注册一个账号。\n\n2、注册完成后点击登录\n\n3、clouddrive2 支持 115、天翼云盘、阿里云盘、百度网盘等云盘，并且支持挂载 webdav。想挂载哪个云盘就点击对应的网盘图标即可，会有挂载指引，比如阿里只需要扫码登录下。注意：免费版本挂载数量有限制，比如只能最大 2 个云盘数和最大 1 个挂载数。\n\n\n\n4、我们可以使用 alist 的 webdav 链接实现多网盘的本地挂载：点击添加网盘，选择 webdav，服务器输入 http://ip:alist 的端口/dav，用户名密码就是 alist 登录的用户名密码。\n\n\n\n5、在左边点击挂载 alist 的 webdav，然后点击电脑样式的挂载到本地按钮添加挂载点，挂载点选择我们创建的 cloudshare 目录，然后点击挂载。\n\n\n\n6、现在我们本地 docker 目录中的 cloudshare 文件夹已经有了我们 alist 挂载的网盘了，我们就可以在绿联云影院等地方创建媒体库并选择我们云盘路径了。\n\n\n\n7、因为免费的只能一个挂载数，所以如果我们想另外挂载个的话，得先删除刚刚挂载的。方法：点击左上角的挂载管理图标，卸载删除已挂载的 webdave\n\n',normalizedContent:'# 容器部署\n\n1、在 docker 文件夹下创建一个 clouddrive2 文件夹，并在其下面再创建两个子文件夹：cloudshare 和 config。\n\n\n\n2、绿联-设备管理-调试功能里打开远程调试功能，有个验证码，后面有个复制按钮，可以点击复制。\n\n\n\n3、如果是 win 系统的话，按 win+r 键输入 cmd，进入命令提示符窗口，然后在终端输入命令 ssh -p 922 root@绿联的ip，注意 ip 是绿联使用 ipv4 ip。比如我的绿联 ip 是 192.168.1.6，则我输入的命令是ssh -p 922 root@192.168.1.6。\n\n中间有个叫你确认的地方，直接输入 yes 即可。然后会让你输入密码，即在这里输入刚刚在绿联客户端拿到的验证码（在绿联点击复制后，在这里鼠标右击即为粘贴），注意这里的输入是不会显示的，请一次输入正确然后回车。\n\n\n\n4、然后我们输入以下命令：\n\nfind /mnt -type d -iname "cloudshare"\n\n\n1\n\n\n找到刚创建的 cloudshare 目录的绝对路径，类似于：/mnt/dm-4/.ugreen_nas/164025/docker/clouddrive2/cloudshare。注意：先将这个路径先复制下来备用。\n\n\n\n5、然后输入以下两个命令\n\ncd /etc/init.d # 进入到init.d目录\nvi mountshare # 创建一个脚本文件并编辑\n\n\n1\n2\n\n\n\n\n6、英文环境下点击键盘 i 进入编辑模式，复制以下内容，右键粘贴到刚才的命令行窗口中。\n\n> 注意：下面的命令中的两个 dm-4 是上面找到的 cloudshare 路径/mnt/dm-4/.ugreen_nas/164025/docker/clouddrive2/cloudshare中/mnt/后的内容，你的可能不一样，比如会是 dm-2 之类的，记得改成自己的\n\n#!/bin/sh /etc/rc.common\nstart=99\nstart(){\nfor num in $(seq 1 60); do\nif [ "$(mount | grep -c /dev/dm-4)" -gt 0 ]; then\nbreak\nfi\nsleep 1\ndone\nmount --make-shared /mnt/dm-4\necho "myscript is start"\n}\n\nstop(){\necho "myscript is stop"\n}\nrestart(){\necho "myscript is restart"\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n\n点击 esc 退出编辑模式。\n\n\n\n然后在键盘英文环境下输入：\n\n:wq # 保存并退出文件\n\n\n1\n\n\n\n\n7、接下来输入以下两个命令\n\nchmod +x mountshare # 给刚才的脚本添加执行权限\n./mountshare enable # 应用脚本并添加开机启动\n\n\n1\n2\n\n\n\n\n8、执行完后，输入reboot命令，重启 nas。注意：如果有正在执行的传输任务等，记得等传输结束后再执行下面的命令。\n\n或者你可以到 nas 的客户端中执行重启操作\n\n\n\n9、重启完后，重新连接到命令行，输入以下 docker run 命令然后按回车键。\n\n命令中我们需要替换三个东西：\n\n * 第一个是-p 19798:19798，冒号前的数字需要替换成本地没有占用的端口，一般来说不用动\n * 第二个是/mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/cloudshare这个路径替换成我们上面找到的 cloudshare 路径\n * 第三个是把/mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/config替换成我们上面找到的 cloudshare 路径的 cloudshare 改成 config 后的路径\n\ndocker run -d --name clouddrive2 --privileged=true --restart=always --device /dev/fuse:/dev/fuse -v /mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/cloudshare/:/cloudshare:shared -v /mnt/dm-4/.ugreen_nas/78978/docker/clouddrive2/config:/config -p 19798:19798 -e tz=asia/shanghai -e clouddrive_home=/config cloudnas/clouddrive2-unstable:latest\n\n\n1\n\n\n第一次执行会拉取镜像，时间可能会比较长，大家耐心等待下，当出现图中类似的字符串之后，就表示容器已经创建成功了。\n\n\n# 使用\n\n1、接下来浏览器输入 ip:19798（如果没改端口号的话）进入 clouddrive2，首次打开需要点击注册来注册一个账号。\n\n2、注册完成后点击登录\n\n3、clouddrive2 支持 115、天翼云盘、阿里云盘、百度网盘等云盘，并且支持挂载 webdav。想挂载哪个云盘就点击对应的网盘图标即可，会有挂载指引，比如阿里只需要扫码登录下。注意：免费版本挂载数量有限制，比如只能最大 2 个云盘数和最大 1 个挂载数。\n\n\n\n4、我们可以使用 alist 的 webdav 链接实现多网盘的本地挂载：点击添加网盘，选择 webdav，服务器输入 http://ip:alist 的端口/dav，用户名密码就是 alist 登录的用户名密码。\n\n\n\n5、在左边点击挂载 alist 的 webdav，然后点击电脑样式的挂载到本地按钮添加挂载点，挂载点选择我们创建的 cloudshare 目录，然后点击挂载。\n\n\n\n6、现在我们本地 docker 目录中的 cloudshare 文件夹已经有了我们 alist 挂载的网盘了，我们就可以在绿联云影院等地方创建媒体库并选择我们云盘路径了。\n\n\n\n7、因为免费的只能一个挂载数，所以如果我们想另外挂载个的话，得先删除刚刚挂载的。方法：点击左上角的挂载管理图标，卸载删除已挂载的 webdave\n\n',charsets:{cjk:!0}},{title:"aira2+ariang下载",frontmatter:{title:"aira2+ariang下载",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/aira2/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/02.%E4%B8%8B%E8%BD%BD/02.aira2+ariang%E4%B8%8B%E8%BD%BD.html",relativePath:"02.工具/02.下载/02.aira2+ariang下载.md",key:"v-4d187859",path:"/tool/aira2/",headers:[{level:2,title:"1.Aira2 容器部署",slug:"_1-aira2-容器部署",normalizedTitle:"1.aira2 容器部署",charIndex:2},{level:2,title:"2.ariang 容器部署",slug:"_2-ariang-容器部署",normalizedTitle:"2.ariang 容器部署",charIndex:450},{level:2,title:"3.ariang 连接 Aira2",slug:"_3-ariang-连接-aira2",normalizedTitle:"3.ariang 连接 aira2",charIndex:632},{level:2,title:"4.Ailst 连接 Aira2",slug:"_4-ailst-连接-aira2",normalizedTitle:"4.ailst 连接 aira2",charIndex:802}],headersStr:"1.Aira2 容器部署 2.ariang 容器部署 3.ariang 连接 Aira2 4.Ailst 连接 Aira2",content:"# 1.Aira2 容器部署\n\n1、在镜像仓库查找并下载 superng6/aria2 最新版镜像。\n\n\n\n2、点击创建容器\n\n\n\n3、基础设置里重启策略设置为容器退出时总是重启容器(这样在设备重启或者开机下会自动打开 Aira2)\n\n\n\n4、存储空间设置，需要在你存放 Docker 的硬盘中创建一个 Aria2 文件，并创建两个子文件夹分别为 www 和 config，在你的下载盘中设置一个 download/aria2 文件夹。装在路径默认，类型全部读写。\n\n\n\n5、端口设置，因为绿联内置离线下载使用了 6800 端口，需要把本地端口修改 6800 以外的未被占用的端口如我这里设置的 16800。这个 16800 端口需记住，是我们的 Aira2 的链接端口，后续图形化面板和 Alist 都用的到。\n\n\n\n6、到达环境往下翻可以看到一个 SECRET 这里是你的密钥设置你可以设置成自己记得住的密钥，后续要用。\n\n\n\n7、然后我们点击下一步，再点击完成 aria2 容器部署。\n\n\n# 2.ariang 容器部署\n\n1、在镜像仓库界面查找并下载 p3terx/ariang 最新版镜像\n\n\n\n2、点击创建容器\n\n\n\n3、基础设置里重启策略设置为容器退出时总是重启容器(这样在设备重启或者开机下会自动打开 ariang)\n\n\n\n4、跳过命令和存储空间，把端口设置为 6880。\n\n\n\n点击下一步然后点击完成，至此 ariang 容器部署完成。\n\n\n# 3.ariang 连接 Aira2\n\n1、打开浏览器输入你的绿联云 IP+ariang 端口进入 ariang，这个时候出现个认证失败不要管。 在左侧设置栏进入 AriaNG 设置，输入你的 Aira2 的端口号 16800 以及密钥。然后点击重新加载 AiraNG\n\n\n\n2、这样我们就可以看到我们的状态就是已经连接的状态了\n\n\n\n\n# 4.Ailst 连接 Aira2\n\n1、登录 Alist 界面点击本地设置\n\n\n\n2、填写你设置的 Aira2 的 ip 和端口以及密钥\n\n\n\n3、然后打开复选框\n\n\n\n4、然后就可以选中我们需要的文件，点击下方下载图标，有一个发送到 Aira2，点击发送。\n\n\n\n5、右上角会弹出弹窗已经成功发送到 aria2。\n\n\n\n6、我们回到 AiraNG 界面可以看到下载进度。\n\n\n\n7、在我们上面 Aria2 存储空间配置的下载文件夹中可以看到我们下载成功的文件。\n\n",normalizedContent:"# 1.aira2 容器部署\n\n1、在镜像仓库查找并下载 superng6/aria2 最新版镜像。\n\n\n\n2、点击创建容器\n\n\n\n3、基础设置里重启策略设置为容器退出时总是重启容器(这样在设备重启或者开机下会自动打开 aira2)\n\n\n\n4、存储空间设置，需要在你存放 docker 的硬盘中创建一个 aria2 文件，并创建两个子文件夹分别为 www 和 config，在你的下载盘中设置一个 download/aria2 文件夹。装在路径默认，类型全部读写。\n\n\n\n5、端口设置，因为绿联内置离线下载使用了 6800 端口，需要把本地端口修改 6800 以外的未被占用的端口如我这里设置的 16800。这个 16800 端口需记住，是我们的 aira2 的链接端口，后续图形化面板和 alist 都用的到。\n\n\n\n6、到达环境往下翻可以看到一个 secret 这里是你的密钥设置你可以设置成自己记得住的密钥，后续要用。\n\n\n\n7、然后我们点击下一步，再点击完成 aria2 容器部署。\n\n\n# 2.ariang 容器部署\n\n1、在镜像仓库界面查找并下载 p3terx/ariang 最新版镜像\n\n\n\n2、点击创建容器\n\n\n\n3、基础设置里重启策略设置为容器退出时总是重启容器(这样在设备重启或者开机下会自动打开 ariang)\n\n\n\n4、跳过命令和存储空间，把端口设置为 6880。\n\n\n\n点击下一步然后点击完成，至此 ariang 容器部署完成。\n\n\n# 3.ariang 连接 aira2\n\n1、打开浏览器输入你的绿联云 ip+ariang 端口进入 ariang，这个时候出现个认证失败不要管。 在左侧设置栏进入 ariang 设置，输入你的 aira2 的端口号 16800 以及密钥。然后点击重新加载 airang\n\n\n\n2、这样我们就可以看到我们的状态就是已经连接的状态了\n\n\n\n\n# 4.ailst 连接 aira2\n\n1、登录 alist 界面点击本地设置\n\n\n\n2、填写你设置的 aira2 的 ip 和端口以及密钥\n\n\n\n3、然后打开复选框\n\n\n\n4、然后就可以选中我们需要的文件，点击下方下载图标，有一个发送到 aira2，点击发送。\n\n\n\n5、右上角会弹出弹窗已经成功发送到 aria2。\n\n\n\n6、我们回到 airang 界面可以看到下载进度。\n\n\n\n7、在我们上面 aria2 存储空间配置的下载文件夹中可以看到我们下载成功的文件。\n\n",charsets:{cjk:!0}},{title:"小雅alist",frontmatter:{title:"小雅alist",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/xiaoya/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/02.%E4%B8%8B%E8%BD%BD/05.%E5%B0%8F%E9%9B%85alist.html",relativePath:"02.工具/02.下载/05.小雅alist.md",key:"v-5fe2f82a",path:"/tool/xiaoya/",headers:[{level:2,title:"准备工作",slug:"准备工作",normalizedTitle:"准备工作",charIndex:113},{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:1866},{level:2,title:"clouddrive2 挂载",slug:"clouddrive2-挂载",normalizedTitle:"clouddrive2 挂载",charIndex:2240},{level:2,title:"使用 EMBY 展示小雅的内容",slug:"使用-emby-展示小雅的内容",normalizedTitle:"使用 emby 展示小雅的内容",charIndex:2498}],headersStr:"准备工作 容器部署 clouddrive2 挂载 使用 EMBY 展示小雅的内容",content:"官方在线文档：https://www.notion.so/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f#444f2033d834427b80114fc0d774d53c\n\n\n# 准备工作\n\n1、在本地新建三个 txt 文件夹，内容如下：\n\n1）token\n\n * 文件名称：mytoken.txt\n * 用途：用来加载阿里分享，和自动签到\n * 格式：75fee1ca79514e60aa6d46c8370b9afd\n * 备注：32 位长度，阿里云更新，网页版的 refresh_token 已经失效不可以再用。\n   * 安卓手机最新获取的 refresh_token 的方法如下：\n     * 1、在手机安装好“阿里云盘 APP”，并正常登录一次；\n     * 2、在手机安装“ES 文件浏览器”，浏览本地内部存储，进入“Android/data/com.alicloud.databox/files/logs/trace/”，会看到随机生成的文件夹日志，进入，找最新的文件，下载到电脑上，记事本打开搜索 refreshToken；\n   * iPhone 手机获取方法：不清楚\n   * 没有选择的话用 https://aliyuntoken.vercel.app/\n\n2）open token\n\n * 文件名称：myopentoken.txt\n * 获取方式：https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html\n * 用途：用来加载自己的阿里云盘（open 接口）\n * 格式：eyJ0eXAiOixxxxxLCJhbGciOiJSUzI1NiJ9.eyJzd999999wNzBkOWRiNWQ5YmQ0YT........\n * 备注：很长一串，280 位，获取方式：https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html，如果已经部署 alist 并挂载好阿里的话，还有个简单的办法，直接从 alist 里面复制。\n\n3）转存目录的 folder id\n\n * 文件名称：temp_transfer_folder_id.txt\n * 用途：你的阿里⽹盘的转存目录的 folder id\n * 格式：640xxxxxxxxxxxxxxxxxxxca8a\n * 备注：先转存这个https://www.aliyundrive.com/s/rP9gP3h9asE到自己网盘（选择资源库），然后浏览器打开转存后的目录，此时的浏览器 url：https://www.aliyundrive.com/drive/file/resource/640xxxxxxxxxxxxxxxxxxxca8a ，最后这一串 640 开头的就是。记得这个目录不要删，里面的内容可以定期删除。\n\n2、在绿联的 docker 文件夹下新建一个 xiaoya 文件夹，并把这三个 txt 文件上传进去。\n\n\n\n3、额外的文档，更多可参考官方文档\n\n1）强制登陆\n\n说明： 设置强制登入和自定义密码，把密码保存到 /etc/xiaoya/guestpass.txt （不过不要设置稀奇古怪的符号，例如；&#“~@（）*$ 之类的）。如果你的 xiaoya 放在公网，为了防止别人蹭网，可以设置强制登入，新增 /etc/xiaoya/guestlogin.txt 这个文件，重启即可，文件有没有内容无所谓，如果取消强制登入就删除这个文件。强制登入的账号为 dav，密码使用/etc/xiaoya/guestpass.txt 里设置的，同时 webdav 连接使用 dav 这个用户，上述 2 个功能设置好后需要重启 docker 才会生效。\n\n * 文件：guestpass.txt\n   * 用途：自己修改 guest 账号的密码\n   * 备注：如果开启了强制登入则 登入账号 dav 也使用此密码\n * 文件：guestlogin.txt\n   * 用途：通过此文件的存在与否来决定是否开启强制登入\n   * 格式：空白文件，不需要强制登入功能则删除此文件\n\n2）代理\n\n文件：proxy.txt 用途：使用代理，http，https，socks5 协议 格式：http://xxxxx:7890 或 socks5://xxxxx:7891 （最后不要加 /)\n\n\n# 容器部署\n\n1、在绿联 docker-镜像管理-本地镜像中点击添加，选择官方库，输入 xiaoyaliu/alist:hostmode，下载 hostmode 版本镜像。\n\n\n\n2、点击创建容器，容器名称默认是 alist2，这里改一下。勾选创建后启动容器，点击下一步。\n\n\n\n3、基础设置选择重启策略\n\n\n\n4、网络选择 host\n\n\n\n5、存储空间把之前添加的 xiaoya 文件夹挂载为/data，类型选写读写。\n\n\n\n6、等待一会，等加载完毕，可以在日志里查看进度。如果日志里出现failed to refresh token: Too Many Requests这个错误，则继续等一会。\n\n\n\n7、在浏览器输入 IP:6789 进入界面。\n\n\n\n如果布置了 guestpass.txt 文件的话，需要输入账户密码才可以进入。\n\n\n\n\n# clouddrive2 挂载\n\n1、点击添加网盘，选择 webdav，服务器输入 http://ip:6789/dav，用户名是 dav，密码就是 guestpass.txt 设置的密码。clouddrive2 部署方法点这里。\n\n\n\n2、在左边点击挂载小雅 alist 的 webdav，然后点击电脑样式的挂载到本地按钮添加挂载点，挂载点选择我们创建的 cloudshare 目录，然后点击挂载。\n\n\n\n3、现在我们本地 docker 目录中的 cloudshare 文件夹已经有了我们小雅的资源了。\n\n\n\n\n# 使用 EMBY 展示小雅的内容\n\n官方文档：https://xiaoyaliu.notion.site/d353c9ceb15444d7b8e21ce6097ed739?v=145044ac8252470a9feef094ff1db520",normalizedContent:"官方在线文档：https://www.notion.so/xiaoya-docker-69404af849504fa5bcf9f2dd5ecaa75f#444f2033d834427b80114fc0d774d53c\n\n\n# 准备工作\n\n1、在本地新建三个 txt 文件夹，内容如下：\n\n1）token\n\n * 文件名称：mytoken.txt\n * 用途：用来加载阿里分享，和自动签到\n * 格式：75fee1ca79514e60aa6d46c8370b9afd\n * 备注：32 位长度，阿里云更新，网页版的 refresh_token 已经失效不可以再用。\n   * 安卓手机最新获取的 refresh_token 的方法如下：\n     * 1、在手机安装好“阿里云盘 app”，并正常登录一次；\n     * 2、在手机安装“es 文件浏览器”，浏览本地内部存储，进入“android/data/com.alicloud.databox/files/logs/trace/”，会看到随机生成的文件夹日志，进入，找最新的文件，下载到电脑上，记事本打开搜索 refreshtoken；\n   * iphone 手机获取方法：不清楚\n   * 没有选择的话用 https://aliyuntoken.vercel.app/\n\n2）open token\n\n * 文件名称：myopentoken.txt\n * 获取方式：https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html\n * 用途：用来加载自己的阿里云盘（open 接口）\n * 格式：eyj0exaioixxxxxlcjhbgcioijsuzi1nij9.eyjzd999999wnzbkowrinwq5ymq0yt........\n * 备注：很长一串，280 位，获取方式：https://alist.nn.ci/zh/guide/drivers/aliyundrive_open.html，如果已经部署 alist 并挂载好阿里的话，还有个简单的办法，直接从 alist 里面复制。\n\n3）转存目录的 folder id\n\n * 文件名称：temp_transfer_folder_id.txt\n * 用途：你的阿里⽹盘的转存目录的 folder id\n * 格式：640xxxxxxxxxxxxxxxxxxxca8a\n * 备注：先转存这个https://www.aliyundrive.com/s/rp9gp3h9ase到自己网盘（选择资源库），然后浏览器打开转存后的目录，此时的浏览器 url：https://www.aliyundrive.com/drive/file/resource/640xxxxxxxxxxxxxxxxxxxca8a ，最后这一串 640 开头的就是。记得这个目录不要删，里面的内容可以定期删除。\n\n2、在绿联的 docker 文件夹下新建一个 xiaoya 文件夹，并把这三个 txt 文件上传进去。\n\n\n\n3、额外的文档，更多可参考官方文档\n\n1）强制登陆\n\n说明： 设置强制登入和自定义密码，把密码保存到 /etc/xiaoya/guestpass.txt （不过不要设置稀奇古怪的符号，例如；&#“~@（）*$ 之类的）。如果你的 xiaoya 放在公网，为了防止别人蹭网，可以设置强制登入，新增 /etc/xiaoya/guestlogin.txt 这个文件，重启即可，文件有没有内容无所谓，如果取消强制登入就删除这个文件。强制登入的账号为 dav，密码使用/etc/xiaoya/guestpass.txt 里设置的，同时 webdav 连接使用 dav 这个用户，上述 2 个功能设置好后需要重启 docker 才会生效。\n\n * 文件：guestpass.txt\n   * 用途：自己修改 guest 账号的密码\n   * 备注：如果开启了强制登入则 登入账号 dav 也使用此密码\n * 文件：guestlogin.txt\n   * 用途：通过此文件的存在与否来决定是否开启强制登入\n   * 格式：空白文件，不需要强制登入功能则删除此文件\n\n2）代理\n\n文件：proxy.txt 用途：使用代理，http，https，socks5 协议 格式：http://xxxxx:7890 或 socks5://xxxxx:7891 （最后不要加 /)\n\n\n# 容器部署\n\n1、在绿联 docker-镜像管理-本地镜像中点击添加，选择官方库，输入 xiaoyaliu/alist:hostmode，下载 hostmode 版本镜像。\n\n\n\n2、点击创建容器，容器名称默认是 alist2，这里改一下。勾选创建后启动容器，点击下一步。\n\n\n\n3、基础设置选择重启策略\n\n\n\n4、网络选择 host\n\n\n\n5、存储空间把之前添加的 xiaoya 文件夹挂载为/data，类型选写读写。\n\n\n\n6、等待一会，等加载完毕，可以在日志里查看进度。如果日志里出现failed to refresh token: too many requests这个错误，则继续等一会。\n\n\n\n7、在浏览器输入 ip:6789 进入界面。\n\n\n\n如果布置了 guestpass.txt 文件的话，需要输入账户密码才可以进入。\n\n\n\n\n# clouddrive2 挂载\n\n1、点击添加网盘，选择 webdav，服务器输入 http://ip:6789/dav，用户名是 dav，密码就是 guestpass.txt 设置的密码。clouddrive2 部署方法点这里。\n\n\n\n2、在左边点击挂载小雅 alist 的 webdav，然后点击电脑样式的挂载到本地按钮添加挂载点，挂载点选择我们创建的 cloudshare 目录，然后点击挂载。\n\n\n\n3、现在我们本地 docker 目录中的 cloudshare 文件夹已经有了我们小雅的资源了。\n\n\n\n\n# 使用 emby 展示小雅的内容\n\n官方文档：https://xiaoyaliu.notion.site/d353c9ceb15444d7b8e21ce6097ed739?v=145044ac8252470a9feef094ff1db520",charsets:{cjk:!0}},{title:"青龙面板",frontmatter:{title:"青龙面板",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/qinglong/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/03.%E7%AD%BE%E5%88%B0/01.%E9%9D%92%E9%BE%99%E9%9D%A2%E6%9D%BF.html",relativePath:"02.工具/03.签到/01.青龙面板.md",key:"v-133d1240",path:"/tool/qinglong/",headers:[{level:2,title:"1、容器创建",slug:"_1、容器创建",normalizedTitle:"1、容器创建",charIndex:2},{level:2,title:"2、初始化",slug:"_2、初始化",normalizedTitle:"2、初始化",charIndex:75},{level:2,title:"3、阿里云签到",slug:"_3、阿里云签到",normalizedTitle:"3、阿里云签到",charIndex:207}],headersStr:"1、容器创建 2、初始化 3、阿里云签到",content:'# 1、容器创建\n\n1、下载最新版本镜像。\n\n\n\n2、点击创建容器，名称自定义，点击下一步。\n\n\n\n3、配置存储空间\n\n\n\n4、配置端口\n\n\n\n\n# 2、初始化\n\n1、在本地浏览器输入 ip:端口进行访问，点击开始安装\n\n\n\n2、设置完管理员账号密码后可以点击提交\n\n\n\n3、通知设置可以先跳过\n\n\n\n可以后面在系统里设置\n\n\n\n4、点击去登录\n\n\n\n5、输入账户密码点击登录\n\n\n\n6、登录成功界面\n\n\n\n\n# 3、阿里云签到\n\n1、获取 token\n\n通过alist 获取阿里云盘的 token\n\n\n\n2、新建环境变量\n\n\n\n3、新建依赖\n\n\n\n4、新建任务\n\n定时签到程序脚本：\n\n * 国内建议用此脚本：\n   \n   ql repo https://gitee.com/joechen1024/aliyundriveDailyCheck.git "autoSignin" "" "qlApi"\n   \n   \n   1\n   \n * 国外原版拉取脚本： ` - ql repo https://github.com/mrabit/aliyundriveDailyCheck.git "autoSignin" "" "qlApi"\n   * ql repo https://gh-proxy.com/https://github.com/mrabit/aliyundriveDailyCheck.git "autoSignin" "" "qlApi" `\n\n点击运行一次，运行完成后刷新网页\n\n\n\n如果多出一条定时任务则表示成功。\n\n\n\n再手动运行一次。\n\n\n\n然后查看日志是否正常，如果成功就可以不用管了。\n\n\n\n5、如果有两个账号就多新建一个环境变量就行\n\n\n\n6、消息通知\n\n * 可以在设置里填好通知方式对应的信息。\n   \n   \n\n * 也可在配置文件里输入对应的通知方法的信息。\n   \n   ',normalizedContent:'# 1、容器创建\n\n1、下载最新版本镜像。\n\n\n\n2、点击创建容器，名称自定义，点击下一步。\n\n\n\n3、配置存储空间\n\n\n\n4、配置端口\n\n\n\n\n# 2、初始化\n\n1、在本地浏览器输入 ip:端口进行访问，点击开始安装\n\n\n\n2、设置完管理员账号密码后可以点击提交\n\n\n\n3、通知设置可以先跳过\n\n\n\n可以后面在系统里设置\n\n\n\n4、点击去登录\n\n\n\n5、输入账户密码点击登录\n\n\n\n6、登录成功界面\n\n\n\n\n# 3、阿里云签到\n\n1、获取 token\n\n通过alist 获取阿里云盘的 token\n\n\n\n2、新建环境变量\n\n\n\n3、新建依赖\n\n\n\n4、新建任务\n\n定时签到程序脚本：\n\n * 国内建议用此脚本：\n   \n   ql repo https://gitee.com/joechen1024/aliyundrivedailycheck.git "autosignin" "" "qlapi"\n   \n   \n   1\n   \n * 国外原版拉取脚本： ` - ql repo https://github.com/mrabit/aliyundrivedailycheck.git "autosignin" "" "qlapi"\n   * ql repo https://gh-proxy.com/https://github.com/mrabit/aliyundrivedailycheck.git "autosignin" "" "qlapi" `\n\n点击运行一次，运行完成后刷新网页\n\n\n\n如果多出一条定时任务则表示成功。\n\n\n\n再手动运行一次。\n\n\n\n然后查看日志是否正常，如果成功就可以不用管了。\n\n\n\n5、如果有两个账号就多新建一个环境变量就行\n\n\n\n6、消息通知\n\n * 可以在设置里填好通知方式对应的信息。\n   \n   \n\n * 也可在配置文件里输入对应的通知方法的信息。\n   \n   ',charsets:{cjk:!0}},{title:"qiandao框架",frontmatter:{title:"qiandao框架",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/qiandao/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/03.%E7%AD%BE%E5%88%B0/02.qiandao%E6%A1%86%E6%9E%B6.html",relativePath:"02.工具/03.签到/02.qiandao框架.md",key:"v-454563b7",path:"/tool/qiandao/",headers:[{level:2,title:"1、容器部署",slug:"_1、容器部署",normalizedTitle:"1、容器部署",charIndex:2},{level:2,title:"2、初始化",slug:"_2、初始化",normalizedTitle:"2、初始化",charIndex:182},{level:2,title:"3、添加签到任务",slug:"_3、添加签到任务",normalizedTitle:"3、添加签到任务",charIndex:479},{level:3,title:"1、什么值得买",slug:"_1、什么值得买",normalizedTitle:"1、什么值得买",charIndex:492},{level:3,title:"2、阿里云盘",slug:"_2、阿里云盘",normalizedTitle:"2、阿里云盘",charIndex:863},{level:3,title:"3、PT 站",slug:"_3、pt-站",normalizedTitle:"3、pt 站",charIndex:1158},{level:3,title:"4、b 站",slug:"_4、b-站",normalizedTitle:"4、b 站",charIndex:1479},{level:3,title:"5、网易云音乐",slug:"_5、网易云音乐",normalizedTitle:"5、网易云音乐",charIndex:1770},{level:2,title:"4、WxPusher 消息通知",slug:"_4、wxpusher-消息通知",normalizedTitle:"4、wxpusher 消息通知",charIndex:2066}],headersStr:"1、容器部署 2、初始化 3、添加签到任务 1、什么值得买 2、阿里云盘 3、PT 站 4、b 站 5、网易云音乐 4、WxPusher 消息通知",content:"# 1、容器部署\n\n1、在绿联云的 docker 的镜像仓库里搜索 a76yyyy/qiandao，找到并下载最新版的。\n\n\n\n2、在本地镜像里找到刚刚下载的镜像并点击创建容器，然后点击下一步。\n\n\n\n3、设置存储空间\n\n\n\n4、设置端口，本地端口随意不冲突就行。\n\n\n\n容器主要设置这两项即可，设置完成点击下一步，然后点击完成。这样就完成了容器的部署。\n\n\n# 2、初始化\n\n1、输入绿联云 IP+刚刚设置的本地端口进入页面，点击右上角的登录\n\n\n\n2、第一次的话输入邮箱和密码后点击注册，注册一个账号\n\n\n\n3、签到框架首页\n\n\n\n4、仓库模板\n\n1）添加公共模板\n\n首页点击公共模板\n\n\n\n点击注册仓库，如果这里不显示注册，则先退出去再重新登进。\n\n\n\n填写仓库名（自定义）、URL：https://github.com/wjf0214/qd-templates、分支，选择加速：\n\n\n\n仓库注册成功：\n\n\n\n没模板出现的强制更新几次看看\n\n\n\n2）Har 文件获取\n\n点击其中一个链接：\n\n\n\n可以直接选择下载自己想要的 har 文件：\n\n\n\n\n# 3、添加签到任务\n\n\n# 1、什么值得买\n\n1、登录什么值得买网页端，然后按 F12 调出开发人员工具，再刷新下页面，然后选择网络，找到 cookie 并复制。\n\n\n\n2、点添加模板：\n\n\n\n3、选择上传 HAR 文件然后直接点上传：\n\n\n\n4、点击保存：\n\n\n\n5、输入名称和网址继续保存：\n\n\n\n6、往下翻点击测试，并输入刚刚复制的的 cookie：\n\n\n\n7、测试成功后点空白处退出测试，并返回主页：\n\n\n\n8、在主页处刷新下，看到我的模板里有什么值得买的模板了，然后在我的任务后点击新建任务：\n\n\n\n9、选好网站后输入 cookie，如果有签到了的记得勾选今日已签到，分组的话自己选择是否分。然后在下面点击提交：\n\n\n\n10、如果今天还没有签到的话，可以点击执行，然后刷新看看是否有任务成功次数，也可以查看日志看看具体信息。可以自己选择是否定时。\n\n\n\n\n# 2、阿里云盘\n\n1、点添加模板：\n\n\n\n2、选择上传 HAR 文件然后点上传：\n\n\n\n3、点击保存（如果不想自动领取奖励，可以把这里的领取奖励删掉）：\n\n\n\n4、继续保存，保存后返回首页，刷新下，看到我的模板里出现了阿里云的链接了。\n\n\n\n5、 点击工具箱\n\n\n\n6、选择记事本\n\n\n\n7、填写内容后点击复写，注意这里的 token 是短的一个，token 获取方法之一：https://alist.nn.ci/tool/aliyundrive/request.html。\n\n\n\n8、新建任务：\n\n\n\n9、填好后，在下面点击提交：\n\n\n\n有两个账号的按上面流程重来次改下名称即可。\n\n\n# 3、PT 站\n\n1、点击添加模板\n\n\n\n4、上传 har 文件并点击上传。\n\n\n\n3、点击保存\n\n\n\n4、输入你 PT 站的网站名称（可自定义）和网址，然后继续点击保存\n\n\n\n5、去主页刷新下，可以看到模板里有你刚刚新建的 pt 站的信息，然后在我的任务里点击添加任务。\n\n\n\n6、打开你的 pt 站，然后按 F12 调出开发人员工具，再刷新下页面，然后选择网络，找到 cookie 并复制。\n\n\n\n7、把刚刚复制的 cookie 填入签到框架刚刚新建的任务里，并点击测试。\n\n\n\n8、测试成功后点击提交。然后在首页刷新下，由于我之前勾选了我一件签过到了，所以今天不会执行，也不会有执行成功的信息。\n\n\n\n其他的 PT 站的也类似。\n\n\n# 4、b 站\n\n1、点击添加模板\n\n\n\n2、上传 har 文件并点击上传。\n\n\n\n3、点击保存。\n\n\n\n4、继续保存。\n\n\n\n5、去主页刷新下，可以看到模板里有 bilibili 的信息，然后在我的任务里点击添加任务。\n\n\n\n6、打开 b 站首页并登录，然后按 F12 调出开发人员工具，再刷新下 b 站页面，然后选择网络，找到 cookie 并复制。\n\n\n\n7、把刚刚复制的 cookie 填入签到框架刚刚新建的任务里，并点击测试。\n\n\n\n8、测试成功后点击提交。\n\n\n\n9、提交后会执行一次，等一会刷新下可以看到执行成功相关的信息，也可以在后面的日志里查看详细信息。\n\n\n\n\n# 5、网易云音乐\n\n1、添加模板\n\n\n\n2、上传 har 文件并上传。\n\n\n\n3、点击保存\n\n\n\n4、继续保存\n\n\n\n5、保存成功后去首页，刷新下，可以看到网易云在模板里，然后在我的任务里点击添加任务\n\n\n\n6、去网易云官网登录，并按 F12 调出开发人员工具，然后在界面刷新下，点击网络，找到 cookie 并复制好。\n\n\n\n7、把刚刚复制的 cookie 填入签到框架刚刚新建的任务里，并点击测试。\n\n\n\n8、测试成功后点击提交\n\n\n\n9、提交后会回到首页，显示正在执行任务。\n\n\n\n10、过一会，刷新下，可以看到任务执行成功的一些信息，然后可以点击查看日志，查看具体的信息。\n\n\n\n\n# 4、WxPusher 消息通知\n\n1、打开wxpusher 官网，扫码关注公众号\n\n2、获取 UID\n\n\n\n3、点击链接：https://wxpusher.zjiecode.com/admin/，创建应用获取 Token。只需要填写这三个信息就足够\n\n\n\n4、创建应用以后，你可以看到应用的应用码和关注链接，可以通过这 2 种方式来关注应用，关注应用以后，就可以收到消息了。\n\n\n\n5、来到 QD 框架首页点击工具箱\n\n\n\n6、点击推送注册\n\n\n\n7、按要求填写 UID 和 Token（token 和 uid 之间用;连接），并点击提交来注册推送，注册后可以点击测试看看。\n\n\n\n8、测试成功后点击推送设置\n\n\n\n9、选择 WXPusher，设置通知选项，并提交。\n\n\n\n10、效果\n\n",normalizedContent:"# 1、容器部署\n\n1、在绿联云的 docker 的镜像仓库里搜索 a76yyyy/qiandao，找到并下载最新版的。\n\n\n\n2、在本地镜像里找到刚刚下载的镜像并点击创建容器，然后点击下一步。\n\n\n\n3、设置存储空间\n\n\n\n4、设置端口，本地端口随意不冲突就行。\n\n\n\n容器主要设置这两项即可，设置完成点击下一步，然后点击完成。这样就完成了容器的部署。\n\n\n# 2、初始化\n\n1、输入绿联云 ip+刚刚设置的本地端口进入页面，点击右上角的登录\n\n\n\n2、第一次的话输入邮箱和密码后点击注册，注册一个账号\n\n\n\n3、签到框架首页\n\n\n\n4、仓库模板\n\n1）添加公共模板\n\n首页点击公共模板\n\n\n\n点击注册仓库，如果这里不显示注册，则先退出去再重新登进。\n\n\n\n填写仓库名（自定义）、url：https://github.com/wjf0214/qd-templates、分支，选择加速：\n\n\n\n仓库注册成功：\n\n\n\n没模板出现的强制更新几次看看\n\n\n\n2）har 文件获取\n\n点击其中一个链接：\n\n\n\n可以直接选择下载自己想要的 har 文件：\n\n\n\n\n# 3、添加签到任务\n\n\n# 1、什么值得买\n\n1、登录什么值得买网页端，然后按 f12 调出开发人员工具，再刷新下页面，然后选择网络，找到 cookie 并复制。\n\n\n\n2、点添加模板：\n\n\n\n3、选择上传 har 文件然后直接点上传：\n\n\n\n4、点击保存：\n\n\n\n5、输入名称和网址继续保存：\n\n\n\n6、往下翻点击测试，并输入刚刚复制的的 cookie：\n\n\n\n7、测试成功后点空白处退出测试，并返回主页：\n\n\n\n8、在主页处刷新下，看到我的模板里有什么值得买的模板了，然后在我的任务后点击新建任务：\n\n\n\n9、选好网站后输入 cookie，如果有签到了的记得勾选今日已签到，分组的话自己选择是否分。然后在下面点击提交：\n\n\n\n10、如果今天还没有签到的话，可以点击执行，然后刷新看看是否有任务成功次数，也可以查看日志看看具体信息。可以自己选择是否定时。\n\n\n\n\n# 2、阿里云盘\n\n1、点添加模板：\n\n\n\n2、选择上传 har 文件然后点上传：\n\n\n\n3、点击保存（如果不想自动领取奖励，可以把这里的领取奖励删掉）：\n\n\n\n4、继续保存，保存后返回首页，刷新下，看到我的模板里出现了阿里云的链接了。\n\n\n\n5、 点击工具箱\n\n\n\n6、选择记事本\n\n\n\n7、填写内容后点击复写，注意这里的 token 是短的一个，token 获取方法之一：https://alist.nn.ci/tool/aliyundrive/request.html。\n\n\n\n8、新建任务：\n\n\n\n9、填好后，在下面点击提交：\n\n\n\n有两个账号的按上面流程重来次改下名称即可。\n\n\n# 3、pt 站\n\n1、点击添加模板\n\n\n\n4、上传 har 文件并点击上传。\n\n\n\n3、点击保存\n\n\n\n4、输入你 pt 站的网站名称（可自定义）和网址，然后继续点击保存\n\n\n\n5、去主页刷新下，可以看到模板里有你刚刚新建的 pt 站的信息，然后在我的任务里点击添加任务。\n\n\n\n6、打开你的 pt 站，然后按 f12 调出开发人员工具，再刷新下页面，然后选择网络，找到 cookie 并复制。\n\n\n\n7、把刚刚复制的 cookie 填入签到框架刚刚新建的任务里，并点击测试。\n\n\n\n8、测试成功后点击提交。然后在首页刷新下，由于我之前勾选了我一件签过到了，所以今天不会执行，也不会有执行成功的信息。\n\n\n\n其他的 pt 站的也类似。\n\n\n# 4、b 站\n\n1、点击添加模板\n\n\n\n2、上传 har 文件并点击上传。\n\n\n\n3、点击保存。\n\n\n\n4、继续保存。\n\n\n\n5、去主页刷新下，可以看到模板里有 bilibili 的信息，然后在我的任务里点击添加任务。\n\n\n\n6、打开 b 站首页并登录，然后按 f12 调出开发人员工具，再刷新下 b 站页面，然后选择网络，找到 cookie 并复制。\n\n\n\n7、把刚刚复制的 cookie 填入签到框架刚刚新建的任务里，并点击测试。\n\n\n\n8、测试成功后点击提交。\n\n\n\n9、提交后会执行一次，等一会刷新下可以看到执行成功相关的信息，也可以在后面的日志里查看详细信息。\n\n\n\n\n# 5、网易云音乐\n\n1、添加模板\n\n\n\n2、上传 har 文件并上传。\n\n\n\n3、点击保存\n\n\n\n4、继续保存\n\n\n\n5、保存成功后去首页，刷新下，可以看到网易云在模板里，然后在我的任务里点击添加任务\n\n\n\n6、去网易云官网登录，并按 f12 调出开发人员工具，然后在界面刷新下，点击网络，找到 cookie 并复制好。\n\n\n\n7、把刚刚复制的 cookie 填入签到框架刚刚新建的任务里，并点击测试。\n\n\n\n8、测试成功后点击提交\n\n\n\n9、提交后会回到首页，显示正在执行任务。\n\n\n\n10、过一会，刷新下，可以看到任务执行成功的一些信息，然后可以点击查看日志，查看具体的信息。\n\n\n\n\n# 4、wxpusher 消息通知\n\n1、打开wxpusher 官网，扫码关注公众号\n\n2、获取 uid\n\n\n\n3、点击链接：https://wxpusher.zjiecode.com/admin/，创建应用获取 token。只需要填写这三个信息就足够\n\n\n\n4、创建应用以后，你可以看到应用的应用码和关注链接，可以通过这 2 种方式来关注应用，关注应用以后，就可以收到消息了。\n\n\n\n5、来到 qd 框架首页点击工具箱\n\n\n\n6、点击推送注册\n\n\n\n7、按要求填写 uid 和 token（token 和 uid 之间用;连接），并点击提交来注册推送，注册后可以点击测试看看。\n\n\n\n8、测试成功后点击推送设置\n\n\n\n9、选择 wxpusher，设置通知选项，并提交。\n\n\n\n10、效果\n\n",charsets:{cjk:!0}},{title:"heimdall导航页",frontmatter:{title:"heimdall导航页",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/heimdall/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/04.%E5%AF%BC%E8%88%AA/02.heimdall.html",relativePath:"02.工具/04.导航/02.heimdall.md",key:"v-e5d3b2c8",path:"/tool/heimdall/",headers:[{level:2,title:"1、容器部署",slug:"_1、容器部署",normalizedTitle:"1、容器部署",charIndex:61},{level:2,title:"2、heimdall 主页配置",slug:"_2、heimdall-主页配置",normalizedTitle:"2、heimdall 主页配置",charIndex:544}],headersStr:"1、容器部署 2、heimdall 主页配置",content:"github 链接：https://github.com/linuxserver/docker-heimdall\n\n\n# 1、容器部署\n\n1、进入绿联 Docker 镜像仓库，搜索 heimdall，选择第一个镜像 linuxserver/heimdall 点击下载拉取镜像，安装版本默认选择 latest。\n\n\n\n2、下载完成后，在镜像管理中找到刚刚下载的 linuxserver/heimdall 镜像，点击创建容器；名称可以默认也可以自定义，点击下一步\n\n\n\n3、在【基础设置】中，重启策略选择容器退出时重启\n\n\n\n4、【网络】保持默认，即 bridge 模式\n\n\n\n5、【存储空间】选择放置 Docker 的硬盘，新建文件夹，文件夹路径： docker 盘/Docker/heimdall/config，装载路径默认填“/config”，注意类型选择读写。\n\n\n\n6、【端口设置】这里，容器端口 80 对应 http 的端口，443 对应 https 的端口，为了避免端口冲突，本地端口需要改成其他未被占用的端口，且建议改成比较容易记的端口。\n\n\n\n7、【环境】这里添加两条参数：PUID = 1000 PGID =1000。最后点击下一步，就完成了容器的安装配置。\n\n\n\n\n# 2、heimdall 主页配置\n\n完成 deimdall 容器安装后，在浏览器输入 ip:端口号，进入 deimdall 主页。\n\ndeimdall 默认为英文界面，但最新版本已支持中文。首先我们先点击右侧最下面的图标进入【设置】界面。\n\n\n\n在 Language 中选择 Zh（chinese），点击保存即设置为中文界面。\n\n\n\n接着回到首页，点击右侧【用户】菜单。\n\n\n\n设置账号密码邮箱，同时勾选允许公开访问，点击保存。\n\n\n\n点击【应用列表】菜单，然后在界面点击【添加】即可添加相关页面的快捷链接了。\n\n\n\ndeimdall 自带了一些网站的默认设置、LOGO 等可供选择，也可根据自己喜好进行自定义。网址可以输入相关应用的域名:端口号。（如只需内网访问则输入 IP：端口号）。除了 NAS 内部的应用，还可以添加如百度、淘宝、京东等等外部网站，根据需求定制个人导航，同时可以进行标签的归类。\n\n",normalizedContent:"github 链接：https://github.com/linuxserver/docker-heimdall\n\n\n# 1、容器部署\n\n1、进入绿联 docker 镜像仓库，搜索 heimdall，选择第一个镜像 linuxserver/heimdall 点击下载拉取镜像，安装版本默认选择 latest。\n\n\n\n2、下载完成后，在镜像管理中找到刚刚下载的 linuxserver/heimdall 镜像，点击创建容器；名称可以默认也可以自定义，点击下一步\n\n\n\n3、在【基础设置】中，重启策略选择容器退出时重启\n\n\n\n4、【网络】保持默认，即 bridge 模式\n\n\n\n5、【存储空间】选择放置 docker 的硬盘，新建文件夹，文件夹路径： docker 盘/docker/heimdall/config，装载路径默认填“/config”，注意类型选择读写。\n\n\n\n6、【端口设置】这里，容器端口 80 对应 http 的端口，443 对应 https 的端口，为了避免端口冲突，本地端口需要改成其他未被占用的端口，且建议改成比较容易记的端口。\n\n\n\n7、【环境】这里添加两条参数：puid = 1000 pgid =1000。最后点击下一步，就完成了容器的安装配置。\n\n\n\n\n# 2、heimdall 主页配置\n\n完成 deimdall 容器安装后，在浏览器输入 ip:端口号，进入 deimdall 主页。\n\ndeimdall 默认为英文界面，但最新版本已支持中文。首先我们先点击右侧最下面的图标进入【设置】界面。\n\n\n\n在 language 中选择 zh（chinese），点击保存即设置为中文界面。\n\n\n\n接着回到首页，点击右侧【用户】菜单。\n\n\n\n设置账号密码邮箱，同时勾选允许公开访问，点击保存。\n\n\n\n点击【应用列表】菜单，然后在界面点击【添加】即可添加相关页面的快捷链接了。\n\n\n\ndeimdall 自带了一些网站的默认设置、logo 等可供选择，也可根据自己喜好进行自定义。网址可以输入相关应用的域名:端口号。（如只需内网访问则输入 ip：端口号）。除了 nas 内部的应用，还可以添加如百度、淘宝、京东等等外部网站，根据需求定制个人导航，同时可以进行标签的归类。\n\n",charsets:{cjk:!0}},{title:"navnetic导航页",frontmatter:{title:"navnetic导航页",date:"2024-10-19T17:17:03.000Z",permalink:"/tool/navnetic/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/04.%E5%AF%BC%E8%88%AA/03.navnetic.html",relativePath:"02.工具/04.导航/03.navnetic.md",key:"v-3e6d5088",path:"/tool/navnetic/",headers:[{level:2,title:"compose 文件",slug:"compose-文件",normalizedTitle:"compose 文件",charIndex:2},{level:2,title:"挂载说明",slug:"挂载说明",normalizedTitle:"挂载说明",charIndex:583},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:890}],headersStr:"compose 文件 挂载说明 使用",content:'# compose 文件\n\nservices:\n  navnetic:\n    image: "syueya/navnetic:latest" \n    container_name: navnetic\n    restart: always\n    ports:\n      - \'8880:8888\'         # 前面的8880是nas的端口，可以随便取个未被占用的端口\n    volumes:\n      - "/volume3/docker/navnetic/config:/app/config"  # 配置文件目录\n      - "/volume3/docker/navnetic/data:/app/data" # 数据文件目录\n      - "/volume3/docker/navnetic/svgs:/app/static/svgs" # 分类图标存放路径\n      - "/volume3/docker/navnetic/logos:/app/static/logos"   # 网址图标存放路径\n    environment:\n      - PORT=8888\n      - PUID=1007\n      - PGID=10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 挂载说明\n\n挂载目录:\n\n * config目录: 用来存放配置文件\n * data目录: 用来存放数据，可以对里面的data.json文件进行编辑，添加、删除、修改分类和网址信息。\n * svgs目录: 用来存放分类的svg图标，里面是svg格式的图片。比如有一个分类【常用】，它的category_icon名称是【star】，则把【start.svg】放入svgs目录下。\n * logos目录: 用来存放网址logo，里面是png格式的图片。比如分类【常用】下网址【夏夏子blog】的icon名称是【myblog】，则在logos目录下新建个【star】文件夹，然后把【myblog.png】放入。\n\n\n# 使用\n\n1、打开浏览器，输入nas的ip和端口，端口就是上面配置的nas端口。\n\n2、进入页面后可以看到主页面\n\n\n\n3、点击右上角的编辑按钮可以进入显示增删改的按钮，也可以导入收藏夹文件。\n\n\n\n4、点击日志按钮可以查看操作日志\n\n\n\n5、点击设置按钮可以设置自定义名称\n\n',normalizedContent:'# compose 文件\n\nservices:\n  navnetic:\n    image: "syueya/navnetic:latest" \n    container_name: navnetic\n    restart: always\n    ports:\n      - \'8880:8888\'         # 前面的8880是nas的端口，可以随便取个未被占用的端口\n    volumes:\n      - "/volume3/docker/navnetic/config:/app/config"  # 配置文件目录\n      - "/volume3/docker/navnetic/data:/app/data" # 数据文件目录\n      - "/volume3/docker/navnetic/svgs:/app/static/svgs" # 分类图标存放路径\n      - "/volume3/docker/navnetic/logos:/app/static/logos"   # 网址图标存放路径\n    environment:\n      - port=8888\n      - puid=1007\n      - pgid=10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# 挂载说明\n\n挂载目录:\n\n * config目录: 用来存放配置文件\n * data目录: 用来存放数据，可以对里面的data.json文件进行编辑，添加、删除、修改分类和网址信息。\n * svgs目录: 用来存放分类的svg图标，里面是svg格式的图片。比如有一个分类【常用】，它的category_icon名称是【star】，则把【start.svg】放入svgs目录下。\n * logos目录: 用来存放网址logo，里面是png格式的图片。比如分类【常用】下网址【夏夏子blog】的icon名称是【myblog】，则在logos目录下新建个【star】文件夹，然后把【myblog.png】放入。\n\n\n# 使用\n\n1、打开浏览器，输入nas的ip和端口，端口就是上面配置的nas端口。\n\n2、进入页面后可以看到主页面\n\n\n\n3、点击右上角的编辑按钮可以进入显示增删改的按钮，也可以导入收藏夹文件。\n\n\n\n4、点击日志按钮可以查看操作日志\n\n\n\n5、点击设置按钮可以设置自定义名称\n\n',charsets:{cjk:!0}},{title:"思源笔记",frontmatter:{title:"思源笔记",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/siyuan/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/05.%E7%AC%94%E8%AE%B0/01.%E6%80%9D%E6%BA%90%E7%AC%94%E8%AE%B0.html",relativePath:"02.工具/05.笔记/01.思源笔记.md",key:"v-0f94ca37",path:"/tool/siyuan/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:361}],headersStr:"容器部署 使用",content:"# 容器部署\n\n1、打开 Docker 管理器，进入镜像管理。然后在镜像仓库中搜索 b3log/siyuan，选择 latest 版本并下载。\n\n\n\n2、下载完成后，我们在本地镜像中找到刚刚下载的镜像，点击创建容器。名称可以自定义，点击下一步。\n\n\n\n3、在基础设置中，重启策略选择“容器退出时总是重启容器”。\n\n\n\n4、在命令中，输入--workspace=/siyuan/workspace。\n\n\n\n5、在存储空间中，我们先在 docker 盘中创建一个属于思源笔记的专属文件夹 siyuan，并在该文件夹中创建一个子文件夹 workspace，并将其与容器中的/siyuan/workspace 目录绑定，类型设置为读写。\n\n\n\n6、设置一个喜欢的本地端口号。\n\n\n\n容器配置完成，点击下一步然后点击完成。\n\n\n# 使用\n\n启动容器，然后输入 IP:端口访问思源笔记。\n\n1、进入设置\n\n\n\n2、在 Appearance 中找到 Language，改为简体中文。\n\n\n\n3、点击关于，点击通过密码生成秘钥。该密码要记牢，后续跨设备同步需要使用。该密码用于加密解密，如果秘钥忘记了，你的笔记就废了。\n\n\n\n4、设置访问授权码，这里强烈建议设置，不然其他人通过你的网址也可以访问你的笔记。\n\n\n\n5、点击云端\n\n * 如果想要使用官方的云同步，可以购买会员。但绿联支持 WebDav，所以我们这里也可以选择 WebDav。\n * Endpoint 处填写我们 WebDav 要使用的根目录链接，然后 Username 和 Password 处分别填写我们的账号密码。\n * 勾选“启用云端同步”和“同步冲突时生成冲突文档”。\n * 在 WebDav 目录中，我们提前创建好一个目录名称比如思源笔记，那么在云端同步目录里我们就可以选择它来作为未来同步专用的文件夹。如果没有的话，软件会默认创建一个 main 文件夹来作为同步文件夹。\n\n",normalizedContent:"# 容器部署\n\n1、打开 docker 管理器，进入镜像管理。然后在镜像仓库中搜索 b3log/siyuan，选择 latest 版本并下载。\n\n\n\n2、下载完成后，我们在本地镜像中找到刚刚下载的镜像，点击创建容器。名称可以自定义，点击下一步。\n\n\n\n3、在基础设置中，重启策略选择“容器退出时总是重启容器”。\n\n\n\n4、在命令中，输入--workspace=/siyuan/workspace。\n\n\n\n5、在存储空间中，我们先在 docker 盘中创建一个属于思源笔记的专属文件夹 siyuan，并在该文件夹中创建一个子文件夹 workspace，并将其与容器中的/siyuan/workspace 目录绑定，类型设置为读写。\n\n\n\n6、设置一个喜欢的本地端口号。\n\n\n\n容器配置完成，点击下一步然后点击完成。\n\n\n# 使用\n\n启动容器，然后输入 ip:端口访问思源笔记。\n\n1、进入设置\n\n\n\n2、在 appearance 中找到 language，改为简体中文。\n\n\n\n3、点击关于，点击通过密码生成秘钥。该密码要记牢，后续跨设备同步需要使用。该密码用于加密解密，如果秘钥忘记了，你的笔记就废了。\n\n\n\n4、设置访问授权码，这里强烈建议设置，不然其他人通过你的网址也可以访问你的笔记。\n\n\n\n5、点击云端\n\n * 如果想要使用官方的云同步，可以购买会员。但绿联支持 webdav，所以我们这里也可以选择 webdav。\n * endpoint 处填写我们 webdav 要使用的根目录链接，然后 username 和 password 处分别填写我们的账号密码。\n * 勾选“启用云端同步”和“同步冲突时生成冲突文档”。\n * 在 webdav 目录中，我们提前创建好一个目录名称比如思源笔记，那么在云端同步目录里我们就可以选择它来作为未来同步专用的文件夹。如果没有的话，软件会默认创建一个 main 文件夹来作为同步文件夹。\n\n",charsets:{cjk:!0}},{title:"为知笔记",frontmatter:{title:"为知笔记",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/wiznote/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/05.%E7%AC%94%E8%AE%B0/02.%E4%B8%BA%E7%9F%A5%E7%AC%94%E8%AE%B0.html",relativePath:"02.工具/05.笔记/02.为知笔记.md",key:"v-18d0d1f3",path:"/tool/wiznote/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:490},{level:2,title:"其他客户端",slug:"其他客户端",normalizedTitle:"其他客户端",charIndex:870}],headersStr:"容器部署 初始化 其他客户端",content:"# 容器部署\n\n1、打开 docker 模块，在镜像仓库里搜索并下载 wiznote/wizserver 镜像。\n\n\n\n2、下载完成后，在本地镜像找到刚刚下载好的镜像，点击创建容器。可以把下方的创建后启动容器这里打钩，这样配置完基础参数后就可以自动运行。然后点击下一步进入下图页面。\n\n\n\n3、基础设置这里建议重启策略选择“容器退出时总是重启容器”，这样在我们重启设备或遇到其他故障时，docker 模块一旦重启，会自动恢复启动我们的为知笔记服务。\n\n\n\n4、存储空间模块，左侧的文件夹目录选择你自己 nas 里的路径即可，装载路径必须是“/wiz/storage”，类型必须选择读写。\n\n\n\n5、端口号设置，一个是 tcp 的 80 端口，一个是 udp 的 9269 端口，实际正常我们会用到这个 80 端口，在本地端口中我们可以选手动选择一个没有被占用过的端口，总之这里只要满足端口没被占用，且避开 80/443 等会被屏蔽的端口即可\n\n\n\n6、环境变量这里加上一行，左边的名称写入“SEARCH”，右边的值内写入“true”，这一行的命令意思是添加搜索功能。\n\n\n\n\n# 初始化\n\n1、完成容器参数配置后即可启动 docker，对应的链接就是我们 nas 的 ip 加上上方参数中的 80 对应的端口，比如我的 nas 地址是 192.168.3.107，参数配置的本地 80 端口对应的是 9191。那么我的为知笔记内网地址就是：192.168.3.107:9191。\n\nPs：第一次配置启动会需要非常长的时间，大概几分钟，因为需要自动生成数据库等相关模块。 如果我们等不及，打开了链接，看到如下界面，不用着急，说明仍在启动中，还需要耐心等待一会。\n\n\n\n2、直到我们刷新看到以下界面，我们的为知笔记终于安装完成。使用默认【管理员账号：admin@wiz.cn】和【密码：123456】登录\n\n\n\n3、登录进页面后可以点击头像，选择账户设置修改管理员密码。\n\n\n\n\n\n> 免费版本可以注册 5 个用户（不包含管理员账号）\n\n\n# 其他客户端\n\n1、我们搭建的 docker 是一个服务端，我们还需要客户端（官网下载）去配合，为知笔记支持的客户端如图。\n\n\n\n2、我们以 window 客户端为例，安装后打开界面如下图所示，我们可以点击右上角我标记的那个图标切换到私有服务界面\n\n\n\n3、前两行就输入我们的账户名和密码，最后一行就需要输入我们的为知笔记的地址。然后就可以登陆成功，其他客户端同理。\n\n\n\n> 建议 docker 服务端搭好以后，尽量都用专用的客户端，不要使用网页版，网页版功能非常简陋，编辑功能非常少，模板功能都找不到。",normalizedContent:"# 容器部署\n\n1、打开 docker 模块，在镜像仓库里搜索并下载 wiznote/wizserver 镜像。\n\n\n\n2、下载完成后，在本地镜像找到刚刚下载好的镜像，点击创建容器。可以把下方的创建后启动容器这里打钩，这样配置完基础参数后就可以自动运行。然后点击下一步进入下图页面。\n\n\n\n3、基础设置这里建议重启策略选择“容器退出时总是重启容器”，这样在我们重启设备或遇到其他故障时，docker 模块一旦重启，会自动恢复启动我们的为知笔记服务。\n\n\n\n4、存储空间模块，左侧的文件夹目录选择你自己 nas 里的路径即可，装载路径必须是“/wiz/storage”，类型必须选择读写。\n\n\n\n5、端口号设置，一个是 tcp 的 80 端口，一个是 udp 的 9269 端口，实际正常我们会用到这个 80 端口，在本地端口中我们可以选手动选择一个没有被占用过的端口，总之这里只要满足端口没被占用，且避开 80/443 等会被屏蔽的端口即可\n\n\n\n6、环境变量这里加上一行，左边的名称写入“search”，右边的值内写入“true”，这一行的命令意思是添加搜索功能。\n\n\n\n\n# 初始化\n\n1、完成容器参数配置后即可启动 docker，对应的链接就是我们 nas 的 ip 加上上方参数中的 80 对应的端口，比如我的 nas 地址是 192.168.3.107，参数配置的本地 80 端口对应的是 9191。那么我的为知笔记内网地址就是：192.168.3.107:9191。\n\nps：第一次配置启动会需要非常长的时间，大概几分钟，因为需要自动生成数据库等相关模块。 如果我们等不及，打开了链接，看到如下界面，不用着急，说明仍在启动中，还需要耐心等待一会。\n\n\n\n2、直到我们刷新看到以下界面，我们的为知笔记终于安装完成。使用默认【管理员账号：admin@wiz.cn】和【密码：123456】登录\n\n\n\n3、登录进页面后可以点击头像，选择账户设置修改管理员密码。\n\n\n\n\n\n> 免费版本可以注册 5 个用户（不包含管理员账号）\n\n\n# 其他客户端\n\n1、我们搭建的 docker 是一个服务端，我们还需要客户端（官网下载）去配合，为知笔记支持的客户端如图。\n\n\n\n2、我们以 window 客户端为例，安装后打开界面如下图所示，我们可以点击右上角我标记的那个图标切换到私有服务界面\n\n\n\n3、前两行就输入我们的账户名和密码，最后一行就需要输入我们的为知笔记的地址。然后就可以登陆成功，其他客户端同理。\n\n\n\n> 建议 docker 服务端搭好以后，尽量都用专用的客户端，不要使用网页版，网页版功能非常简陋，编辑功能非常少，模板功能都找不到。",charsets:{cjk:!0}},{title:"homepage导航页",frontmatter:{title:"homepage导航页",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/homepage/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/04.%E5%AF%BC%E8%88%AA/01.homepage.html",relativePath:"02.工具/04.导航/01.homepage.md",key:"v-506d853c",path:"/tool/homepage/",headers:[{level:2,title:"一、容器部署",slug:"一、容器部署",normalizedTitle:"一、容器部署",charIndex:2},{level:3,title:"下载容器",slug:"下载容器",normalizedTitle:"下载容器",charIndex:13},{level:3,title:"创建容器",slug:"创建容器",normalizedTitle:"创建容器",charIndex:137},{level:3,title:"使用环境变量来存储敏感信息",slug:"使用环境变量来存储敏感信息",normalizedTitle:"使用环境变量来存储敏感信息",charIndex:899},{level:2,title:"二、配置文件说明",slug:"二、配置文件说明",normalizedTitle:"二、配置文件说明",charIndex:1557},{level:2,title:"三、settings.yaml",slug:"三、settings-yaml",normalizedTitle:"三、settings.yaml",charIndex:2468},{level:3,title:"1、网页标题",slug:"_1、网页标题",normalizedTitle:"1、网页标题",charIndex:2488},{level:3,title:"2、语言",slug:"_2、语言",normalizedTitle:"2、语言",charIndex:2527},{level:3,title:"3、页眉样式",slug:"_3、页眉样式",normalizedTitle:"3、页眉样式",charIndex:2712},{level:3,title:"4、图标",slug:"_4、图标",normalizedTitle:"4、图标",charIndex:2864},{level:3,title:"5、主题",slug:"_5、主题",normalizedTitle:"5、主题",charIndex:3044},{level:3,title:"6、颜色调色板",slug:"_6、颜色调色板",normalizedTitle:"6、颜色调色板",charIndex:3123},{level:3,title:"7、Homepage 版本",slug:"_7、homepage-版本",normalizedTitle:"7、homepage 版本",charIndex:3395},{level:3,title:"8、日志路径",slug:"_8、日志路径",normalizedTitle:"8、日志路径",charIndex:3474},{level:3,title:"9、布局",slug:"_9、布局",normalizedTitle:"9、布局",charIndex:3572},{level:3,title:"10、背景图像",slug:"_10、背景图像",normalizedTitle:"10、背景图像",charIndex:5293},{level:3,title:"11、快速启动",slug:"_11、快速启动",normalizedTitle:"11、快速启动",charIndex:6380},{level:3,title:"12、Start URL",slug:"_12、start-url",normalizedTitle:"12、start url",charIndex:6766},{level:3,title:"13、基本 URL 地址",slug:"_13、基本-url-地址",normalizedTitle:"13、基本 url 地址",charIndex:6899},{level:3,title:"14、链接目标",slug:"_14、链接目标",normalizedTitle:"14、链接目标",charIndex:7041},{level:3,title:"15、天气组件",slug:"_15、天气组件",normalizedTitle:"15、天气组件",charIndex:7256},{level:3,title:"16、显示 Docker 状态",slug:"_16、显示-docker-状态",normalizedTitle:"16、显示 docker 状态",charIndex:7692},{level:3,title:"17、状态样式",slug:"_17、状态样式",normalizedTitle:"17、状态样式",charIndex:7885},{level:3,title:"18、隐藏小工具错误消息",slug:"_18、隐藏小工具错误消息",normalizedTitle:"18、隐藏小工具错误消息",charIndex:8254},{level:2,title:"四、services.yaml",slug:"四、services-yaml",normalizedTitle:"四、services.yaml",charIndex:8476},{level:3,title:"1、分组",slug:"_1、分组",normalizedTitle:"1、分组",charIndex:8555},{level:3,title:"2、服务",slug:"_2、服务",normalizedTitle:"2、服务",charIndex:8719},{level:3,title:"3、描述",slug:"_3、描述",normalizedTitle:"3、描述",charIndex:9001},{level:3,title:"4、图标",slug:"_4、图标-2",normalizedTitle:"4、图标",charIndex:2864},{level:3,title:"5、Ping",slug:"_5、ping",normalizedTitle:"5、ping",charIndex:10045},{level:3,title:"6、Docker 集成",slug:"_6、docker-集成",normalizedTitle:"6、docker 集成",charIndex:10611},{level:3,title:"7、服务集成",slug:"_7、服务集成",normalizedTitle:"7、服务集成",charIndex:11143},{level:3,title:"8、服务小部件",slug:"_8、服务小部件",normalizedTitle:"8、服务小部件",charIndex:11815},{level:2,title:"五、widgets.yaml",slug:"五、widgets-yaml",normalizedTitle:"五、widgets.yaml",charIndex:12619},{level:3,title:"1、服务小部件",slug:"_1、服务小部件",normalizedTitle:"1、服务小部件",charIndex:12701},{level:3,title:"2、信息小部件",slug:"_2、信息小部件",normalizedTitle:"2、信息小部件",charIndex:13061},{level:2,title:"六、bookmarks.yaml",slug:"六、bookmarks-yaml",normalizedTitle:"六、bookmarks.yaml",charIndex:13240},{level:2,title:"七、常用服务小部件",slug:"七、常用服务小部件",normalizedTitle:"七、常用服务小部件",charIndex:13783},{level:3,title:"1、qBittorrent",slug:"_1、qbittorrent",normalizedTitle:"1、qbittorrent",charIndex:13797},{level:3,title:"2、Transmission",slug:"_2、transmission",normalizedTitle:"2、transmission",charIndex:14016},{level:3,title:"3、Emby",slug:"_3、emby",normalizedTitle:"3、emby",charIndex:14350},{level:3,title:"4、Jellyfin",slug:"_4、jellyfin",normalizedTitle:"4、jellyfin",charIndex:14793},{level:3,title:"5、Plex",slug:"_5、plex",normalizedTitle:"5、plex",charIndex:15252},{level:3,title:"6、Jackett",slug:"_6、jackett",normalizedTitle:"6、jackett",charIndex:15555},{level:3,title:"7、Navidrome",slug:"_7、navidrome",normalizedTitle:"7、navidrome",charIndex:15699},{level:3,title:"8、Audiobookshelf",slug:"_8、audiobookshelf",normalizedTitle:"8、audiobookshelf",charIndex:15927},{level:3,title:"9、Nginx Proxy Manager",slug:"_9、nginx-proxy-manager",normalizedTitle:"9、nginx proxy manager",charIndex:16309},{level:3,title:"10、Tailscale",slug:"_10、tailscale",normalizedTitle:"10、tailscale",charIndex:16533},{level:3,title:"11、Home Assistant",slug:"_11、home-assistant",normalizedTitle:"11、home assistant",charIndex:16805},{level:2,title:"八、信息小部件",slug:"八、信息小部件",normalizedTitle:"八、信息小部件",charIndex:17750},{level:3,title:"1、Logo",slug:"_1、logo",normalizedTitle:"1、logo",charIndex:17762},{level:3,title:"2、Resources 资源信息",slug:"_2、resources-资源信息",normalizedTitle:"2、resources 资源信息",charIndex:17857},{level:3,title:"3、Date & Time 日期&时间",slug:"_3、date-time-日期-时间",normalizedTitle:"3、date &amp; time 日期&amp;时间",charIndex:null},{level:3,title:"4、Greeting 欢迎词",slug:"_4、greeting-欢迎词",normalizedTitle:"4、greeting 欢迎词",charIndex:19578},{level:3,title:"5、Search 搜索栏",slug:"_5、search-搜索栏",normalizedTitle:"5、search 搜索栏",charIndex:19719},{level:3,title:"6、天气组件",slug:"_6、天气组件",normalizedTitle:"6、天气组件",charIndex:20283},{level:3,title:"7、Glances",slug:"_7、glances",normalizedTitle:"7、glances",charIndex:21615},{level:3,title:"8、Kubernetes",slug:"_8、kubernetes",normalizedTitle:"8、kubernetes",charIndex:22486},{level:3,title:"9、Longhorn",slug:"_9、longhorn",normalizedTitle:"9、longhorn",charIndex:23165},{level:3,title:"10、Unifi Controller",slug:"_10、unifi-controller",normalizedTitle:"10、unifi controller",charIndex:23745},{level:2,title:"九、docker.yaml",slug:"九、docker-yaml",normalizedTitle:"九、docker.yaml",charIndex:24067},{level:3,title:"使用 Docker TLS",slug:"使用-docker-tls",normalizedTitle:"使用 docker tls",charIndex:24259},{level:3,title:"使用 Docker Socket Proxy",slug:"使用-docker-socket-proxy",normalizedTitle:"使用 docker socket proxy",charIndex:24586},{level:3,title:"直接使用 Socket",slug:"直接使用-socket",normalizedTitle:"直接使用 socket",charIndex:25669},{level:3,title:"Services",slug:"services",normalizedTitle:"services",charIndex:8498},{level:3,title:"自动服务发现",slug:"自动服务发现",normalizedTitle:"自动服务发现",charIndex:26538},{level:3,title:"小部件 Widgets",slug:"小部件-widgets",normalizedTitle:"小部件 widgets",charIndex:27166},{level:3,title:"Docker Swarm",slug:"docker-swarm",normalizedTitle:"docker swarm",charIndex:25010},{level:3,title:"排序 Ordering",slug:"排序-ordering",normalizedTitle:"排序 ordering",charIndex:28185},{level:3,title:"显示统计信息",slug:"显示统计信息",normalizedTitle:"显示统计信息",charIndex:26265},{level:2,title:"十、custom-css-js",slug:"十、custom-css-js",normalizedTitle:"十、custom-css-js",charIndex:28608},{level:2,title:"十一、kubernetes",slug:"十一、kubernetes",normalizedTitle:"十一、kubernetes",charIndex:28923},{level:3,title:"服务 Services",slug:"服务-services",normalizedTitle:"服务 services",charIndex:29185},{level:3,title:"自动服务发现",slug:"自动服务发现-2",normalizedTitle:"自动服务发现",charIndex:26538},{level:3,title:"注意事项",slug:"注意事项",normalizedTitle:"注意事项",charIndex:32138},{level:2,title:"十二、其它服务小部件",slug:"十二、其它服务小部件",normalizedTitle:"十二、其它服务小部件",charIndex:32213},{level:3,title:"Adguard Home",slug:"adguard-home",normalizedTitle:"adguard home",charIndex:32228},{level:3,title:"Atsumeru",slug:"atsumeru",normalizedTitle:"atsumeru",charIndex:32441},{level:3,title:"Authentik",slug:"authentik",normalizedTitle:"authentik",charIndex:32726},{level:3,title:"Autobrr",slug:"autobrr",normalizedTitle:"autobrr",charIndex:33403},{level:3,title:"Azure DevOps",slug:"azure-devops",normalizedTitle:"azure devops",charIndex:33646},{level:3,title:"Bazarr",slug:"bazarr",normalizedTitle:"bazarr",charIndex:34553},{level:3,title:"Caddy",slug:"caddy",normalizedTitle:"caddy",charIndex:34769},{level:3,title:"Calendar",slug:"calendar",normalizedTitle:"calendar",charIndex:34944},{level:3,title:"Readarr",slug:"readarr",normalizedTitle:"readarr",charIndex:35800},{level:3,title:"Calibre-web",slug:"calibre-web",normalizedTitle:"calibre-web",charIndex:36012},{level:3,title:"Changedetection.io",slug:"changedetection-io",normalizedTitle:"changedetection.io",charIndex:36449},{level:3,title:"Channels DVR Server",slug:"channels-dvr-server",normalizedTitle:"channels dvr server",charIndex:36643},{level:3,title:"Cloudflare Tunnels",slug:"cloudflare-tunnels",normalizedTitle:"cloudflare tunnels",charIndex:36743},{level:3,title:"Coin Market Cap",slug:"coin-market-cap",normalizedTitle:"coin market cap",charIndex:37391},{level:3,title:"Custom API",slug:"custom-api",normalizedTitle:"custom api",charIndex:37922},{level:3,title:"Example",slug:"example",normalizedTitle:"example",charIndex:7805},{level:3,title:"Data Transformation",slug:"data-transformation",normalizedTitle:"data transformation",charIndex:39853},{level:3,title:"Custom Headers",slug:"custom-headers",normalizedTitle:"custom headers",charIndex:40296},{level:3,title:"Deluge",slug:"deluge",normalizedTitle:"deluge",charIndex:40413},{level:3,title:"Synology Disk Station",slug:"synology-disk-station",normalizedTitle:"synology disk station",charIndex:40659},{level:3,title:"Synology Download Station",slug:"synology-download-station",normalizedTitle:"synology download station",charIndex:42965},{level:3,title:"EVCC",slug:"evcc",normalizedTitle:"evcc",charIndex:43233},{level:3,title:"Fileflows",slug:"fileflows",normalizedTitle:"fileflows",charIndex:43382},{level:3,title:"Flood",slug:"flood",normalizedTitle:"flood",charIndex:43534},{level:3,title:"FreshRSS",slug:"freshrss",normalizedTitle:"freshrss",charIndex:43729},{level:3,title:"GameDig",slug:"gamedig",normalizedTitle:"gamedig",charIndex:44012},{level:3,title:"Ghostfolio",slug:"ghostfolio",normalizedTitle:"ghostfolio",charIndex:44387},{level:3,title:"Glances",slug:"glances",normalizedTitle:"glances",charIndex:21617},{level:3,title:"Metrics",slug:"metrics",normalizedTitle:"metrics",charIndex:28986},{level:3,title:"Views",slug:"views",normalizedTitle:"views",charIndex:47217},{level:3,title:"Gluetun",slug:"gluetun",normalizedTitle:"gluetun",charIndex:47600},{level:3,title:"Gotify",slug:"gotify",normalizedTitle:"gotify",charIndex:47785},{level:3,title:"Grafana",slug:"grafana",normalizedTitle:"grafana",charIndex:48029},{level:3,title:"HDHomerun",slug:"hdhomerun",normalizedTitle:"hdhomerun",charIndex:48241},{level:3,title:"Health checks",slug:"health-checks",normalizedTitle:"health checks",charIndex:48363},{level:3,title:"Homebridge",slug:"homebridge",normalizedTitle:"homebridge",charIndex:48811},{level:3,title:"Immich",slug:"immich",normalizedTitle:"immich",charIndex:49178},{level:3,title:"Service Widgets",slug:"service-widgets",normalizedTitle:"service widgets",charIndex:11198},{level:3,title:"JDownloader",slug:"jdownloader",normalizedTitle:"jdownloader",charIndex:49420},{level:3,title:"Jellyseerr",slug:"jellyseerr",normalizedTitle:"jellyseerr",charIndex:49794},{level:3,title:"Kavita",slug:"kavita",normalizedTitle:"kavita",charIndex:50032},{level:3,title:"Komga",slug:"komga",normalizedTitle:"komga",charIndex:50272},{level:3,title:"Kopia",slug:"kopia",normalizedTitle:"kopia",charIndex:50512},{level:3,title:"Lidarr",slug:"lidarr",normalizedTitle:"lidarr",charIndex:50889},{level:3,title:"Mastodon",slug:"mastodon",normalizedTitle:"mastodon",charIndex:51100},{level:3,title:"Mealie",slug:"mealie",normalizedTitle:"mealie",charIndex:51403},{level:3,title:"Medusa",slug:"medusa",normalizedTitle:"medusa",charIndex:51649},{level:3,title:"Mikrotik",slug:"mikrotik",normalizedTitle:"mikrotik",charIndex:51825},{level:3,title:"Minecraft",slug:"minecraft",normalizedTitle:"minecraft",charIndex:52072},{level:3,title:"Miniflux",slug:"miniflux",normalizedTitle:"miniflux",charIndex:52217},{level:3,title:"MJPEG",slug:"mjpeg",normalizedTitle:"mjpeg",charIndex:52409},{level:3,title:"Moonraker (Klipper)",slug:"moonraker-klipper",normalizedTitle:"moonraker (klipper)",charIndex:52572},{level:3,title:"Mylar3",slug:"mylar3",normalizedTitle:"mylar3",charIndex:52752},{level:3,title:"Nextcloud",slug:"nextcloud",normalizedTitle:"nextcloud",charIndex:52948},{level:3,title:"NextDNS",slug:"nextdns",normalizedTitle:"nextdns",charIndex:53538},{level:3,title:"NZBget",slug:"nzbget",normalizedTitle:"nzbget",charIndex:53717},{level:3,title:"OctoPrint",slug:"octoprint",normalizedTitle:"octoprint",charIndex:54107},{level:3,title:"Omada",slug:"omada",normalizedTitle:"omada",charIndex:54305},{level:3,title:"Ombi",slug:"ombi",normalizedTitle:"ombi",charIndex:54601},{level:3,title:"OpenDTU",slug:"opendtu",normalizedTitle:"opendtu",charIndex:54827},{level:3,title:"OpenMediaVault",slug:"openmediavault",normalizedTitle:"openmediavault",charIndex:54980},{level:3,title:"Methods",slug:"methods",normalizedTitle:"methods",charIndex:55204},{level:3,title:"OPNSense",slug:"opnsense",normalizedTitle:"opnsense",charIndex:55672},{level:3,title:"Overseerr",slug:"overseerr",normalizedTitle:"overseerr",charIndex:56360},{level:3,title:"Paperless-ngx",slug:"paperless-ngx",normalizedTitle:"paperless-ngx",charIndex:56599},{level:3,title:"pfSense",slug:"pfsense",normalizedTitle:"pfsense",charIndex:57050},{level:3,title:"PhotoPrism",slug:"photoprism",normalizedTitle:"photoprism",charIndex:57793},{level:3,title:"PiAlert",slug:"pialert",normalizedTitle:"pialert",charIndex:57988},{level:3,title:"PiHole",slug:"pihole",normalizedTitle:"pihole",charIndex:58148},{level:3,title:"Tautulli (Plex)",slug:"tautulli-plex",normalizedTitle:"tautulli (plex)",charIndex:58532},{level:3,title:"Portainer",slug:"portainer",normalizedTitle:"portainer",charIndex:58862},{level:3,title:"Prometheus",slug:"prometheus",normalizedTitle:"prometheus",charIndex:59494},{level:3,title:"Prowlarr",slug:"prowlarr",normalizedTitle:"prowlarr",charIndex:59645},{level:3,title:"Proxmox",slug:"proxmox",normalizedTitle:"proxmox",charIndex:59911},{level:3,title:"Proxmox Backup Server",slug:"proxmox-backup-server",normalizedTitle:"proxmox backup server",charIndex:61713},{level:3,title:"Pterodactyl",slug:"pterodactyl",normalizedTitle:"pterodactyl",charIndex:61975},{level:3,title:"Pyload",slug:"pyload",normalizedTitle:"pyload",charIndex:62129},{level:3,title:"QNAP",slug:"qnap",normalizedTitle:"qnap",charIndex:62333},{level:3,title:"Radarr",slug:"radarr",normalizedTitle:"radarr",charIndex:9758},{level:3,title:"ruTorrent",slug:"rutorrent",normalizedTitle:"rutorrent",charIndex:63158},{level:3,title:"SABnzbd",slug:"sabnzbd",normalizedTitle:"sabnzbd",charIndex:63592},{level:3,title:"Scrutiny",slug:"scrutiny",normalizedTitle:"scrutiny",charIndex:63802},{level:3,title:"Sonarr",slug:"sonarr",normalizedTitle:"sonarr",charIndex:9634},{level:3,title:"Speedtest Tracker",slug:"speedtest-tracker",normalizedTitle:"speedtest tracker",charIndex:64294},{level:3,title:"Syncthing Relay Server",slug:"syncthing-relay-server",normalizedTitle:"syncthing relay server",charIndex:64579},{level:3,title:"Tdarr",slug:"tdarr",normalizedTitle:"tdarr",charIndex:64842},{level:3,title:"Traefik",slug:"traefik",normalizedTitle:"traefik",charIndex:31090},{level:3,title:"TrueNas",slug:"truenas",normalizedTitle:"truenas",charIndex:65335},{level:3,title:"Tube Archivist",slug:"tube-archivist",normalizedTitle:"tube archivist",charIndex:65700},{level:3,title:"Unifi Controller",slug:"unifi-controller",normalizedTitle:"unifi controller",charIndex:23748},{level:3,title:"Unmanic",slug:"unmanic",normalizedTitle:"unmanic",charIndex:66530},{level:3,title:"Uptime Kuma",slug:"uptime-kuma",normalizedTitle:"uptime kuma",charIndex:66685},{level:3,title:"UptimeRobot",slug:"uptimerobot",normalizedTitle:"uptimerobot",charIndex:67093},{level:3,title:"UrBackup",slug:"urbackup",normalizedTitle:"urbackup",charIndex:67756},{level:3,title:"Watchtower",slug:"watchtower",normalizedTitle:"watchtower",charIndex:68861},{level:3,title:"Whats Up Docker",slug:"whats-up-docker",normalizedTitle:"whats up docker",charIndex:69128},{level:3,title:"Xteve",slug:"xteve",normalizedTitle:"xteve",charIndex:69325}],headersStr:"一、容器部署 下载容器 创建容器 使用环境变量来存储敏感信息 二、配置文件说明 三、settings.yaml 1、网页标题 2、语言 3、页眉样式 4、图标 5、主题 6、颜色调色板 7、Homepage 版本 8、日志路径 9、布局 10、背景图像 11、快速启动 12、Start URL 13、基本 URL 地址 14、链接目标 15、天气组件 16、显示 Docker 状态 17、状态样式 18、隐藏小工具错误消息 四、services.yaml 1、分组 2、服务 3、描述 4、图标 5、Ping 6、Docker 集成 7、服务集成 8、服务小部件 五、widgets.yaml 1、服务小部件 2、信息小部件 六、bookmarks.yaml 七、常用服务小部件 1、qBittorrent 2、Transmission 3、Emby 4、Jellyfin 5、Plex 6、Jackett 7、Navidrome 8、Audiobookshelf 9、Nginx Proxy Manager 10、Tailscale 11、Home Assistant 八、信息小部件 1、Logo 2、Resources 资源信息 3、Date & Time 日期&时间 4、Greeting 欢迎词 5、Search 搜索栏 6、天气组件 7、Glances 8、Kubernetes 9、Longhorn 10、Unifi Controller 九、docker.yaml 使用 Docker TLS 使用 Docker Socket Proxy 直接使用 Socket Services 自动服务发现 小部件 Widgets Docker Swarm 排序 Ordering 显示统计信息 十、custom-css-js 十一、kubernetes 服务 Services 自动服务发现 注意事项 十二、其它服务小部件 Adguard Home Atsumeru Authentik Autobrr Azure DevOps Bazarr Caddy Calendar Readarr Calibre-web Changedetection.io Channels DVR Server Cloudflare Tunnels Coin Market Cap Custom API Example Data Transformation Custom Headers Deluge Synology Disk Station Synology Download Station EVCC Fileflows Flood FreshRSS GameDig Ghostfolio Glances Metrics Views Gluetun Gotify Grafana HDHomerun Health checks Homebridge Immich Service Widgets JDownloader Jellyseerr Kavita Komga Kopia Lidarr Mastodon Mealie Medusa Mikrotik Minecraft Miniflux MJPEG Moonraker (Klipper) Mylar3 Nextcloud NextDNS NZBget OctoPrint Omada Ombi OpenDTU OpenMediaVault Methods OPNSense Overseerr Paperless-ngx pfSense PhotoPrism PiAlert PiHole Tautulli (Plex) Portainer Prometheus Prowlarr Proxmox Proxmox Backup Server Pterodactyl Pyload QNAP Radarr ruTorrent SABnzbd Scrutiny Sonarr Speedtest Tracker Syncthing Relay Server Tdarr Traefik TrueNas Tube Archivist Unifi Controller Unmanic Uptime Kuma UptimeRobot UrBackup Watchtower Whats Up Docker Xteve",content:'# 一、容器部署\n\n\n# 下载容器\n\n进入 docker，点击镜像管理-本地镜像-添加-私有库（注意是私有库，这个镜像未发布在 Docker Hub），URL 地址处输入：ghcr.io/gethomepage/homepage:latest，下载最新版镜像。\n\n\n\n\n# 创建容器\n\n1、安装教程：https://gethomepage.dev/v0.8.3/installation/docker/\n\nversion: "3.3"\nservices:\n  homepage:\n    image: ghcr.io/gethomepage/homepage:latest\n    container_name: homepage\n    ports:\n      - 3000:3000\n    volumes:\n      - /path/to/config:/app/config # Make sure your local config directory exists\n      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n2、下载完后创建容器，名称默认即可，也可自定义，勾选创建后启动容器，点击下一步。\n\n\n\n3、基础设置里选择倒数第二项\n\n\n\n4、存储空间设置\n\n * 在 docker 盘新建个 homepage 文件夹，并在这个文件夹里新建个 config 子文件夹，然后在存储空间里挂载为/app/config，注意类型为读写。\n * 如果你想用本地存放的 logo 的话，你可以新建个文件夹 logos，挂载为/app/public/icons。\n * 如果你需要显示某个的盘容量信息的话，需要把这个盘也挂载上，可以自定义命名。\n\n\n\n5、本地端口随便设置个未被占用的。\n\n\n\n6、设置完成后点击完成，在浏览器输入绿联的 IP:3999（刚刚设置的本地端口），进入 homepage 页面。\n\n\n\n\n# 使用环境变量来存储敏感信息\n\n你还可以在配置文件中使用环境变量来保护敏感信息。请注意以下事项：\n\n环境变量必须以 HOMEPAGE_VAR_ 或 HOMEPAGE_FILE_ 开头。\n环境变量 HOMEPAGE_VAR_XXX 的值将替换配置文件中的 {{HOMEPAGE_VAR_XXX}} 。\n环境变量 HOMEPAGE_FILE_XXX 的值必须是一个文件路径，文件内容将替换配置文件中的 {{HOMEPAGE_FILE_XXX}} 。\n\n\n1\n2\n3\n\n\n比如：\n\n * 配置文件内容：\n   \n   username: { { HOMEPAGE_VAR_QB_USERNAME } }\n   password: { { HOMEPAGE_VAR_QB_PASSWORD } }\n   config_file: { { HOMEPAGE_FILE_DB_CONFIG } }\n   \n   \n   1\n   2\n   3\n   \n\n * 设置对应的环境变量：\n   \n   export HOMEPAGE_VAR_QB_USERNAME=myusername\n   export HOMEPAGE_VAR_QB_PASSWORD=mypassword\n   export HOMEPAGE_FILE_DB_CONFIG=/path/to/db_config.ini\n   \n   \n   1\n   2\n   3\n   \n\n这种方式可以确保敏感信息不会直接出现在配置文件中，而是通过环境变量进行传递。\n\n\n# 二、配置文件说明\n\n官方说明文档：https://gethomepage.dev/v0.7.3/configs。\n\n我们进入 docker 盘中刚刚新建的 homepage-config 文件夹，可以看到有好几个 yaml 格式的文件夹。\n\n\n\n注意：\n\n * yaml 格式的不建议用记事本打开直接编辑，一定要用编辑器修改，比如 vscode 或 pycharm。\n * 或者使用在线编辑器（https://codebeautify.org/yaml-validator或https://jsonformatter.org/yaml-validator）编辑。\n\n其中：\n\n * settings.yaml：包含了与应用程序相关的配置，比如背景图片、默认主题颜色等。\n * bookmarks.yaml：它通常包含每个网站的 URL（网址）和名称，你可以通过修改这个文件来管理你个人的网站收藏。\n * services.yaml：用于配置部署在主页上的一些服务。它通常包含服务的名称、URL，以及访问和使用每个服务所需的其他设置或参数。\n * widgets.yaml：包含了信息小部件的配置设置，它们会显示在主页上。小部件是一些提供实用信息或功能的小组件，比如天气、日历、待办事项列表、新闻等。你可以自定义这个文件，来指定每个小部件在主页上的类型、位置和设置\n * kubernetes.yaml：通常用于配置 Kubernetes 集群。它包含了定义和管理 Kubernetes 资源的规范和设置，如部署、Pod 定义、服务等。\n * docker.yaml：用于配置 Docker 实例。它包含了 Docker 容器的名称、镜像名称、端口映射、环境变量等设置。你可以定义和管理运行在你的系统上的各种 Docker 容器。\n * custom.css & custom.js： 用于自定义主页的 CSS（层叠样式表）和 JavaScript。custom.css 允许你指定自己的样式，修改主页的外观和布局，而 custom.js 允许你添加自定义的 JavaScript 代码，实现特定的行为或页面交互。\n\n\n# 三、settings.yaml\n\n\n# 1、网页标题\n\n设置网页标题。\n\ntitle: 山月的导航\n\n\n1\n\n\n\n# 2、语言\n\n设置想要的语言\n\nlanguage: zh-CN # 中文\n\n\n1\n\n\n当前支持的语言：: ca, de, en, es, fr, he, hr, hu, it, nb-NO, nl, pt, ru, sv, vi, zh-CN, zh-Hant 。\n\n你也可以使用 DateTime widget 这样的样式：en-AU, en-GB, etc。\n\n\n# 3、页眉样式\n\n目前有 4 个页眉样式选项。\n\nheaderStyle: underlined # 默认\n\n\n1\n\n\n\n\nheaderStyle: boxed\n\n\n1\n\n\n\n\nheaderStyle: clean\n\n\n1\n\n\n\n\nheaderStyle: boxedWidgets\n\n\n1\n\n\n\n\n\n# 4、图标\n\n如果你想使用自定义的网站图标而不是默认提供的图标：你可以提供一个完整的 URL 来指向选择的图像，或者提供相对于 /app/public 目录的本地图像的路径。\n\nfavicon: https://www.google.com/favicon.ico\n# 或\n# favicon: /icons/homepage.png\n\n\n1\n2\n3\n\n\n\n# 5、主题\n\n可以通过传递 theme 选项来配置固定的主题（并禁用主题切换器），如下所示：\n\ntheme: dark # or light\n\n\n1\n\n\n\n# 6、颜色调色板\n\n可以通过传递 color 选项来配置固定的颜色调色板（并禁用调色板切换器），如下所示：\n\ncolor: slate\n\n\n1\n\n\n> 支持的颜色有：板岩slate、灰色gray、锌色zinc、中性色neutral、石头色stone、琥珀色amber、黄色yellow、青柠色lime、绿色green、祖母绿emerald、鸭绿色teal、鸭绿色cyan、天空色sky、蓝色blue、靛蓝色indigo、紫色violet、紫色purple、紫红色fuchsia、粉红色pink、玫瑰色rose、红色red、白色white\n\n\n# 7、Homepage 版本\n\n默认情况下，发布版本显示在页面底部。要隐藏此项，可以使用隐藏版本设置：\n\nhideVersion: true\n\n\n1\n\n\n\n# 8、日志路径\n\n默认情况下，主页日志文件被写入 config/logs 子目录，你可以通过设置 logpath 自定义日志路径。\n\nlogpath: /logfile/path\n\n\n1\n\n\n\n# 9、布局\n\n如果你在 services.yaml 或 bookmarks.yaml 文件中有一个名为 Media 的组，您可以使用以下方式将 服务和书签 部分配置为基于 "column" 或 "row" 的布局，其中将"row" 可以水平排列服务或书签，而"column" 则可以垂直排列它们。\n\nlayout:\n  Media:\n    style: row\n    columns: 4\n\n\n1\n2\n3\n4\n\n\n这将产生以下布局：\n\n\n\n1）增加第五列\n\n默认情况下主页列样式最多为 4 列，但你可以通过添加以下内容来添加第五列：\n\nfiveColumns: true\n\n\n1\n\n\n2）可折叠\n\n默认情况下服务和书签的可折叠功能是处于启用状态的，可以通过添加以下内容禁用此功能。\n\ndisableCollapse: true\n\n\n1\n\n\n3）排序\n\n服务组和书签组可以按照需求混合排列，但必须使用不同的组名。如果没指定任何书签组，它们将显示在页面底部。\n\n> 如果为服务组和书签组使用相同的名称，可能会导致意外的行为，例如书签组被隐藏。\n\n组将根据布局块中的顺序进行排序，你也可以混合使用由 Docker 标签定义的组，例如：\n\nlayout:\n  - Auto-Discovered1:\n  - Configured1:\n  - Configured2:\n  - Auto-Discovered2:\n  - Configured3:\n      style: row\n      columns: 3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n4）标题\n\n可以通过将 header 设置为 false 来隐藏布局中每个部分的标题：\n\nlayout:\n  Section A:\n    header: false\n  Section B:\n    style: row\n    columns: 3\n    header: false\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n5）类别图标\n\n可以为类别（或菜单项）添加一个图标。\n\nHome Management & Info:\n  icon: /icons/video.png\nServer Tools:\n  icon: https://cdn-icons-png.flaticon.com/512/252/252035.png\n\n\n1\n2\n3\n4\n\n\n6）图标样式\n\n默认的图标样式是渐变效果，但你可以通过指定一个"flat"（扁平）样式来与主题相匹配。\n\n“flat”样式：前缀图标将呈现简洁、扁平化的外观，没有渐变效果。\n\niconStyle: theme # optional, 默认 gradient\n\n\n1\n\n\n7）选项卡\n\n只有在至少一个布局组上设置了选项卡字段时，选项卡才会生效。\n\n选项卡的排序基于布局块中的顺序。如果一个组没有指定选项卡（而其他组设置了选项卡），服务和书签将显示在所有选项卡上。\n\n可以通过在主页 URL 的末尾加上＃Group（小写并进行 URI 编码）来直接访问每个选项卡。\n\n例如，以下配置将创建四个选项卡：\n\nlayout:\n  ...\n  Bookmark Group on First Tab:\n    tab: First\n\n  First Service Group:\n    tab: First\n    style: row\n    columns: 4\n\n  Second Service Group:\n    tab: Second\n    columns: 4\n\n  Third Service Group:\n    tab: Third\n    style: row\n\n  Bookmark Group on Fourth Tab:\n    tab: Fourth\n\n  Service Group on every Tab:\n    style: row\n    columns: 4\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 10、背景图像\n\n> 注意： 由于 Next.js 静态站点服务器的限制，在添加新图像之后，要重启容器以更新静态文件，并使新图像对客户端可用。 创建绑定挂载（bind mount）时，避免将整个/app/public/目录进行绑定挂载。\n\n如果你想使用背景图片而不是纯色主题，那你需要提供你选择的图片的完整 URL。\n\nbackground: https://images.unsplash.com/photo-1502790671504-542ad42d5189?auto=format&fit=crop&w=2560&q=80\n\n\n1\n\n\n或者可以通过在 Docker Compose 文件中挂载一个保存图像的路径/app/public/images，然后将路径挂载到存放图片的本地目录。\n\nvolumes:\n  - /my/homepage/images:/app/public/images\n\n\n1\n2\n\n\n然后使用相对路径来指定本地图片。\n\nbackground: /images/background.png\n\n\n1\n\n\n背景透明度 & 滤镜\n\n您可以指定应用于背景图像的滤镜，包括模糊度、饱和度、亮度以及透明度与背景颜色的混合。前三个滤镜设置使用 Tailwind CSS 类，有关每个选项的说明，请参阅下面的注释。您不需要指定所有选项。\n\nbackground:\n  image: /images/background.png\n  blur: sm # 模糊度：sm, "", md, xl... see https://tailwindcss.com/docs/backdrop-blur\n  saturate: 50 # 饱和度：0, 50, 100... see https://tailwindcss.com/docs/backdrop-saturate\n  brightness: 50 # 亮度：0, 50, 75... see https://tailwindcss.com/docs/backdrop-brightness\n  opacity: 50 # 透明度： 0-100\n\n\n1\n2\n3\n4\n5\n6\n\n\n卡片背景模糊\n\n您可以为 服务卡片 service & 书签卡片 bookmark 应用模糊滤镜。请注意，此选项与背景模糊、饱和度和亮度滤镜不兼容。\n\ncardBlur: sm # sm, "", md, etc... see https://tailwindcss.com/docs/backdrop-blur\n\n\n1\n\n\n\n# 11、快速启动\n\n可以使用“快速启动”功能搜索服务、执行 web 搜索或打开 URL。要使用快速启动，只需在主页上输入即可（只要搜索小部件没有焦点）。\n\n\n\n快速启动功能有一些可选设置：\n\nquicklaunch:\n  searchDescriptions: true # （搜索描述）：控制搜索中是否包含项目描述。默认情况下，此选项处于禁用状态。当启用时，搜索结果会优先显示与项目名称匹配的项目，然后显示仅与描述匹配的项目。\n  hideInternetSearch: false # （隐藏网页搜索）：禁止自动将当前网页搜索（例如来自小部件）作为快速启动选项之一。默认情况下为false，启用该功能。\n  hideVisitURL: false # （隐藏访问链接）：禁用检测并提供打开URL的选项。默认情况下为false，启用该功能。\n\n\n1\n2\n3\n4\n\n\n\n# 12、Start URL\n\n可以通过自定义"start_url"来灵活控制可安装应用程序的初始加载行为，并确保用户在打开应用程序时可以直接进入所需的页面或功能。默认值为"/"（根目录）。\n\nstartUrl: https://custom.url\n\n\n1\n\n\n\n# 13、基本 URL 地址\n\n在某些代理配置中，可能需要设置文档的基本 URL。您可以通过提供一个 base 值来实现这一点，例如：\n\nbase: http://host.local/homepage\n\n\n1\n\n\n> URL 必须是完整的、绝对的 URL，否则浏览器将忽略它。\n\n\n# 14、链接目标\n\n链接目标用于指定链接的打开方式，以下是常用的链接目标选项：\n\n * _self：在同一选项卡中打开链接。\n * _blank：在新选项卡中打开链接。\n * _top：在新窗口中打开链接。\n\ntarget: _blank # 可选项有： _blank, _self, and _top\n\n\n1\n\n\n这也可以针对个别服务进行设置。请注意，在服务级别设置此项会覆盖 settings.json 中的任何设置。\n\n\n# 15、天气组件\n\n"providers"允许您定义共享的 API 提供程序选项和密钥。 目前，这使你可以私密的定义天气 API 密钥，并且还用于定义 Longhorn URL 和凭据的位置。\n\nproviders:\n  openweathermap: openweathermapapikey\n  weatherapi: weatherapiapikey\n  longhorn:\n    url: https://longhorn.example.com\n    username: admin\n    password: LonghornPassword\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n然后，可以在小部件配置中传递 API 提供商而不是直接传递 API 密钥。\n\n- weather:\n    latitude: 50.449684\n    longitude: 30.525026\n    provider: weatherapi\n\n\n1\n2\n3\n4\n\n\n\n# 16、显示 Docker 状态\n\n您可以在 settings.yaml 中显示所有扩展的 docker 统计信息：\n\nshowStats: true\n\n\n1\n\n\n或在每个服务（services.yaml 文件）中设置：\n\n- Example Service:\n    ...\n    showStats: true\n\n\n1\n2\n3\n\n\n如果您同时设置了两个，则按服务设置优先。\n\n\n# 17、状态样式\n\n您可以从以下样式中选择 docker 或 k8s 的状态和 ping 风格：: dot or basic\n\n * 默认情况下，Ping 响应时间以毫秒 (ms) 显示，而 Docker 或 Kubernetes 容器状态则显示为无值。\n * dot （点）：对于成功的 Ping 或正常的状态，会显示一个绿色的点。\n * basic（基础）：Ping 结果会显示为 "UP"（正常）或 "DOWN"（故障）。\n\nFor example:\n\nstatusStyle: "dot"\n\n\n1\n\n\n或在每个服务（services.yaml 文件）中设置：\n\n- Example Service:\n    ...\n    statusStyle: \'dot\'\n\n\n1\n2\n3\n\n\n如果您同时设置了两个，则按服务设置优先。\n\n\n# 18、隐藏小工具错误消息\n\n在 settings.yaml 中全局隐藏可见的 API 错误消息：\n\nhideErrors: true\n\n\n1\n\n\n或在每个服务部件（services.yaml 文件）中设置：\n\n- Example Service:\n    ...\n    widget:\n    ...\n        hideErrors: true\n\n\n1\n2\n3\n4\n5\n\n\n如果其中一个值设置为 true，则错误消息将被隐藏。\n\n\n# 四、services.yaml\n\n服务是在 Services.yaml 文件中配置的。您可以拥有任意数量的分组，并且每个分组可以包含任意数量的服务。\n\n\n# 1、分组\n\n分组被定义为顶级数组项。\n\n- Group A:\n    - Service A:\n        href: http://localhost/\n\n- Group B:\n    - Service B:\n        href: http://localhost/\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n\n# 2、服务\n\n服务被定义为分组上的数组条目\n\n- Group A:\n    - Service A:\n        href: http://localhost/\n\n    - Service B:\n        href: http://localhost/\n\n    - Service C:\n        href: http://localhost/\n\n- Group B:\n    - Service D:\n        href: http://localhost/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n\n\n# 3、描述\n\n服务可以有描述\n\n- Group A:\n    - Service A:\n        href: http://localhost/\n        description: This is my service\n\n- Group B:\n    - Service B:\n        href: http://localhost/\n        description: This is another service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n\n\n# 4、图标\n\n * 服务可能在Dashboard Icons中匹配有图标，你可以通过传递图标的名称来匹配，如果使用 png 版本可以带也可以不带.png ，svg 版本的得带.svg 。\n\n * 可以使用mdi-XX来匹配使用 Material Design Icons 中的图标 或 使用si-XX使用Simple Icons中的图标。 可以通过添加十六进制颜色代码作为后缀来自定义颜色，例如 mdi XX-#f0d453 或 si XX-#a712a2。\n\n * 可以使用远程图标，请使用绝对 URL（例如 https://...）。\n\n * 可以使用本地图标，首先创建一个 Docker 目录 挂载到 /app/public/icons，然后将图标引用为 /icons/myicon.png。当添加新图标时，您需要重新启动容器。\n\n- Group A:\n    - Sonarr:\n        icon: sonarr.png\n        href: http://sonarr.host/\n        description: Series management\n\n- Group B:\n    - Radarr:\n        icon: radarr.png\n        href: http://radarr.host/\n        description: Movie management\n\n- Group C:\n    - Service:\n        icon: mdi-flask-outline\n        href: http://service.host/\n        description: My cool service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n\n\n# 5、Ping\n\n服务可能有一个可选的 ping 属性，允许你监视你选择的端点的可用性并显示响应时间。你不需要将 ping URL 设置为 href URL。\n\n注意：ping 功能通过向 URL 发送一个 HTTP HEAD 请求来工作，如果失败，则会回退到 GET 请求。例如，如果 URL 需要身份验证或在 Authelia 后面等，则 ping 功能不会执行登录操作。在使用反向代理和/或身份验证的情况下，通常需要使用“内部”URL 来正确显示 ping 功能的状态。\n\n- Group A:\n    - Sonarr:\n        icon: sonarr.png\n        href: http://sonarr.host/\n        ping: http://sonarr.host/\n\n- Group B:\n    - Radarr:\n        icon: radarr.png\n        href: http://radarr.host/\n        ping: http://some.other.host/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n你还可以通过使用 statusStyle 属性为 ping 指示器应用不同的样式，详见 settings.\n\n\n# 6、Docker 集成\n\n服务可以连接到 Docker 容器，可以在本地机器上运行，也可以在远程机器上运行。\n\n- Group A:\n    - Service A:\n        href: http://localhost/\n        description: This is my service\n        server: my-server\n        container: my-container\n\n- Group B:\n    - Service B:\n        href: http://localhost/\n        description: This is another service\n        server: other-server\n        container: other-container\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n在启用了 Docker 集成的服务中，单击状态标签将展开容器统计信息，您可以在那里查看 CPU、内存和网络活动。\n\n注意：这也可以通过showStats进行控制。有关更多信息，请参阅show docker stats。\n\n\n# 7、服务集成\n\n服务还可以附带一个服务小部件（或集成），该小部件独立于 Docker 集成工作。\n\n您可以在 Service Widgets 页面上找到每个支持的集成的信息和配置。\n\n这是一个 Radarr 和 Sonarr 服务的示例，以及它们各自的集成。\n\n- Group A:\n    - Sonarr:\n        icon: sonarr.png\n        href: http://sonarr.host/\n        description: Series management\n        widget:\n          type: sonarr\n          url: http://sonarr.host\n          key: apikeyapikeyapikeyapikeyapikey\n\n- Group B:\n    - Radarr:\n        icon: radarr.png\n        href: http://radarr.host/\n        description: Movie management\n        widget:\n          type: radarr\n          url: http://radarr.host\n          key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n\n\n# 8、服务小部件\n\n除非另有说明，否则 URL 不应以/或其他 API 路径结尾。每个小部件都会自行处理路径。\n\n每个服务都可以附加一个小部件（通常与服务类型相匹配，但不强制要求）。\n\n除了服务的 href 之外，您还可以指定打开该链接的目标位置。有关详细信息，请参阅 Link Target 。\n\n以 Emby 为例，以下是如何附加 Emby 服务小部件的示例。\n\n- Emby:\n    icon: emby.png\n    href: http://emby.host.or.ip/\n    description: Movies & TV Shows\n    widget:\n      type: emby\n      url: http://emby.host.or.ip\n      key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n字段可见性\n\n每个小部件可以选择性地提供一个字段列表，指定哪些字段应该通过 fields 小部件属性可见。如果未指定字段，则将显示所有字段。fields 属性必须是有效的 YAML 字符串数组。以下是 Sonarr 的示例条目，仅显示了几个字段。\n\n在任何情况下，如果没有指定 fields 属性，小部件将正常工作并显示所有字段。\n\n- Sonarr:\n    icon: sonarr.png\n    href: http://sonarr.host.or.ip\n    widget:\n      type: sonarr\n      fields: ["wanted", "queued"]\n      url: http://sonarr.host.or.ip\n      key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 五、widgets.yaml\n\nHomepage 有两种类型的小部件：info（信息）和 service（服务）。下面我们将介绍每种类型以及如何配置它们。\n\n\n# 1、服务小部件\n\n服务小部件用于显示服务（通常是 Web 服务或 API）的状态。服务（及其小部件）在services.yml文件中定义。以下是一个示例：\n\n- Plex:\n    icon: plex.png\n    href: https://plex.my.host\n    description: Watch movies and TV shows.\n    server: localhost\n    container: plex\n    widget:\n      type: tautulli\n      url: http://172.16.1.1:8181\n      key: aabbccddeeffgghhiijjkkllmmnnoo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 2、信息小部件\n\n信息小部件用于在标题中显示信息，通常是关于您的系统或环境的信息。信息小部件在widgets.yml文件中定义。以下是一个示例：\n\n- openmeteo:\n    label: Current\n    latitude: 36.66\n    longitude: -117.51\n    cache: 5\n\n\n1\n2\n3\n4\n5\n\n\n\n# 六、bookmarks.yaml\n\n书签功能与服务功能在分组和列表的工作方式上非常相似，只是它们更简单、更小，并且除了作为链接之外没有其他附加功能。\n\n * abbr 最好为两个字母，但不是强制性的。\n * 也可以像服务图标的选项那样为书签使用图标。如果同时提供图标和缩写，图标将优先显示。\n * 默认情况下，描述将使用链接的主机名，但您可以使用自定义描述来覆盖它。\n\n- Developer:\n    - Github:\n        - abbr: GH\n          href: https://github.com/\n\n- Social:\n    - Reddit:\n        - icon: reddit.png\n          href: https://reddit.com/\n          description: The front page of the internet\n\n- Entertainment:\n    - YouTube:\n        - abbr: YT\n          href: https://youtube.com/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\n\n# 七、常用服务小部件\n\n\n# 1、qBittorrent\n\n使用与 web 登录相同的用户名和密码。\n\n允许的字段：[“leech 下载中”、“download 下载”、“seed 种子”、“upload 上传”]。\n\nwidget:\n  type: qbittorrent\n  url: http://qbittorrent.host.or.ip\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2、Transmission\n\n使用与 web 登录相同的用户名和密码。\n\n允许的字段：[“leech 下载中”、“download 下载”、“seed 种子”、“upload 上传”]。\n\nwidget:\n  type: transmission\n  url: http://transmission.host.or.ip\n  username: username\n  password: password\n  rpcUrl: /transmission/ # Optional. Matches the value of "rpc-url" in your Transmission\'s settings.json file\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 3、Emby\n\n您可以在“设置 Settings”>“高级 Advanced”>“API 密钥 Api Keys”中从 Emby 内部创建 API 密钥\n\n从 v0.6.11 开始，该小部件支持字段[“电影 movies”、“系列 series”、“剧集 episodes”、“歌曲 songs”]，这些块在默认情况下被禁用，但可以通过enableBlocks选项启用。“正在播放 ”功能（默认情况下启用）可以通过enableNowPlaying选项禁用。\n\nwidget:\n  type: emby\n  url: http://emby.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enableBlocks: true # optional, defaults to false\n  enableNowPlaying: true # optional, defaults to true\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 4、Jellyfin\n\n您可以在“设置 Settings”>“高级 Advanced”>“API 密钥 Api Keys”中从 Jellyfin 内部创建 API 密钥\n\n从 v0.6.11 开始，该小部件支持字段[“电影 movies”、“系列 series”、“剧集 episodes”、“歌曲 songs”]，这些块在默认情况下被禁用，但可以通过enableBlocks选项启用。“正在播放 ”功能（默认情况下启用）可以通过enableNowPlaying选项禁用。\n\nwidget:\n  type: jellyfin\n  url: http://jellyfin.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enableBlocks: true # optional, defaults to false\n  enableNowPlaying: true # optional, defaults to true\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 5、Plex\n\nPlex 的核心 API 在某种程度上有所限制，但支持有关库大小和活动流数量的基本信息。要获取有关活动流的更详细信息，请查看 Plex Tautulli widget.\n\n支持的字段: ["streams", "albums", "movies", "tv"].\n\nwidget:\n  type: plex\n  url: http://plex.host.or.ip:32400\n  key: mytokenhere # see https://www.plexopedia.com/plex-media-server/general/plex-token/\n\n\n1\n2\n3\n4\n\n\n\n# 6、Jackett\n\nJackett 在使用小部件时不能使用任何身份验证。\n\n支持的字段: ["configured", "errored"].\n\nwidget:\n  type: jackett\n  url: http://jackett.host.or.ip\n\n\n1\n2\n3\n\n\n\n# 7、Navidrome\n\ntoken 的值：由密码和 salt 的值组成的字符串的 md5 值\n\n允许的字段：此小部件没有可配置的字段。\n\nwidget:\n  type: navidrome\n  url: http://navidrome.host.or.ip:port\n  user: username\n  token: token #md5(password + salt)\n  salt: randomsalt\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 8、Audiobookshelf\n\n通过以管理员身份登录至 Audiobookshelf 网页应用程序，然后在 设置-用户 页面中找到你的账户并点击，就可以看到 API 令牌了。\n\n允许的字段： ["podcasts", "podcastsDuration", "books", "booksDuration"]。\n\n * podcasts: 表示播客节目。\n * podcastsDuration: 表示播客节目的持续时间。\n * books: 表示有声书。\n * booksDuration: 表示有声书的持续时间。\n\nwidget:\n  type: audiobookshelf\n  url: http://audiobookshelf.host.or.ip:port\n  key: audiobookshelflapikey\n\n\n1\n2\n3\n4\n\n\n\n# 9、Nginx Proxy Manager\n\n使用用于访问 web UI 的相同管理员用户名和密码登录。\n\n允许的字段：[“enabled 已启用”、“disabled 已禁用”、“total 总计”]。\n\nwidget:\n  type: npm\n  url: http://npm.host.or.ip\n  username: admin_username\n  password: admin_password\n\n\n1\n2\n3\n4\n5\n\n\n\n# 10、Tailscale\n\n您需要从 Tailscale 仪表板的密钥页面生成一个 API 访问令牌。\n\n要查找您的设备 ID，请转到machine overview page，然后选择您的机器。在“机器详情 Machine Details”部分，复制您的ID。它将以CNTRL结尾。\n\n允许的字段有: ["address", "last_seen", "expires"].\n\nwidget:\n  type: tailscale\n  deviceid: deviceid\n  key: tailscalekey\n\n\n1\n2\n3\n4\n\n\n\n# 11、Home Assistant\n\n您需要为现有的 Home Assistant 用户在其个人资料中生成一个长期有效的访问令牌。\n\n允许的字段有：["people_home", "lights_on", "switches_on"]。\n\n----------------------------------------\n\n最多可以通过自定义属性查询四个自定义状态和/或模板，就像下面的示例一样。只要定义了 fields 属性，custom 属性将不起作用。\n\n * state将查询指定entity_id的状态\n   * 状态标签和值可以由用户定义，并且可以引用花括号中的实体属性\n   * 如果未定义状态标签，将默认为"{attributes.friendly_name}"\n   * 如果未定义状态值，将默认为"{state} {attributes.unit_of_measurement}"\n * template将查询指定的模板，请参阅Home Assistant Templating\n   * 如果未定义模板标签，将为空\n\nwidget:\n  type: homeassistant\n  url: http://homeassistant.host.or.ip:port\n  key: access_token\n  custom:\n    - state: sensor.total_power\n    - state: sensor.total_energy_today\n      label: energy today\n    - template: "{{ states.switch|selectattr(\'state\',\'equalto\',\'on\')|list|length }}"\n      label: switches on\n    - state: weather.forecast_home\n      label: wind speed\n      value: "{attributes.wind_speed} {attributes.wind_speed_unit}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 八、信息小部件\n\n\n# 1、Logo\n\n可以显示 homepage 的 logo。\n\n- logo:\n    icon: /icons/homepage.png # 也可使用url来指向图像\n\n\n1\n2\n\n\n\n# 2、Resources 资源信息\n\n您可以选择包含所有或部分可用资源。如果您不想看到某个资源，只需将其设置为 false。\n\n磁盘路径是由 df（Mounted On）报告的路径，或者是磁盘的装载点。\n\nCPU 和内存资源信息是容器的使用情况，而glances 则显示安装它的主机的统计信息。\n\n注意：不幸的是，用于获取 CPU 温度的软件包（systeminformation）与某些设置不兼容，并且不会报告任何 CPU 温度值。\n\n任何要访问的磁盘都必须作为卷装载到容器中。\n\n- resources:\n    cpu: true\n    memory: true\n    disk: /disk/mount/path\n    cputemp: true\n    uptime: true\n    units: imperial # only used by cpu temp\n    refresh: 3000 # optional, in ms\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n您还可以通过label 选项进行分组，将资源分组到组名称下。\n\n- resources:\n    label: System\n    cpu: true\n    memory: true\n\n- resources:\n    label: Storage\n    disk: /mnt/storage\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n产生的效果：\n\n\n\n如果您有多个磁盘，并希望将它们组合在同一个标签下，您可以传递一个路径数组来实现。\n\n- resources:\n    label: Storage\n    disk:\n      - /mnt/storage\n      - /mnt/backup\n      - /mnt/media\n\n\n1\n2\n3\n4\n5\n6\n\n\n产生的效果：\n\n\n\n您还可以提供一个可选的expanded属性，将其设置为 true 可以显示有关资源的其他详细信息。当未提供时，默认情况下expanded属性设置为 false。\n\n- resources:\n    label: Array Disks\n    expanded: true\n    disk:\n      - /disk1\n      - /disk2\n      - /disk3\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n\n# 3、Date & Time 日期&时间\n\n这可以显示日期 和/或 时间，并可以使用国际日期时间格式进行详细配置。\n\n格式设置是与区域设置相关的，并以您期望的区域格式呈现日期，例如对于英文区域设置，日期格式为 9/16/22 下午 3:03，而对于德文区域设置，日期格式为 16.09.22 下午 15:03。您还可以使用 locale 选项为 datetime 小部件指定一个特定的区域设置（见下文）\n\n- datetime:\n    text_size: xl\n    format:\n      timeStyle: short\n\n\n1\n2\n3\n4\n\n\n传递给 format 的任何选项都直接传递给国际日期时间格式，请参考 MDN 文档获取所有可用选项。\n\n有效的文本大小有 4xl, 3xl, 2xl, xl, md, sm, xs。\n\n以下是一些例子：\n\n# 13:37\nformat:\n  timeStyle: short\n  hourCycle: h23\n\n\n1\n2\n3\n4\n\n\n# 1:37 PM\nformat:\n  timeStyle: short\n  hour12: true\n\n\n1\n2\n3\n4\n\n\n# 1/23/22, 1:37 PM\nformat:\n  dateStyle: short\n  timeStyle: short\n  hour12: true\n\n\n1\n2\n3\n4\n5\n\n\n# 4 januari 2023 om 13:51:25 PST\nlocale: nl\nformat:\n  dateStyle: long\n  timeStyle: long\n\n\n1\n2\n3\n4\n5\n\n\n\n# 4、Greeting 欢迎词\n\n可以显示简单的文本，配置如下：\n\n- greeting:\n    text_size: xl\n    text: Greeting Text\n\n\n1\n2\n3\n\n\n有效的文本大小有：4xl, 3xl, 2xl, xl, md, sm, xs.\n\n\n# 5、Search 搜索栏\n\n您可以在顶部小部件区域添加一个搜索栏，该搜索栏可以使用 Google 谷歌、Duckduckgo、Bing 必应、Baidu 百度、Brave 或任何其他支持 基本的?q= 搜索查询参数的 自定义provider 提供程序进行搜索。\n\n- search:\n    provider: google # google, duckduckgo, bing, baidu, brave or custom\n    focus: true # Optional, will set focus to the search bar on page load\n    target: _blank # One of _self, _blank, _parent or _top\n\n\n1\n2\n3\n4\n\n\n或对于自定义搜索:\n\n- search:\n    provider: custom\n    url: https://lougle.com/?q=\n    target: _blank\n\n\n1\n2\n3\n4\n\n\n还可以通过下拉列表支持多个provider 提供程序（不包括自定义）：\n\n- search:\n    provider: [brave, google, duckduckgo]\n\n\n1\n2\n\n\n\n# 6、天气组件\n\n# 1、Open-Meteo 天气\n\n经纬度信息打开Open-Meteo 官网，搜索城市获取。\n\n\n\n然后在 widgets.yaml 文件中添加：\n\n- openmeteo:\n    label: 湘潭 # 可选，标识提供商\n    latitude: 28.11 # 纬度\n    longitude: 112.99 # 经度\n    timezone: Asia/Shanghai # 可选，时区属性，“Asia/Shanghai”表示位于上海时区\n    units: metric # 单位属性，可以选择“metric”（公制）或“imperial”（英制）\n    cache: 5 # 缓存API响应的时间，单位为分钟\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n如果不传递latitude纬度和longitude经度将使用您的当前位置。\n\n# 2、OpenWeatherMap\n\n所需的仅是免费套餐的"One Call API"，您需要订阅并获取您的 API 密钥。\n\n- openweathermap:\n    label: Kyiv #optional\n    latitude: 50.449684\n    longitude: 30.525026\n    units: metric # or imperial\n    provider: openweathermap\n    apiKey: youropenweathermapkey # required only if not using provider, this reveals api key in requests\n    cache: 5 # Time in minutes to cache API responses, to stay within limits\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n您可以选择不传递latitude纬度和longitude经度经度，小部件将使用您的当前位置（需要安全上下文，例如 HTTPS）。\n\n# 3、Weather API\n\n注意：由于新用户不再提供免费的 Weather API 套餐，此小部件被视为"不推荐使用"。请参考 openmeteo 或 openweathermap 小部件以获取替代方案。\n\n免费套餐就足够了，它有所需的全部内容，不过您需要注册并获取 API 密钥。\n\n- weatherapi:\n    label: Kyiv # optional\n    latitude: 50.449684\n    longitude: 30.525026\n    units: metric # or imperial\n    apiKey: yourweatherapikey\n    cache: 5 # Time in minutes to cache API responses, to stay within limits\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n您可以选择不传递latitude纬度和longitude经度经度，小部件将使用您的当前位置（需要安全上下文，例如 HTTPS）。\n\n\n# 7、Glances\n\n(可以查找Glances服务小部件)\n\nGlances 小部件可以监视主机或另一台机器的资源（CPU、内存、存储、温度和正常运行时间），并且可以与resources小部件匹配。您可以通过添加另一个配置块来创建多个实例。cputemp、uptime & disk 状态需要单独的 API 调用，因此默认情况下不启用。要启用 API，Glances 需要在“Web 服务器”模式下运行，请参阅Glances 文档。\n\n- glances:\n    url: http://host.or.ip:port\n    username: user # optional if auth enabled in Glances\n    password: pass # optional if auth enabled in Glances\n    cpu: true # optional, enabled by default, disable by setting to false\n    mem: true # optional, enabled by default, disable by setting to false\n    cputemp: true # disabled by default\n    uptime: true # disabled by default\n    disk: / # disabled by default, use mount point of disk(s) in glances. Can also be a list (see below)\n    expanded: true # show the expanded view\n    label: MyMachine # optional\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n可以通过以下方式指定多个磁盘：\n\ndisk:\n  - /\n  - /boot\n  ...\n\n\n1\n2\n3\n4\n\n\n\n# 8、Kubernetes\n\n这与 Resources 小部件非常相似，但提供了有关 Kubernetes 集群的资源信息。\n\n它提供 节点级别 和/或 集群级别 的 CPU 和内存使用情况。\n\n- kubernetes:\n    cluster:\n      # Shows cluster-wide statistics\n      show: true\n      # Shows the aggregate CPU stats\n      cpu: true\n      # Shows the aggregate memory stats\n      memory: true\n      # Shows a custom label\n      showLabel: true\n      label: "cluster"\n    nodes:\n      # Shows node-specific statistics\n      show: true\n      # Shows the CPU for each node\n      cpu: true\n      # Shows the memory for each node\n      memory: true\n      # Shows the label, which is always the node name\n      showLabel: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 9、Longhorn\n\nLonghorn 小部件从 Kubernetes 上的 Longhorn 存储驱动程序中获取存储利用率指标。它的设计与 Resource 小部件的磁盘表示类似。\n\n确切的指标应该与 Longhorn 仪表板上看到的非常相似。\n\n它可以显示聚合指标 和/或 各个节点的指标。\n\n- longhorn:\n    # Show the expanded view\n    expanded: true\n    # Shows a node representing the aggregate values\n    total: true\n    # Shows the node names as labels\n    labels: true\n    # Show the nodes\n    nodes: true\n    # An explicit list of nodes to show. All are shown by default if "nodes" is true\n    include:\n      - node1\n      - node2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\nLonghorn URL 和凭据存储在settings.yaml的providers部分。\n\n\n# 10、Unifi Controller\n\n(查找Unifi 控制服务小部件)\n\n您可以通过 Unifi（网络）控制器显示常规连接状态。进行身份验证时，您需要使用一个至少具有读取权限的本地帐户。\n\n如果没有提供可选的"site"参数，该小部件将使用控制器的默认站点。\n\n注意：如果您输入的凭据不正确，并收到“API 错误”，则可能需要重新创建容器以清除缓存。\n\n- unifi_console:\n    url: https://unifi.host.or.ip:port\n    username: user\n    password: pass\n    site: Site Name # optional\n\n\n1\n2\n3\n4\n5\n\n\n\n# 九、docker.yaml\n\nDocker 实例的配置位于 docker.yaml 文件中。支持使用 IP:PORT 和 Socket 进行连接。\n\n对于 IP:PORT，只需确保你的 Docker 实例已配置为接受通过 HTTP API 的流量。\n\nmy-remote-docker:\n  host: 192.168.0.101\n  port: 2375\n\n\n1\n2\n3\n\n\n\n# 使用 Docker TLS\n\n由于 Docker 支持使用 TLS 和客户端证书身份验证进行连接，因此在连接到 HTTP API 时可以包含 TLS 详细信息。有关设置 Docker 以接受 TLS 连接以及生成密钥和证书的更多详细信息，请参阅Docker 文档。文件条目是相对于 config 目录（docker.yaml文件的位置）的。\n\nmy-remote-docker:\n  host: 192.168.0.101\n  port: 275\n  tls:\n    keyFile: tls/key.pem\n    caFile: tls/ca.pem\n    certFile: tls/cert.pem\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 使用 Docker Socket Proxy\n\n由于直接暴露 docker socket 存在安全风险，您可以使用docker-socket-proxy 容器在更受限制和更安全的 API 上暴露 docker socket。\n\n以下是一个示例的 docker-compose 文件，它将公开 docker socket，然后从 homepage 容器连接到它：\n\ndockerproxy:\n  image: ghcr.io/tecnativa/docker-socket-proxy:latest\n  container_name: dockerproxy\n  environment:\n    - CONTAINERS=1 # Allow access to viewing containers\n    - SERVICES=1 # Allow access to viewing services (necessary when using Docker Swarm)\n    - TASKS=1 # Allow access to viewing tasks (necessary when using Docker Swarm)\n    - POST=0 # Disallow any POST operations (effectively read-only)\n  ports:\n    - 127.0.0.1:2375:2375\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only\n  restart: unless-stopped\n\nhomepage:\n  image: ghcr.io/gethomepage/02.homepage导航:latest\n  container_name: 02.homepage导航\n  volumes:\n    - /path/to/config:/app/config\n  ports:\n    - 3000:3000\n  restart: unless-stopped\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n然后，在docker.yaml 设置文件中，您可以这样配置 docker 实例：\n\nmy-docker:\n  host: dockerproxy\n  port: 2375\n\n\n1\n2\n3\n\n\n\n# 直接使用 Socket\n\n如果你希望直接使用 Socket，首先得确保将本地 Socket 传递给 Docker 容器。\n\n> 为了直接使用 socket，homepage 页必须以 root 身份运行\n\nhomepage:\n  image: ghcr.io/gethomepage/02.homepage导航:latest\n  container_name: 02.homepage导航\n  volumes:\n    - /path/to/config:/app/config\n    - /var/run/docker.sock:/var/run/docker.sock # pass local proxy\n  ports:\n    - 3000:3000\n  restart: unless-stopped\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n如果您使用的是 docker run命令，则应该使用 -v /var/run/docker.sock:/var/run/docker.sock。\n\n然后，在您的 docker.yaml配置文件中，可以进行如下配置来设置 Docker 实例：\n\nmy-docker:\n  socket: /var/run/docker.sock\n\n\n1\n2\n\n\n\n# Services\n\n在配置好 Docker 实例后，您可以将其应用到您的服务中，以显示统计信息和状态报告。\n\n以下是在您希望连接到 Docker 的服务内部的示例配置：\n\n- Emby:\n  icon: emby.png\n  href: "http://emby.home/"\n  description: Media server\n  server: my-docker # The docker server that was configured\n  container: emby # The name of the container you\'d like to connect\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 自动服务发现\n\nHomepage 可以通过附加适当标签的容器实现自动服务发现功能。所有配置选项都可以使用点符号应用，以 homepage 开头。\n\n下面是上面显示的相同服务条目的示例，使用 Docker 标签表示。\n\nservices:\n  emby:\n    image: lscr.io/linuxserver/emby:latest\n    container_name: emby\n    ports:\n      - 8096:8096\n    restart: unless-stopped\n    labels:\n      - 02.homepage导航.group=Media\n      - 02.homepage导航.name=Emby\n      - 02.homepage导航.icon=emby.png\n      - 02.homepage导航.href=http://emby.home/\n      - 02.homepage导航.description=Media server\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n当您的 Docker 实例配置正确时，该服务将被自动发现并添加到 Homepage 中。您不需要指定 server或container的值，因为它们将被自动推断。\n\n使用 Docker Swarm 时，可以使用deploy/labels来配置 Homepage.\n\n\n# 小部件 Widgets\n\n除了标准的服务条目外，您还可以使用点符号配置小部件（widgets）。\n\nlabels:\n  - 02.homepage导航.group=Media\n  - 02.homepage导航.name=Emby\n  - 02.homepage导航.icon=emby.png\n  - 02.homepage导航.href=http://emby.home/\n  - 02.homepage导航.description=Media server\n  - 02.homepage导航.widget.type=emby\n  - 02.homepage导航.widget.url=http://emby.home\n  - 02.homepage导航.widget.key=yourembyapikeyhere\n  - 02.homepage导航.widget.fields=["field1","field2"] # optional\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Docker Swarm\n\n支持 Docker Swarm ，并且使用相同的server和container表示法指定 Docker 服务。。要启用 swarm 支持，您需要在您的 docker.yaml 文件中包含一个 Swarm 设置，例如：\n\nmy-docker:\n  socket: /var/run/docker.sock\n  swarm: true\n\n\n1\n2\n3\n\n\n为了使 自动服务发现 能够发现所有服务，得将 Homepage 部署在一个管理节点上。在您的 stack.yaml 配置中，可以将部署要求设置为主节点（manager node），例如：\n\n....\n  deploy:\n    placement:\n      constraints:\n        - node.role == manager\n...\n\n\n1\n2\n3\n4\n5\n6\n\n\n为了在 Docker Swarm 中检测到每个服务，需要使用服务标签（service labels），而不是容器标签（container labels）。请将 Homepage 的标签配置如下：\n\n....\n  deploy:\n    labels:\n      - 02.homepage导航.icon=foobar\n...\n\n\n1\n2\n3\n4\n5\n\n\n\n# 排序 Ordering\n\n从 v0.6.4 版本开始，发现的服务可以包括一个可选的权重字段来确定排序顺序，具体规则如下：\n\n * 发现的服务的默认权重为 0。\n * 配置的服务的默认权重是它们在其组内的索引值乘以 100，即 (索引 + 1) * 100。\n * 如果两个项目具有相同的权重值，则它们将按名称排序。\n\n从 v0.6.4 开始，发现的服务可以包括一个可选的权重字段来确定排序，以便：\n\n发现的服务的默认权重为 0\n\n配置服务的默认权重是其组内的索引，按 100 缩放，即（索引+1）*100\n\n如果两个项目具有相同的权重值，则它们将按 nam 排序\n\n\n# 显示统计信息\n\n您可以通过单击状态指示器来显示 docker 统计信息，也可以通过以下方式对每个服务进行控制：\n\n- Example Service:\n  ...\n  showStats: true\n\n\n1\n2\n3\n\n\n可以参阅show docker stats。\n\n\n# 十、custom-css-js\n\n从 v0.6.30 版本开始，Homepage 支持添加自定义 CSS 和 JavaScript。请注意自行承担风险。\n\n要添加自定义 CSS，只需编辑 配置 config 目录下的 custom.css 文件，同样地，要添加自定义 JavaScript，您需要编辑 custom.js文件。然后，您可以使用各种类/ID 来定制 Homepage 中的元素。\n\n您还可以使用自定义 css 或 javascript 为服务或书签设置特定的id，例如：\n\nService:\n    id: myserviceid\n    icon: icon.png\n    ...\n\n\n1\n2\n3\n4\n\n\n\n# 十一、kubernetes\n\nKubernetes 连接具有以下要求：\n\n * Kubernetes 版本 1.19+\n * Metrics 服务\n * Ingress 控制器\n\nKubernetes 连接是在 Kubernetes.yaml 文件中配置的。有三种模式可供选择：\n\n * disabled - 禁用 Kubernetes 连接功能\n * default - 使用默认的 kubeconfig 配置文件解析 c- luster - 在集群中使用服务账户进行连接\n\nmode: default\n\n\n1\n\n\n\n# 服务 Services\n\n一旦配置了 Kubernetes 连接，就可以配置各个服务来获取统计信息。当前仅支持 CPU 和内存。\n\n在你想要连接到 pod 的服务内部：\n\n- Emby:\n  icon: emby.png\n  href: "http://emby.home/"\n  description: Media server\n  namespace: media # The kubernetes namespace the app resides in\n  app: emby # The name of the deployed app\n\n\n1\n2\n3\n4\n5\n6\n\n\napp字段用于创建标签选择器，例如，在本例中，它将匹配具有标签 app.kubernetes.io/name=emby 的 Pod。 然而在复杂或非典型的应用部署中，这可能是不够的。\n\n在这种情况下，可以使用 pod-selector 字段，任何字段选择器都可以与它一起使用，因此它可以提供一些非常强大的选择能力。\n\n例如，可以利用它将多个底层部署归类到一个应用程序下，从而查看高级别的聚合信息：\n\n- Element Chat:\n    icon: matrix-light.png\n    href: https://chat.example.com\n    description: Matrix Synapse Powered Chat\n    app: matrix-element\n    namespace: comms\n    pod-selector: >-\n      app.kubernetes.io/instance in (\n          matrix-element,\n          matrix-media-repo,\n          matrix-media-repo-postgresql,\n          matrix-synapse\n      )\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n> 将 pod-selector 设置为空字符串并不会将其禁用，实际上它将选择命名空间中的所有 Pod。这是一种捕获单个命名空间中复杂应用（如 Longhorn）的资源使用情况的有用方法。\n\n\n# 自动服务发现\n\nHomepage 功能支持通过 Ingress 注解进行自动服务发现。所有配置选项都可以使用典型的注解语法来应用，以gethomepage.dev/开头。\n\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: emby\n  annotations:\n    gethomepage.dev/enabled: "true"\n    gethomepage.dev/description: Media Server\n    gethomepage.dev/group: Media\n    gethomepage.dev/icon: emby.png\n    gethomepage.dev/name: Emby\n    gethomepage.dev/widget.type: "emby"\n    gethomepage.dev/widget.url: "https://emby.example.com"\n    gethomepage.dev/pod-selector: ""\n    gethomepage.dev/weight: 10 # optional\nspec:\n  rules:\n    - host: emby.example.com\n      http:\n        paths:\n          - backend:\n              service:\n                name: emby\n                port:\n                  number: 8080\n            path: /\n            pathType: Prefix\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n当 Kubernetes 集群连接配置正确后，此服务将自动被发现并添加到您的主页中。您不需要指定namespace或app，因为它们将自动推断出来。\n\n# Traefik IngressRoute 支持\n\nHomepage 还可以读取使用 Traefik IngressRoute 自定义资源定义定义的 Ingress。由于 Traefik 路由规则的复杂性，需要设置gethomepage.dev/href注解。\n\napiVersion: traefik.io/v1alpha1\nkind: IngressRoute\nmetadata:\n  name: emby\n  annotations:\n    gethomepage.dev/href: "https://emby.example.com"\n    gethomepage.dev/enabled: "true"\n    gethomepage.dev/description: Media Server\n    gethomepage.dev/group: Media\n    gethomepage.dev/icon: emby.png\n    gethomepage.dev/name: Emby\n    gethomepage.dev/widget.type: "emby"\n    gethomepage.dev/widget.url: "https://emby.example.com"\n    gethomepage.dev/pod-selector: ""\n    gethomepage.dev/weight: 10 # optional\nspec:\n  entryPoints:\n    - websecure\n  routes:\n    - kind: Rule\n      match: Host(`emby.example.com`)\n      services:\n        - kind: Service\n          name: emby\n          namespace: emby\n          port: 8080\n          scheme: http\n          strategy: RoundRobin\n          weight: 10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n如果 href 属性不存在，Homepage 将忽略该特定的 IngressRoute。\n\n\n# 注意事项\n\n与 Docker 服务发现类似，目前没有严格的顺序来发现服务，并且发现的服务将显示在services.yaml中指定的服务之上。\n\n\n# 十二、其它服务小部件\n\n\n# Adguard Home\n\n用户名和密码与登录 web 界面时使用的用户名和密码相同。\n\n允许的字段: ["queries", "blocked", "filtered", "latency"].\n\nwidget:\n  type: adguard\n  url: http://adguard.host.or.ip\n  username: admin\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# Atsumeru\n\nDefine same username and password that is used for login from web or supported apps\n\nAllowed fields: ["series", "archives", "chapters", "categories"].\n\nwidget:\n  type: atsumeru\n  url: http://atsumeru.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# Authentik\n\nThis widget reads the number of active users in the system, as well as logins for the last 24 hours.\n\nYou will need to generate an API token for an existing user. To do so follow these steps:\n\n 1. Navigate to the Authentik Admin Portal\n 2. Expand Directory, the click Tokens & App passwords\n 3. Click the Create button\n 4. Fill out the dialog making sure to set Intent to API Token\n 5. Click the Create button on the dialog\n 6. Click the copy button on the far right of the newly created API Token\n\nAllowed fields: ["users", "loginsLast24H", "failedLoginsLast24H"].\n\nwidget:\n  type: authentik\n  url: http://authentik.host.or.ip:22070\n  key: api_token\n\n\n1\n2\n3\n4\n\n\n\n# Autobrr\n\nFind your API key under Settings > API Keys.\n\nAllowed fields: ["approvedPushes", "rejectedPushes", "filters", "indexers"].\n\nwidget:\n  type: autobrr\n  url: http://autobrr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Azure DevOps\n\nThis widget has 2 functions:\n\n 1. Pipelines: checks if the relevant pipeline is running or not, and if not, reports the last status.\n    Allowed fields: ["result", "status"].\n\n 2. Pull Requests: returns the amount of open PRs, the amount of the PRs you have open, and how many PRs that you open are marked as \'Approved\' by atleast 1 person and not yet completed.\n    Allowed fields: ["totalPrs", "myPrs", "approved"].\n\nYou will need to generate a personal access token for an existing user, see the azure documentation\n\nwidget:\n  type: azuredevops\n  organization: myOrganization\n  project: myProject\n  definitionId: pipelineDefinitionId # required for pipelines\n  branchName: branchName # optional for pipelines, leave empty for all\n  userEmail: email # required for pull requests\n  repositoryId: prRepositoryId # required for pull requests\n  key: personalaccesstoken\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# Bazarr\n\nFind your API key under Settings > General.\n\nAllowed fields: ["missingEpisodes", "missingMovies"].\n\nwidget:\n  type: bazarr\n  url: http://bazarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Caddy\n\nAllowed fields: ["upstreams", "requests", "requests_failed"].\n\nwidget:\n  type: caddy\n  url: http://caddy.host.or.ip:adminport # default admin port is 2019\n\n\n1\n2\n3\n\n\n\n# Calendar\n\nThis widget shows monthly calendar, with optional integrations to show events from supported widgets.\n\nwidget:\n  type: calendar\n  firstDayInWeek: sunday # optional - defaults to monday\n  integrations: # optional\n    - type: sonarr # active widget type that is currently enabled on 02.homepage导航 - possible values: radarr, sonarr, lidarr, readarr\n      service_group: Media # group name where widget exists\n      service_name: Sonarr # service name for that widget\n      color: teal # optional - defaults to pre-defined color for the service (teal for sonarr)\n      params: # optional - additional params for the service\n        unmonitored: true # optional - defaults to false, used with *arr stack\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\nCurrently integrated widgets are sonarr, radarr, lidarr and readarr.\n\nSupported colors can be found on color palette.\n\n\n# Readarr\n\nFind your API key under Settings > General.\n\nAllowed fields: ["wanted", "queued", "books"].\n\nwidget:\n  type: readarr\n  url: http://readarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Calibre-web\n\nNote: this widget requires a feature of calibre-web that has not yet been distributed in versioned release. The code is contained in "nightly" lsio builds after 25/8/23 or running the calibre-web source code including commit 0499e57.\n\nAllowed fields: ["books", "authors", "categories", "series"].\n\nwidget:\n  type: calibreweb\n  url: http://your.calibreweb.host:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# Changedetection.io\n\nFind your API key under Settings > API.\n\nwidget:\n  type: changedetectionio\n  url: http://changedetection.host.or.ip:port\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Channels DVR Server\n\nwidget:\n  type: channelsdvrserver\n  url: http://192.168.1.55:8089\n\n\n1\n2\n3\n\n\n\n# Cloudflare Tunnels\n\nAs of v0.6.10 this widget no longer accepts a Cloudflare global API key (or account email) due to security concerns. Instead, you should setup an API token which only requires the permissions Account.Cloudflare Tunnel:Read.\n\nAllowed fields: ["status", "origin_ip"].\n\nwidget:\n  type: cloudflared\n  accountid: accountid # from zero trust dashboard url e.g. https://one.dash.cloudflare.com/<accountid>/home/quick-start\n  tunnelid: tunnelid # found in tunnels dashboard under the tunnel name\n  key: cloudflareapitoken # api token with `Account.Cloudflare Tunnel:Read` https://dash.cloudflare.com/profile/api-tokens\n\n\n1\n2\n3\n4\n5\n\n\n\n# Coin Market Cap\n\nGet your API key from your CoinMarketCap Pro Dashboard.\n\nAllowed fields: no configurable fields for this widget.\n\nwidget:\n  type: coinmarketcap\n  currency: GBP # Optional\n  symbols: [BTC, LTC, ETH]\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n\n\nYou can also specify slugs instead of symbols (since symbols aren\'t garaunteed to be unique). If you supply both, slugs will be used. For example:\n\nwidget:\n  type: coinmarketcap\n  slugs: [chia-network, uniswap]\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Custom API\n\nThis widget can show information from custom self-hosted or third party API.\n\nFields need to be defined in the mappings section YAML object to correlate with the value in the APIs JSON object. Final field definition needs to be the key with the desired value information.\n\nwidget:\n  type: customapi\n  url: http://custom.api.host.or.ip:port/path/to/exact/api/endpoint\n  refreshInterval: 10000 # optional - in milliseconds, defaults to 10s\n  username: username # auth - optional\n  password: password # auth - optional\n  method: GET # optional, e.g. POST\n  headers: # optional, must be object, see below\n  mappings:\n    - field: key # needs to be YAML string or object\n      label: Field 1\n      format: text # optional - defaults to text\n    - field: # needs to be YAML string or object\n        path:\n          to: key2\n      format: number # optional - defaults to text\n      label: Field 2\n    - field: # needs to be YAML string or object\n        path:\n          to:\n            another: key3\n      label: Field 3\n      format: percent # optional - defaults to text\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\nSupported formats for the values are text, number, float, percent, bytes and bitrate.\n\n\n# Example\n\nFor the following JSON object from the API:\n\n{\n  "id": 1,\n  "name": "Rick Sanchez",\n  "status": "Alive",\n  "species": "Human",\n  "gender": "Male",\n  "origin": {\n    "name": "Earth (C-137)"\n  },\n  "locations": [\n    {\n      "name": "Earth (C-137)"\n    },\n    {\n      "name": "Citadel of Ricks"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\nDefine the mappings section as an aray, for example:\n\nmappings:\n  - field: name # Rick Sanchez\n    label: Name\n  - field: status # Alive\n    label: Status\n  - field:\n      origin: name # Earth (C-137)\n    label: Origin\n  - field:\n      locations:\n        1: name # Citadel of Ricks\n    label: Location\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# Data Transformation\n\nYou can manipulate data with the following tools remap, scale and suffix, for example:\n\n- field: key4\n  label: Field 4\n  format: text\n  remap:\n    - value: 0\n      to: None\n    - value: 1\n      to: Connected\n    - any: true # will map all other values\n      to: Unknown\n- field: key5\n  label: Power\n  format: float\n  scale: 0.001 # can be number or string e.g. 1/16\n  suffix: kW\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# Custom Headers\n\nPass custom headers using the headers option, for example:\n\nheaders:\n  X-API-Token: token\n\n\n1\n2\n\n\n\n# Deluge\n\nUses the same password used to login to the webui, see the deluge FAQ.\n\nAllowed fields: ["leech", "download", "seed", "upload"].\n\nwidget:\n  type: deluge\n  url: http://deluge.host.or.ip\n  password: password # webui password\n\n\n1\n2\n3\n4\n\n\n\n# Synology Disk Station\n\nNote: the widget is not compatible with 2FA.\n\nAn optional \'volume\' parameter can be supplied to specify which volume\'s free space to display when more than one volume exists. The value of the parameter must be in form of volume_N, e.g. to display free space for volume2, volume_2 should be set as \'volume\' value. If omitted, first returned volume\'s free space will be shown (not guaranteed to be volume1).\n\nAllowed fields: ["uptime", "volumeAvailable", "resources.cpu", "resources.mem"].\n\nTo access these system metrics you need to connect to the DiskStation with an account that is a member of the default Administrators group. That is because these metrics are requested from the API\'s SYNO.Core.System part that is only available to admin users. In order to keep the security impact as small as possible we can set the account in DSM up to limit the user\'s permissions inside the Synology system. In DSM 7.x, for instance, follow these steps:\n\n 1. Create a new user, i.e. remote_stats.\n 2. Set up a strong password for the new user\n 3. Under the User Groups tab of the user config dialogue check the box for Administrators.\n 4. On the Permissions tab check the top box for No Access, effectively prohibiting the user from accessing anything in the shared folders.\n 5. Under Applications check the box next to Deny in the header to explicitly prohibit login to all applications.\n 6. Now only allow login to the Download Station application, either by\n    * unchecking Deny in the respective row, or (if inheriting permission doesn\'t work because of other group settings)\n    * checking Allow for this app, or\n    * checking By IP for this app to limit the source of login attempts to one or more IP addresses/subnets.\n 7. When the Preview column shows Allow in the Download Station row, click Save.\n\nNow configure the widget with the correct login information and test it.\n\nIf you encounter issues during testing, make sure to uncheck the option for automatic blocking due to invalid logins under Control Panel > Security > Protection. If desired, this setting can be reactivated once the login is established working.\n\nwidget:\n  type: diskstation\n  url: http://diskstation.host.or.ip:port\n  username: username\n  password: password\n  volume: volume_N # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Synology Download Station\n\nNote: the widget is not compatible with 2FA.\n\nAllowed fields: ["leech", "download", "seed", "upload"].\n\nwidget:\n  type: downloadstation\n  url: http://downloadstation.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# EVCC\n\nAllowed fields: ["pv_power", "grid_power", "home_power", "charge_power].\n\nwidget:\n  type: evcc\n  url: http://evcc.host.or.ip:port\n\n\n1\n2\n3\n\n\n\n# Fileflows\n\nAllowed fields: ["queue", "processing", "processed", "time"].\n\nwidget:\n  type: fileflows\n  url: http://your.fileflows.host:port\n\n\n1\n2\n3\n\n\n\n# Flood\n\nAllowed fields: ["leech", "download", "seed", "upload"].\n\nwidget:\n  type: flood\n  url: http://flood.host.or.ip\n  username: username # if set\n  password: password # if set\n\n\n1\n2\n3\n4\n5\n\n\n\n# FreshRSS\n\nPlease refer to Enable the API in FreshRSS for the "API password" to be entered in the password field.\n\nAllowed fields: ["subscriptions", "unread"].\n\nwidget:\n  type: freshrss\n  url: http://freshrss.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# GameDig\n\nUses the GameDig library to get game server information for any supported server type.\n\nAllowed fields (limited to a max of 4): ["status", "name", "map", "currentPlayers", "players", "maxPlayers", "bots", "ping"].\n\nwidget:\n  type: gamedig\n  serverType: csgo # see https://github.com/gamedig/node-gamedig#games-list\n  url: udp://server.host.or.ip:port\n\n\n1\n2\n3\n4\n\n\n\n# Ghostfolio\n\nAuthentication requires manually obtaining a Bearer token which can be obtained by make a POST request to the API e.g.\n\ncurl -X POST http://localhost:3333/api/v1/auth/anonymous -H \'Content-Type: application/json\' -d \'{ "accessToken": "SECURITY_TOKEN_OF_ACCOUNT" }\'\n\n\n1\n\n\nSee the official docs.\n\nNote that the Bearer token is valid for 6 months, after which a new one must be generated.\n\nAllowed fields: ["gross_percent_today", "gross_percent_1y", "gross_percent_max"]\n\nwidget:\n  type: ghostfolio\n  url: http://ghostfoliohost:port\n  key: ghostfoliobearertoken\n\n\n1\n2\n3\n4\n\n\n\n# Glances\n\n(Find the Glances information widget here)\n\nThe Glances widget allows you to monitor the resources (cpu, memory, diskio, sensors & processes) of host or another machine. You can have multiple instances by adding another service block.\n\nwidget:\n  type: glances\n  url: http://glances.host.or.ip:port\n  username: user # optional if auth enabled in Glances\n  password: pass # optional if auth enabled in Glances\n  metric: cpu\n\n\n1\n2\n3\n4\n5\n6\n\n\nPlease note, this widget does not need an href, icon or description on its parent service. To achive the same effect as the examples above, see as an example:\n\n- CPU Usage:\n    widget:\n      type: glances\n      url: http://glances.host.or.ip:port\n      metric: cpu\n- Network Usage:\n    widget:\n      type: glances\n      url: http://glances.host.or.ip:port\n      metric: network:enp0s25\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Metrics\n\nThe metric field in the configuration determines the type of system monitoring data to be displayed. Here are the supported metrics:\n\ninfo: System information. Shows the system\'s hostname, OS, kernel version, CPU type, CPU usage, RAM usage and SWAP usage.\n\ncpu: CPU usage. Shows how much of the system\'s computational resources are currently being used.\n\nmemory: Memory usage. Shows how much of the system\'s RAM is currently being used.\n\nprocess: Top 5 processes based on CPU usage. Gives an overview of which processes are consuming the most resources.\n\nnetwork:<interface_name>: Network data usage for the specified interface. Replace <interface_name> with the name of your network interface, e.g., network:enp0s25, as specificed in glances.\n\nsensor:<sensor_id>: Temperature of the specified sensor, typically used to monitor CPU temperature. Replace <sensor_id> with the name of your sensor, e.g., sensor:Package id 0 as specificed in glances.\n\ndisk:<disk_id>: Disk I/O data for the specified disk. Replace <disk_id> with the id of your disk, e.g., disk:sdb, as specificed in glances.\n\ngpu:<gpu_id>: GPU usage for the specified GPU. Replace <gpu_id> with the id of your GPU, e.g., gpu:0, as specificed in glances.\n\nfs:<mnt_point>: Disk usage for the specified mount point. Replace <mnt_point> with the path of your disk, e.g., /mnt/storage, as specificed in glances.\n\n\n# Views\n\nAll widgets offer an alternative to the full or "graph" view, which is the compact, or "graphless" view.\n\nTo switch to the alternative "graphless" view, simply passs chart: false as an option to the widget, like so:\n\n- Network Usage:\n    widget:\n      type: glances\n      url: http://glances.host.or.ip:port\n      metric: network:enp0s25\n      chart: false\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Gluetun\n\nRequires HTTP control server options to be enabled.\n\nAllowed fields: ["public_ip", "region", "country"].\n\nwidget:\n  type: gluetun\n  url: http://gluetun.host.or.ip\n\n\n1\n2\n3\n\n\n\n# Gotify\n\nGet a Gotify client token from an existing client or create a new one on your Gotify admin page.\n\nAllowed fields: ["apps", "clients", "messages"].\n\nwidget:\n  type: gotify\n  url: http://gotify.host.or.ip\n  key: clientoken\n\n\n1\n2\n3\n4\n\n\n\n# Grafana\n\nAllowed fields: ["dashboards", "datasources", "totalalerts", "alertstriggered"].\n\nwidget:\n  type: grafana\n  url: http://grafana.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# HDHomerun\n\nAllowed fields: ["channels", "hd"].\n\nwidget:\n  type: hdhomerun\n  url: http://hdhomerun.host.or.ip\n\n\n1\n2\n3\n\n\n\n# Health checks\n\nTo use the Health Checks widget, you first need to generate an API key. To do this, follow these steps:\n\n 1. Go to Settings in your check dashboard.\n 2. Click on API key (read-only) and then click Create.\n 3. Copy the API key that is generated for you.\n\nAllowed fields: ["status", "last_ping"].\n\nwidget:\n  type: healthchecks\n  url: http://healthchecks.host.or.ip:port\n  key: <YOUR_API_KEY>\n  uuid: <YOUR_CHECK_UUID>\n\n\n1\n2\n3\n4\n5\n\n\n\n# Homebridge\n\nThe Homebridge API is actually provided by the Config UI X plugin that has been included with Homebridge for a while, still it is required to be installed for this widget to work.\n\nAllowed fields: ["updates", "child_bridges"].\n\nwidget:\n  type: homebridge\n  url: http://homebridge.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# Immich\n\nAllowed fields: ["users" ,"photos", "videos", "storage"].\n\nNote that API key must be from admin user.\n\nwidget:\n  type: immich\n  url: http://immich.host.or.ip\n  key: adminapikeyadminapikeyadminapikey\n\n\n1\n2\n3\n4\n\n\n\n# Service Widgets\n\n\n# JDownloader\n\nBasic widget to show number of items in download queue, along with the queue size and current download speed.\n\nAllowed fields: ["downloadCount", "downloadTotalBytes","downloadBytesRemaining", "downloadSpeed"].\n\nwidget:\n  type: jdownloader\n  username: JDownloader Username\n  password: JDownloader Password\n  client: Name of JDownloader Instance\n\n\n1\n2\n3\n4\n5\n\n\n\n# Jellyseerr\n\nFind your API key under Settings > General > API Key.\n\nAllowed fields: ["pending", "approved", "available"].\n\nwidget:\n  type: jellyseerr\n  url: http://jellyseerr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Kavita\n\nUses the same username and password used to login from the web.\n\nAllowed fields: ["seriesCount", "totalFiles"].\n\nwidget:\n  type: kavita\n  url: http://kavita.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# Komga\n\nUses the same username and password used to login from the web.\n\nAllowed fields: ["libraries", "series", "books"].\n\nwidget:\n  type: komga\n  url: http://komga.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# Kopia\n\nAllowed fields: ["status", "size", "lastrun", "nextrun"].\n\nYou may optionally pass values for snapshotHost and / or snapshotPath to select a specific backup source for the widget.\n\nwidget:\n  type: kopia\n  url: http://kopia.host.or.ip:port\n  username: username\n  password: password\n  snapshotHost: hostname # optional\n  snapshotPath: path # optional\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# Lidarr\n\nFind your API key under Settings > General.\n\nAllowed fields: ["wanted", "queued", "artists"].\n\nwidget:\n  type: lidarr\n  url: http://lidarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Mastodon\n\nUse the base URL of the Mastodon instance you\'d like to pull stats for. Does not require authentication as the stats are part of the public API endpoints.\n\nAllowed fields: ["user_count", "status_count", "domain_count"].\n\nwidget:\n  type: mastodon\n  url: https://mastodon.host.name\n\n\n1\n2\n3\n\n\n\n# Mealie\n\nGenerate a user API key under Profile > Manage Your API Tokens > Generate.\n\nAllowed fields: ["recipes", "users", "categories", "tags"].\n\nwidget:\n  type: mealie\n  url: http://mealie-frontend.host.or.ip\n  key: mealieapitoken\n\n\n1\n2\n3\n4\n\n\n\n# Medusa\n\nAllowed fields: ["wanted", "queued", "series"].\n\nwidget:\n  type: medusa\n  url: http://medusa.host.or.ip:port\n  key: medusaapikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Mikrotik\n\nHTTPS may be required, per the documentation\n\nAllowed fields: ["uptime", "cpuLoad", "memoryUsed", "numberOfLeases"].\n\nwidget:\n  type: mikrotik\n  url: https://mikrotik.host.or.ip\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# Minecraft\n\nAllowed fields: ["players", "version", "status"].\n\nwidget:\n  type: minecraft\n  url: udp://minecraftserveripordomain:port\n\n\n1\n2\n3\n\n\n\n# Miniflux\n\nApi key is found under Settings > API keys\n\nAllowed fields: ["unread", "read"].\n\nwidget:\n  type: miniflux\n  url: http://miniflux.host.or.ip:port\n  key: minifluxapikey\n\n\n1\n2\n3\n4\n\n\n\n# MJPEG\n\n\n\nPass the stream URL from a service like µStreamer or camera-streamer.\n\nwidget:\n  type: mjpeg\n  stream: http://mjpeg.host.or.ip/webcam/stream\n\n\n1\n2\n3\n\n\n\n# Moonraker (Klipper)\n\nAllowed fields: ["printer_state", "print_status", "print_progress", "layers"].\n\nwidget:\n  type: moonraker\n  url: http://moonraker.host.or.ip:port\n\n\n1\n2\n3\n\n\n\n# Mylar3\n\nAPI must be enabled in Mylar3 settings.\n\nAllowed fields: ["series", "issues", "wanted"].\n\nwidget:\n  type: mylar\n  url: http://mylar3.host.or.ip:port\n  key: yourmylar3apikey\n\n\n1\n2\n3\n4\n\n\n\n# Nextcloud\n\nUse username & password, or the NC-Token key. Information about the token can be found under Settings > System. If both are provided, NC-Token will be used.\n\nAllowed fields: ["cpuload", "memoryusage", "freespace", "activeusers", "numfiles", "numshares"].\n\nNote "cpuload" and "memoryusage" were deprecated in v0.6.18 and a maximum of 4 fields can be displayed.\n\nwidget:\n  type: nextcloud\n  url: https://nextcloud.host.or.ip:port\n  key: token\n\n\n1\n2\n3\n4\n\n\nwidget:\n  type: nextcloud\n  url: https://nextcloud.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# NextDNS\n\nApi key is found under Account > API, profile ID is found under Setup > Endpoints > ID\n\nwidget:\n  type: nextdns\n  profile: profileid\n  key: yourapikeyhere\n\n\n1\n2\n3\n4\n\n\n\n# NZBget\n\nThis widget uses the same authentication method as your browser when logging in (HTTP Basic Auth), and is often referred to as the ControlUsername and ControlPassword inside of Nzbget documentation.\n\nAllowed fields: ["rate", "remaining", "downloaded"].\n\nwidget:\n  type: nzbget\n  url: http://nzbget.host.or.ip\n  username: controlusername\n  password: controlpassword\n\n\n1\n2\n3\n4\n5\n\n\n\n# OctoPrint\n\nAllowed fields: ["printer_state", "temp_tool", "temp_bed", "job_completion"].\n\nwidget:\n  type: octoprint\n  url: http://octoprint.host.or.ip:port\n  key: youroctoprintapikey\n\n\n1\n2\n3\n4\n\n\n\n# Omada\n\nThe widget supports controller versions 3, 4 and 5.\n\nAllowed fields: ["connectedAp", "activeUser", "alerts", "connectedGateways", "connectedSwitches"].\n\nwidget:\n  type: omada\n  url: http://omada.host.or.ip:port\n  username: username\n  password: password\n  site: sitename\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Ombi\n\nFind your API key under Settings > Configuration > General.\n\nAllowed fields: ["pending", "approved", "available"].\n\nwidget:\n  type: ombi\n  url: http://ombi.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# OpenDTU\n\nAllowed fields: ["yieldDay", "relativePower", "absolutePower", "limit"].\n\nwidget:\n  type: opendtu\n  url: http://opendtu.host.or.ip\n\n\n1\n2\n3\n\n\n\n# OpenMediaVault\n\nProvides useful information from your OpenMediaVault\n\nwidget:\n  type: openmediavault\n  url: http://omv.host.or.ip\n  username: admin\n  password: pass\n  method: services.getStatus # required\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Methods\n\nThe method field determines the type of data to be displayed and is required. Supported methods:\n\nservices.getStatus: Shows status of running services. Allowed fields: ["running", "stopped", "total"]\n\nsmart.getListBg: Shows S.M.A.R.T. status from disks. Allowed fields: ["passed", "failed"]\n\ndownloader.getDownloadList: Displays the number of tasks from the Downloader plugin currently being downloaded and total. Allowed fields: ["downloading", "total"]\n\n\n# OPNSense\n\nThe API key & secret can be generated via the webui by creating a new user at System/Access/Users. Ensure "Generate a scrambled password to prevent local database logins for this user" is checked and then edit the effective privileges selecting only:\n\n * Diagnostics: System Activity\n * Status: Traffic Graph\n\nFinally, create a new API key which will download an apikey.txt file with your key and secret in it. Use the values as the username and password fields, respectively, in your homepage config.\n\nAllowed fields: ["cpu", "memory", "wanUpload", "wanDownload"].\n\nwidget:\n  type: opnsense\n  url: http://opnsense.host.or.ip\n  username: key\n  password: secret\n\n\n1\n2\n3\n4\n5\n\n\n\n# Overseerr\n\nFind your API key under Settings > General.\n\nAllowed fields: ["pending", "approved", "available", "processing"].\n\nwidget:\n  type: overseerr\n  url: http://overseerr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Paperless-ngx\n\nUse username & password, or the token key. Information about the token can be found in the Paperless-ngx API documentation. If both are provided, the token will be used.\n\nAllowed fields: ["total", "inbox"].\n\nwidget:\n  type: paperlessngx\n  url: http://paperlessngx.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\nwidget:\n  type: paperlessngx\n  url: http://paperlessngx.host.or.ip:port\n  key: token\n\n\n1\n2\n3\n4\n\n\n\n# pfSense\n\nThis widget requires the installation of the pfsense-api which is a 3rd party package for pfSense routers.\n\nOnce pfSense API is installed, you can set the API to be read-only in System > API > Settings.\n\nCurrently the only supported authentication mode is \'Local Database\'.\n\nWAN interface to monitor can be defined by updating the wan param.\n\nLoad is returned instead of cpu utilization. This is a limitation in the pfSense API due to the complexity of this calculation. This may become available in future versions.\n\nAllowed fields: ["load", "memory", "temp", "wanStatus", "wanIP", "disk"] (maximum of 4)\n\nwidget:\n  type: pfsense\n  url: http://pfsense.host.or.ip:port\n  username: user\n  password: pass\n  wan: igb0\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# PhotoPrism\n\nAllowed fields: ["albums", "photos", "videos", "people"].\n\nwidget:\n  type: photoprism\n  url: http://photoprism.host.or.ip:port\n  username: admin\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# PiAlert\n\nWidget for PiAlert.\n\nAllowed fields: ["total", "connected", "new_devices", "down_alerts"].\n\nwidget:\n  type: pialert\n  url: http://ip:port\n\n\n1\n2\n3\n\n\n\n# PiHole\n\nAs of v2022.12 PiHole requires the use of an API key if an admin password is set. Older versions do not require any authentication even if the admin uses a password.\n\nAllowed fields: ["queries", "blocked", "blocked_percent", "gravity"].\n\nwidget:\n  type: pihole\n  url: http://pi.hole.or.ip\n  key: yourpiholeapikey # optional\n\n\n1\n2\n3\n4\n\n\nAdded in v0.1.0, udpated in v0.6.18\n\n\n# Tautulli (Plex)\n\nProvides detailed information about currently active streams. You can find the API key from inside Tautulli at Settings > Web Interface > API.\n\nAllowed fields: no configurable fields for this widget.\n\nwidget:\n  type: tautulli\n  url: http://tautulli.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Portainer\n\nYou\'ll need to make sure you have the correct environment set for the integration to work properly. From the Environments section inside of Portainer, click the one you\'d like to connect to and observe the ID at the end of the URL (should be), something like #!/endpoints/1, here 1 is the value to set as the env value. In order to generate an API key, please follow the steps outlined here https://docs.portainer.io/api/access.\n\nAllowed fields: ["running", "stopped", "total"].\n\nwidget:\n  type: portainer\n  url: https://portainer.host.or.ip:9443\n  env: 1\n  key: ptr_accesskeyaccesskeyaccesskeyaccesskey\n\n\n1\n2\n3\n4\n5\n\n\n\n# Prometheus\n\nAllowed fields: ["targets_up", "targets_down", "targets_total"]\n\nwidget:\n  type: prometheus\n  url: http://prometheushost:port\n\n\n1\n2\n3\n\n\n\n# Prowlarr\n\nFind your API key under Settings > General.\n\nAllowed fields: ["numberOfGrabs", "numberOfQueries", "numberOfFailGrabs", "numberOfFailQueries"].\n\nwidget:\n  type: prowlarr\n  url: http://prowlarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Proxmox\n\nThis widget shows the running and total counts of both QEMU VMs and LX Containers in the Proxmox cluster. It also shows the CPU and memory usage of the first node in the cluster.\n\nYou will need to generate an API Token for new or an existing user. Here is an example of how to do this for a new user.\n\n 1.  Navigate to the Proxmox portal, click on Datacenter\n 2.  Expand Permissions, click on Groups\n 3.  Click the Create button\n 4.  Name the group something informative, like api-ro-users\n 5.  Click on the Permissions "folder"\n 6.  Click Add -> Group Permission\n     * Path: /\n     * Group: group from bullet 4 above\n     * Role: PVEAuditor\n     * Propagate: Checked\n 7.  Expand Permissions, click on Users\n 8.  Click the Add button\n     * User name: something informative like api\n     * Realm: Linux PAM standard authentication\n     * Group: group from bullet 4 above\n 9.  Expand Permissions, click on API Tokens\n 10. Click the Add button\n     * User: user from bullet 8 above\n     * Token ID: something informative like the application or purpose like homepage\n     * Privilege Separation: Checked\n 11. Go back to the "Permissions" menu\n 12. Click Add -> API Token Permission\n     * Path: /\n     * API Token: select the Token ID created in Step 10\n     * Role: PVE Auditor\n     * Propagate: Checked\n\nUse username@pam!Token ID as the username (e.g api@pam!homepage) setting and Secret as the password setting.\n\nAllowed fields: ["vms", "lxc", "resources.cpu", "resources.mem"].\n\nYou can set the optional node setting when you want to show metrics for a single node. By default it will show the average for the complete cluster.\n\nwidget:\n  type: proxmox\n  url: https://proxmox.host.or.ip:8006\n  username: api_token_id\n  password: api_token_secret\n  node: pve-1 # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Proxmox Backup Server\n\nAllowed fields: ["datastore_usage", "failed_tasks_24h", "cpu_usage", "memory_usage"].\n\nwidget:\n  type: proxmoxbackupserver\n  url: https://proxmoxbackupserver.host:port\n  username: api_token_id\n  password: api_token_secret\n\n\n1\n2\n3\n4\n5\n\n\n\n# Pterodactyl\n\nAllowed fields: ["nodes", "servers"]\n\nwidget:\n  type: pterodactyl\n  url: http://pterodactylhost:port\n  key: pterodactylapikey\n\n\n1\n2\n3\n4\n\n\n\n# Pyload\n\nAllowed fields: ["speed", "active", "queue", "total"].\n\nwidget:\n  type: pyload\n  url: http://pyload.host.or.ip:port\n  username: username\n  password: password # only needed if set\n\n\n1\n2\n3\n4\n5\n\n\n\n# QNAP\n\nAllowed fields: ["cpuUsage", "memUsage", "systemTempC", "poolUsage", "volumeUsage"].\n\nwidget:\n  type: qnap\n  url: http://qnap.host.or.ip:port\n  username: user\n  password: pass\n\n\n1\n2\n3\n4\n5\n\n\nIf the QNAP device has multiple volumes, the poolUsage will be a sum of all volumes.\n\nIf only a single volume needs to be tracked, add the following to your configuration and the Widget will track this as volumeUsage:\n\nvolume: Volume Name From QNAP\n\n\n1\n\n\n\n# Radarr\n\nFind your API key under Settings > General.\n\nAllowed fields: ["wanted", "missing", "queued", "movies"].\n\nA detailed queue listing is disabled by default, but can be enabled with the enableQueue option.\n\nwidget:\n  type: radarr\n  url: http://radarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enableQueue: true # optional, defaults to false\n\n\n1\n2\n3\n4\n5\n\n\n\n# ruTorrent\n\nThis requires the httprpc plugin to be installed and enabled, and is part of the default ruTorrent plugins. If you have not explicitly removed or disable this plugin, it should be available.\n\nAllowed fields: ["active", "upload", "download"].\n\nwidget:\n  type: rutorrent\n  url: http://rutorrent.host.or.ip\n  username: username # optional, false if not used\n  password: password # optional, false if not used\n\n\n1\n2\n3\n4\n5\n\n\n\n# SABnzbd\n\nFind your API key under Config > General.\n\nAllowed fields: ["rate", "queue", "timeleft"].\n\nwidget:\n  type: sabnzbd\n  url: http://sabnzbd.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Scrutiny\n\nAllowed fields: ["passed", "failed", "unknown"].\n\nwidget:\n  type: scrutiny\n  url: http://scrutiny.host.or.ip\n\n\n1\n2\n3\n\n\n\n# Sonarr\n\nFind your API key under Settings > General.\n\nAllowed fields: ["wanted", "queued", "series"].\n\nA detailed queue listing is disabled by default, but can be enabled with the enableQueue option.\n\nwidget:\n  type: sonarr\n  url: http://sonarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enableQueue: true # optional, defaults to false\n\n\n1\n2\n3\n4\n5\n\n\n\n# Speedtest Tracker\n\nNo extra configuration is required.\n\nThis widget is compatible with both alexjustesen/speedtest-tracker and henrywhitaker3/Speedtest-Tracker.\n\nAllowed fields: ["download", "upload", "ping"].\n\nwidget:\n  type: speedtest\n  url: http://speedtest.host.or.ip\n\n\n1\n2\n3\n\n\n\n# Syncthing Relay Server\n\nPulls stats from the relay server. See here for more information on configuration.\n\nAllowed fields: ["numActiveSessions", "numConnections", "bytesProxied"].\n\nwidget:\n  type: strelaysrv\n  url: http://syncthing.host.or.ip:22070\n\n\n1\n2\n3\n\n\n\n# Tdarr\n\nAllowed fields: ["queue", "processed", "errored", "saved"].\n\nwidget:\n  type: tdarr\n  url: http://tdarr.host.or.ip\n\n\n1\n2\n3\n\n\n\n# Traefik\n\nNo extra configuration is required. If your traefik install requires authentication, include the username and password used to login to the web interface.\n\nAllowed fields: ["routers", "services", "middleware"].\n\nwidget:\n  type: traefik\n  url: http://traefik.host.or.ip\n  username: username # optional\n  password: password # optional\n\n\n1\n2\n3\n4\n5\n\n\n\n# TrueNas\n\nAllowed fields: ["load", "uptime", "alerts"].\n\nTo create an API Key, follow the official TrueNAS documentation.\n\nwidget:\n  type: truenas\n  url: http://truenas.host.or.ip\n  username: user # not required if using api key\n  password: pass # not required if using api key\n  key: yourtruenasapikey # not required if using username / password\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Tube Archivist\n\nRequires API key.\n\nAllowed fields: ["downloads", "videos", "channels", "playlists"].\n\nwidget:\n  type: tubearchivist\n  url: http://tubearchivist.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# Unifi Controller\n\n(Find the Unifi Controller information widget here)\n\nYou can display general connectivity status from your Unifi (Network) Controller. When authenticating you will want to use an account that has at least read privileges.\n\nAn optional \'site\' parameter can be supplied, if it is not the widget will use the default site for the controller.\n\nAllowed fields: ["uptime", "wan", "lan_users", "wlan_users"].\n\nwidget:\n  type: unifi\n  url: https://unifi.host.or.ip:port\n  username: username\n  password: password\n  site: Site Name # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\nAdded in v0.4.18, updated in 0.6.7\n\n\n# Unmanic\n\nAllowed fields: ["active_workers", "total_workers", "records_total"].\n\nwidget:\n  type: unmanic\n  url: http://unmanic.host.or.ip:port\n\n\n1\n2\n3\n\n\n\n# Uptime Kuma\n\nAs Uptime Kuma does not yet have a full API the widget uses data from a single "status page". As such you will need a status page setup with a group of monitored sites, which is where you get the slug (without the /status/ portion).\n\nAllowed fields: ["up", "down", "uptime", "incident"].\n\nwidget:\n  type: uptimekuma\n  url: http://uptimekuma.host.or.ip:port\n  slug: statuspageslug\n\n\n1\n2\n3\n4\n\n\n\n# UptimeRobot\n\nTo generate an API key, select My Settings, and either Monitor-Specific API Key or Read-Only API Key.\n\nA Monitor-Specific API Key will provide the following detailed information for the selected monitor:\n\n * Current status\n * Current uptime\n * Date/time of last downtime\n * Duration of last downtime\n\nAllowed fields: ["status", "uptime", "lastDown", "downDuration"].\n\nA Read-Only API Key will provide a summary of all monitors in your account:\n\n * Number of \'Up\' monitors\n * Number of \'Down\' monitors\n\nAllowed fields: ["sitesUp", "sitesDown"].\n\nwidget:\n  type: uptimerobot\n  url: https://api.uptimerobot.com\n  key: uptimerobotapitoken\n\n\n1\n2\n3\n4\n\n\n\n# UrBackup\n\nThe UrBackup widget retrieves the total number of clients that currently have no errors, have errors, or haven\'t backed up recently. Clients are considered "Errored" or "Out of Date" if either the file or image backups for that client have errors/are out of date, unless the client does not support image backups.\n\nThe default number of days that can elapse before a client is marked Out of Date is 3, but this value can be customized by setting the maxDays value in the config.\n\nOptionally, the widget can also report the total amount of disk space consumed by backups. This is disabled by default, because it requires a second API call.\n\nNote: client status is only shown for backups that the specified user has access to. Disk Usage shown is the total for all backups, regardless of permissions.\n\nAllowed fields: ["ok", "errored", "noRecent", "totalUsed"]. Note that totalUsed will not be shown unless explicitly included in fields.\n\nwidget:\n  type: urbackup\n  username: urbackupUsername\n  password: urbackupPassword\n  url: http://urbackupUrl:55414\n  maxDays: 5 # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Watchtower\n\nTo use this widget, Watchtower needs to be configured to to enable metrics.\n\nAllowed fields: ["containers_scanned", "containers_updated", "containers_failed"].\n\nwidget:\n  type: watchtower\n  url: http://your-ip-address:8080\n  key: demotoken\n\n\n1\n2\n3\n4\n\n\n\n# Whats Up Docker\n\nCurrently requires unauthenticated whatsupdocker instance.\n\nAllowed fields: ["monitoring", "updates"].\n\nwidget:\n  type: whatsupdocker\n  url: http://whatsupdocker:port\n\n\n1\n2\n3\n\n\n\n# Xteve\n\nAllowed fields: ["streams_all", "streams_active", "streams_xepg"].\n\nwidget:\n  type: xteve\n  url: http://xteve.host.or.ip\n  username: username # optional\n  password: password # optional\n\n\n1\n2\n3\n4\n5\n',normalizedContent:'# 一、容器部署\n\n\n# 下载容器\n\n进入 docker，点击镜像管理-本地镜像-添加-私有库（注意是私有库，这个镜像未发布在 docker hub），url 地址处输入：ghcr.io/gethomepage/homepage:latest，下载最新版镜像。\n\n\n\n\n# 创建容器\n\n1、安装教程：https://gethomepage.dev/v0.8.3/installation/docker/\n\nversion: "3.3"\nservices:\n  homepage:\n    image: ghcr.io/gethomepage/homepage:latest\n    container_name: homepage\n    ports:\n      - 3000:3000\n    volumes:\n      - /path/to/config:/app/config # make sure your local config directory exists\n      - /var/run/docker.sock:/var/run/docker.sock # (optional) for docker integrations\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n2、下载完后创建容器，名称默认即可，也可自定义，勾选创建后启动容器，点击下一步。\n\n\n\n3、基础设置里选择倒数第二项\n\n\n\n4、存储空间设置\n\n * 在 docker 盘新建个 homepage 文件夹，并在这个文件夹里新建个 config 子文件夹，然后在存储空间里挂载为/app/config，注意类型为读写。\n * 如果你想用本地存放的 logo 的话，你可以新建个文件夹 logos，挂载为/app/public/icons。\n * 如果你需要显示某个的盘容量信息的话，需要把这个盘也挂载上，可以自定义命名。\n\n\n\n5、本地端口随便设置个未被占用的。\n\n\n\n6、设置完成后点击完成，在浏览器输入绿联的 ip:3999（刚刚设置的本地端口），进入 homepage 页面。\n\n\n\n\n# 使用环境变量来存储敏感信息\n\n你还可以在配置文件中使用环境变量来保护敏感信息。请注意以下事项：\n\n环境变量必须以 homepage_var_ 或 homepage_file_ 开头。\n环境变量 homepage_var_xxx 的值将替换配置文件中的 {{homepage_var_xxx}} 。\n环境变量 homepage_file_xxx 的值必须是一个文件路径，文件内容将替换配置文件中的 {{homepage_file_xxx}} 。\n\n\n1\n2\n3\n\n\n比如：\n\n * 配置文件内容：\n   \n   username: { { homepage_var_qb_username } }\n   password: { { homepage_var_qb_password } }\n   config_file: { { homepage_file_db_config } }\n   \n   \n   1\n   2\n   3\n   \n\n * 设置对应的环境变量：\n   \n   export homepage_var_qb_username=myusername\n   export homepage_var_qb_password=mypassword\n   export homepage_file_db_config=/path/to/db_config.ini\n   \n   \n   1\n   2\n   3\n   \n\n这种方式可以确保敏感信息不会直接出现在配置文件中，而是通过环境变量进行传递。\n\n\n# 二、配置文件说明\n\n官方说明文档：https://gethomepage.dev/v0.7.3/configs。\n\n我们进入 docker 盘中刚刚新建的 homepage-config 文件夹，可以看到有好几个 yaml 格式的文件夹。\n\n\n\n注意：\n\n * yaml 格式的不建议用记事本打开直接编辑，一定要用编辑器修改，比如 vscode 或 pycharm。\n * 或者使用在线编辑器（https://codebeautify.org/yaml-validator或https://jsonformatter.org/yaml-validator）编辑。\n\n其中：\n\n * settings.yaml：包含了与应用程序相关的配置，比如背景图片、默认主题颜色等。\n * bookmarks.yaml：它通常包含每个网站的 url（网址）和名称，你可以通过修改这个文件来管理你个人的网站收藏。\n * services.yaml：用于配置部署在主页上的一些服务。它通常包含服务的名称、url，以及访问和使用每个服务所需的其他设置或参数。\n * widgets.yaml：包含了信息小部件的配置设置，它们会显示在主页上。小部件是一些提供实用信息或功能的小组件，比如天气、日历、待办事项列表、新闻等。你可以自定义这个文件，来指定每个小部件在主页上的类型、位置和设置\n * kubernetes.yaml：通常用于配置 kubernetes 集群。它包含了定义和管理 kubernetes 资源的规范和设置，如部署、pod 定义、服务等。\n * docker.yaml：用于配置 docker 实例。它包含了 docker 容器的名称、镜像名称、端口映射、环境变量等设置。你可以定义和管理运行在你的系统上的各种 docker 容器。\n * custom.css & custom.js： 用于自定义主页的 css（层叠样式表）和 javascript。custom.css 允许你指定自己的样式，修改主页的外观和布局，而 custom.js 允许你添加自定义的 javascript 代码，实现特定的行为或页面交互。\n\n\n# 三、settings.yaml\n\n\n# 1、网页标题\n\n设置网页标题。\n\ntitle: 山月的导航\n\n\n1\n\n\n\n# 2、语言\n\n设置想要的语言\n\nlanguage: zh-cn # 中文\n\n\n1\n\n\n当前支持的语言：: ca, de, en, es, fr, he, hr, hu, it, nb-no, nl, pt, ru, sv, vi, zh-cn, zh-hant 。\n\n你也可以使用 datetime widget 这样的样式：en-au, en-gb, etc。\n\n\n# 3、页眉样式\n\n目前有 4 个页眉样式选项。\n\nheaderstyle: underlined # 默认\n\n\n1\n\n\n\n\nheaderstyle: boxed\n\n\n1\n\n\n\n\nheaderstyle: clean\n\n\n1\n\n\n\n\nheaderstyle: boxedwidgets\n\n\n1\n\n\n\n\n\n# 4、图标\n\n如果你想使用自定义的网站图标而不是默认提供的图标：你可以提供一个完整的 url 来指向选择的图像，或者提供相对于 /app/public 目录的本地图像的路径。\n\nfavicon: https://www.google.com/favicon.ico\n# 或\n# favicon: /icons/homepage.png\n\n\n1\n2\n3\n\n\n\n# 5、主题\n\n可以通过传递 theme 选项来配置固定的主题（并禁用主题切换器），如下所示：\n\ntheme: dark # or light\n\n\n1\n\n\n\n# 6、颜色调色板\n\n可以通过传递 color 选项来配置固定的颜色调色板（并禁用调色板切换器），如下所示：\n\ncolor: slate\n\n\n1\n\n\n> 支持的颜色有：板岩slate、灰色gray、锌色zinc、中性色neutral、石头色stone、琥珀色amber、黄色yellow、青柠色lime、绿色green、祖母绿emerald、鸭绿色teal、鸭绿色cyan、天空色sky、蓝色blue、靛蓝色indigo、紫色violet、紫色purple、紫红色fuchsia、粉红色pink、玫瑰色rose、红色red、白色white\n\n\n# 7、homepage 版本\n\n默认情况下，发布版本显示在页面底部。要隐藏此项，可以使用隐藏版本设置：\n\nhideversion: true\n\n\n1\n\n\n\n# 8、日志路径\n\n默认情况下，主页日志文件被写入 config/logs 子目录，你可以通过设置 logpath 自定义日志路径。\n\nlogpath: /logfile/path\n\n\n1\n\n\n\n# 9、布局\n\n如果你在 services.yaml 或 bookmarks.yaml 文件中有一个名为 media 的组，您可以使用以下方式将 服务和书签 部分配置为基于 "column" 或 "row" 的布局，其中将"row" 可以水平排列服务或书签，而"column" 则可以垂直排列它们。\n\nlayout:\n  media:\n    style: row\n    columns: 4\n\n\n1\n2\n3\n4\n\n\n这将产生以下布局：\n\n\n\n1）增加第五列\n\n默认情况下主页列样式最多为 4 列，但你可以通过添加以下内容来添加第五列：\n\nfivecolumns: true\n\n\n1\n\n\n2）可折叠\n\n默认情况下服务和书签的可折叠功能是处于启用状态的，可以通过添加以下内容禁用此功能。\n\ndisablecollapse: true\n\n\n1\n\n\n3）排序\n\n服务组和书签组可以按照需求混合排列，但必须使用不同的组名。如果没指定任何书签组，它们将显示在页面底部。\n\n> 如果为服务组和书签组使用相同的名称，可能会导致意外的行为，例如书签组被隐藏。\n\n组将根据布局块中的顺序进行排序，你也可以混合使用由 docker 标签定义的组，例如：\n\nlayout:\n  - auto-discovered1:\n  - configured1:\n  - configured2:\n  - auto-discovered2:\n  - configured3:\n      style: row\n      columns: 3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n4）标题\n\n可以通过将 header 设置为 false 来隐藏布局中每个部分的标题：\n\nlayout:\n  section a:\n    header: false\n  section b:\n    style: row\n    columns: 3\n    header: false\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n5）类别图标\n\n可以为类别（或菜单项）添加一个图标。\n\nhome management & info:\n  icon: /icons/video.png\nserver tools:\n  icon: https://cdn-icons-png.flaticon.com/512/252/252035.png\n\n\n1\n2\n3\n4\n\n\n6）图标样式\n\n默认的图标样式是渐变效果，但你可以通过指定一个"flat"（扁平）样式来与主题相匹配。\n\n“flat”样式：前缀图标将呈现简洁、扁平化的外观，没有渐变效果。\n\niconstyle: theme # optional, 默认 gradient\n\n\n1\n\n\n7）选项卡\n\n只有在至少一个布局组上设置了选项卡字段时，选项卡才会生效。\n\n选项卡的排序基于布局块中的顺序。如果一个组没有指定选项卡（而其他组设置了选项卡），服务和书签将显示在所有选项卡上。\n\n可以通过在主页 url 的末尾加上＃group（小写并进行 uri 编码）来直接访问每个选项卡。\n\n例如，以下配置将创建四个选项卡：\n\nlayout:\n  ...\n  bookmark group on first tab:\n    tab: first\n\n  first service group:\n    tab: first\n    style: row\n    columns: 4\n\n  second service group:\n    tab: second\n    columns: 4\n\n  third service group:\n    tab: third\n    style: row\n\n  bookmark group on fourth tab:\n    tab: fourth\n\n  service group on every tab:\n    style: row\n    columns: 4\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 10、背景图像\n\n> 注意： 由于 next.js 静态站点服务器的限制，在添加新图像之后，要重启容器以更新静态文件，并使新图像对客户端可用。 创建绑定挂载（bind mount）时，避免将整个/app/public/目录进行绑定挂载。\n\n如果你想使用背景图片而不是纯色主题，那你需要提供你选择的图片的完整 url。\n\nbackground: https://images.unsplash.com/photo-1502790671504-542ad42d5189?auto=format&fit=crop&w=2560&q=80\n\n\n1\n\n\n或者可以通过在 docker compose 文件中挂载一个保存图像的路径/app/public/images，然后将路径挂载到存放图片的本地目录。\n\nvolumes:\n  - /my/homepage/images:/app/public/images\n\n\n1\n2\n\n\n然后使用相对路径来指定本地图片。\n\nbackground: /images/background.png\n\n\n1\n\n\n背景透明度 & 滤镜\n\n您可以指定应用于背景图像的滤镜，包括模糊度、饱和度、亮度以及透明度与背景颜色的混合。前三个滤镜设置使用 tailwind css 类，有关每个选项的说明，请参阅下面的注释。您不需要指定所有选项。\n\nbackground:\n  image: /images/background.png\n  blur: sm # 模糊度：sm, "", md, xl... see https://tailwindcss.com/docs/backdrop-blur\n  saturate: 50 # 饱和度：0, 50, 100... see https://tailwindcss.com/docs/backdrop-saturate\n  brightness: 50 # 亮度：0, 50, 75... see https://tailwindcss.com/docs/backdrop-brightness\n  opacity: 50 # 透明度： 0-100\n\n\n1\n2\n3\n4\n5\n6\n\n\n卡片背景模糊\n\n您可以为 服务卡片 service & 书签卡片 bookmark 应用模糊滤镜。请注意，此选项与背景模糊、饱和度和亮度滤镜不兼容。\n\ncardblur: sm # sm, "", md, etc... see https://tailwindcss.com/docs/backdrop-blur\n\n\n1\n\n\n\n# 11、快速启动\n\n可以使用“快速启动”功能搜索服务、执行 web 搜索或打开 url。要使用快速启动，只需在主页上输入即可（只要搜索小部件没有焦点）。\n\n\n\n快速启动功能有一些可选设置：\n\nquicklaunch:\n  searchdescriptions: true # （搜索描述）：控制搜索中是否包含项目描述。默认情况下，此选项处于禁用状态。当启用时，搜索结果会优先显示与项目名称匹配的项目，然后显示仅与描述匹配的项目。\n  hideinternetsearch: false # （隐藏网页搜索）：禁止自动将当前网页搜索（例如来自小部件）作为快速启动选项之一。默认情况下为false，启用该功能。\n  hidevisiturl: false # （隐藏访问链接）：禁用检测并提供打开url的选项。默认情况下为false，启用该功能。\n\n\n1\n2\n3\n4\n\n\n\n# 12、start url\n\n可以通过自定义"start_url"来灵活控制可安装应用程序的初始加载行为，并确保用户在打开应用程序时可以直接进入所需的页面或功能。默认值为"/"（根目录）。\n\nstarturl: https://custom.url\n\n\n1\n\n\n\n# 13、基本 url 地址\n\n在某些代理配置中，可能需要设置文档的基本 url。您可以通过提供一个 base 值来实现这一点，例如：\n\nbase: http://host.local/homepage\n\n\n1\n\n\n> url 必须是完整的、绝对的 url，否则浏览器将忽略它。\n\n\n# 14、链接目标\n\n链接目标用于指定链接的打开方式，以下是常用的链接目标选项：\n\n * _self：在同一选项卡中打开链接。\n * _blank：在新选项卡中打开链接。\n * _top：在新窗口中打开链接。\n\ntarget: _blank # 可选项有： _blank, _self, and _top\n\n\n1\n\n\n这也可以针对个别服务进行设置。请注意，在服务级别设置此项会覆盖 settings.json 中的任何设置。\n\n\n# 15、天气组件\n\n"providers"允许您定义共享的 api 提供程序选项和密钥。 目前，这使你可以私密的定义天气 api 密钥，并且还用于定义 longhorn url 和凭据的位置。\n\nproviders:\n  openweathermap: openweathermapapikey\n  weatherapi: weatherapiapikey\n  longhorn:\n    url: https://longhorn.example.com\n    username: admin\n    password: longhornpassword\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n然后，可以在小部件配置中传递 api 提供商而不是直接传递 api 密钥。\n\n- weather:\n    latitude: 50.449684\n    longitude: 30.525026\n    provider: weatherapi\n\n\n1\n2\n3\n4\n\n\n\n# 16、显示 docker 状态\n\n您可以在 settings.yaml 中显示所有扩展的 docker 统计信息：\n\nshowstats: true\n\n\n1\n\n\n或在每个服务（services.yaml 文件）中设置：\n\n- example service:\n    ...\n    showstats: true\n\n\n1\n2\n3\n\n\n如果您同时设置了两个，则按服务设置优先。\n\n\n# 17、状态样式\n\n您可以从以下样式中选择 docker 或 k8s 的状态和 ping 风格：: dot or basic\n\n * 默认情况下，ping 响应时间以毫秒 (ms) 显示，而 docker 或 kubernetes 容器状态则显示为无值。\n * dot （点）：对于成功的 ping 或正常的状态，会显示一个绿色的点。\n * basic（基础）：ping 结果会显示为 "up"（正常）或 "down"（故障）。\n\nfor example:\n\nstatusstyle: "dot"\n\n\n1\n\n\n或在每个服务（services.yaml 文件）中设置：\n\n- example service:\n    ...\n    statusstyle: \'dot\'\n\n\n1\n2\n3\n\n\n如果您同时设置了两个，则按服务设置优先。\n\n\n# 18、隐藏小工具错误消息\n\n在 settings.yaml 中全局隐藏可见的 api 错误消息：\n\nhideerrors: true\n\n\n1\n\n\n或在每个服务部件（services.yaml 文件）中设置：\n\n- example service:\n    ...\n    widget:\n    ...\n        hideerrors: true\n\n\n1\n2\n3\n4\n5\n\n\n如果其中一个值设置为 true，则错误消息将被隐藏。\n\n\n# 四、services.yaml\n\n服务是在 services.yaml 文件中配置的。您可以拥有任意数量的分组，并且每个分组可以包含任意数量的服务。\n\n\n# 1、分组\n\n分组被定义为顶级数组项。\n\n- group a:\n    - service a:\n        href: http://localhost/\n\n- group b:\n    - service b:\n        href: http://localhost/\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n\n# 2、服务\n\n服务被定义为分组上的数组条目\n\n- group a:\n    - service a:\n        href: http://localhost/\n\n    - service b:\n        href: http://localhost/\n\n    - service c:\n        href: http://localhost/\n\n- group b:\n    - service d:\n        href: http://localhost/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n\n\n# 3、描述\n\n服务可以有描述\n\n- group a:\n    - service a:\n        href: http://localhost/\n        description: this is my service\n\n- group b:\n    - service b:\n        href: http://localhost/\n        description: this is another service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n\n\n# 4、图标\n\n * 服务可能在dashboard icons中匹配有图标，你可以通过传递图标的名称来匹配，如果使用 png 版本可以带也可以不带.png ，svg 版本的得带.svg 。\n\n * 可以使用mdi-xx来匹配使用 material design icons 中的图标 或 使用si-xx使用simple icons中的图标。 可以通过添加十六进制颜色代码作为后缀来自定义颜色，例如 mdi xx-#f0d453 或 si xx-#a712a2。\n\n * 可以使用远程图标，请使用绝对 url（例如 https://...）。\n\n * 可以使用本地图标，首先创建一个 docker 目录 挂载到 /app/public/icons，然后将图标引用为 /icons/myicon.png。当添加新图标时，您需要重新启动容器。\n\n- group a:\n    - sonarr:\n        icon: sonarr.png\n        href: http://sonarr.host/\n        description: series management\n\n- group b:\n    - radarr:\n        icon: radarr.png\n        href: http://radarr.host/\n        description: movie management\n\n- group c:\n    - service:\n        icon: mdi-flask-outline\n        href: http://service.host/\n        description: my cool service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n\n\n# 5、ping\n\n服务可能有一个可选的 ping 属性，允许你监视你选择的端点的可用性并显示响应时间。你不需要将 ping url 设置为 href url。\n\n注意：ping 功能通过向 url 发送一个 http head 请求来工作，如果失败，则会回退到 get 请求。例如，如果 url 需要身份验证或在 authelia 后面等，则 ping 功能不会执行登录操作。在使用反向代理和/或身份验证的情况下，通常需要使用“内部”url 来正确显示 ping 功能的状态。\n\n- group a:\n    - sonarr:\n        icon: sonarr.png\n        href: http://sonarr.host/\n        ping: http://sonarr.host/\n\n- group b:\n    - radarr:\n        icon: radarr.png\n        href: http://radarr.host/\n        ping: http://some.other.host/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n你还可以通过使用 statusstyle 属性为 ping 指示器应用不同的样式，详见 settings.\n\n\n# 6、docker 集成\n\n服务可以连接到 docker 容器，可以在本地机器上运行，也可以在远程机器上运行。\n\n- group a:\n    - service a:\n        href: http://localhost/\n        description: this is my service\n        server: my-server\n        container: my-container\n\n- group b:\n    - service b:\n        href: http://localhost/\n        description: this is another service\n        server: other-server\n        container: other-container\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n在启用了 docker 集成的服务中，单击状态标签将展开容器统计信息，您可以在那里查看 cpu、内存和网络活动。\n\n注意：这也可以通过showstats进行控制。有关更多信息，请参阅show docker stats。\n\n\n# 7、服务集成\n\n服务还可以附带一个服务小部件（或集成），该小部件独立于 docker 集成工作。\n\n您可以在 service widgets 页面上找到每个支持的集成的信息和配置。\n\n这是一个 radarr 和 sonarr 服务的示例，以及它们各自的集成。\n\n- group a:\n    - sonarr:\n        icon: sonarr.png\n        href: http://sonarr.host/\n        description: series management\n        widget:\n          type: sonarr\n          url: http://sonarr.host\n          key: apikeyapikeyapikeyapikeyapikey\n\n- group b:\n    - radarr:\n        icon: radarr.png\n        href: http://radarr.host/\n        description: movie management\n        widget:\n          type: radarr\n          url: http://radarr.host\n          key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n\n\n# 8、服务小部件\n\n除非另有说明，否则 url 不应以/或其他 api 路径结尾。每个小部件都会自行处理路径。\n\n每个服务都可以附加一个小部件（通常与服务类型相匹配，但不强制要求）。\n\n除了服务的 href 之外，您还可以指定打开该链接的目标位置。有关详细信息，请参阅 link target 。\n\n以 emby 为例，以下是如何附加 emby 服务小部件的示例。\n\n- emby:\n    icon: emby.png\n    href: http://emby.host.or.ip/\n    description: movies & tv shows\n    widget:\n      type: emby\n      url: http://emby.host.or.ip\n      key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n字段可见性\n\n每个小部件可以选择性地提供一个字段列表，指定哪些字段应该通过 fields 小部件属性可见。如果未指定字段，则将显示所有字段。fields 属性必须是有效的 yaml 字符串数组。以下是 sonarr 的示例条目，仅显示了几个字段。\n\n在任何情况下，如果没有指定 fields 属性，小部件将正常工作并显示所有字段。\n\n- sonarr:\n    icon: sonarr.png\n    href: http://sonarr.host.or.ip\n    widget:\n      type: sonarr\n      fields: ["wanted", "queued"]\n      url: http://sonarr.host.or.ip\n      key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 五、widgets.yaml\n\nhomepage 有两种类型的小部件：info（信息）和 service（服务）。下面我们将介绍每种类型以及如何配置它们。\n\n\n# 1、服务小部件\n\n服务小部件用于显示服务（通常是 web 服务或 api）的状态。服务（及其小部件）在services.yml文件中定义。以下是一个示例：\n\n- plex:\n    icon: plex.png\n    href: https://plex.my.host\n    description: watch movies and tv shows.\n    server: localhost\n    container: plex\n    widget:\n      type: tautulli\n      url: http://172.16.1.1:8181\n      key: aabbccddeeffgghhiijjkkllmmnnoo\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 2、信息小部件\n\n信息小部件用于在标题中显示信息，通常是关于您的系统或环境的信息。信息小部件在widgets.yml文件中定义。以下是一个示例：\n\n- openmeteo:\n    label: current\n    latitude: 36.66\n    longitude: -117.51\n    cache: 5\n\n\n1\n2\n3\n4\n5\n\n\n\n# 六、bookmarks.yaml\n\n书签功能与服务功能在分组和列表的工作方式上非常相似，只是它们更简单、更小，并且除了作为链接之外没有其他附加功能。\n\n * abbr 最好为两个字母，但不是强制性的。\n * 也可以像服务图标的选项那样为书签使用图标。如果同时提供图标和缩写，图标将优先显示。\n * 默认情况下，描述将使用链接的主机名，但您可以使用自定义描述来覆盖它。\n\n- developer:\n    - github:\n        - abbr: gh\n          href: https://github.com/\n\n- social:\n    - reddit:\n        - icon: reddit.png\n          href: https://reddit.com/\n          description: the front page of the internet\n\n- entertainment:\n    - youtube:\n        - abbr: yt\n          href: https://youtube.com/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n\n\n# 七、常用服务小部件\n\n\n# 1、qbittorrent\n\n使用与 web 登录相同的用户名和密码。\n\n允许的字段：[“leech 下载中”、“download 下载”、“seed 种子”、“upload 上传”]。\n\nwidget:\n  type: qbittorrent\n  url: http://qbittorrent.host.or.ip\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# 2、transmission\n\n使用与 web 登录相同的用户名和密码。\n\n允许的字段：[“leech 下载中”、“download 下载”、“seed 种子”、“upload 上传”]。\n\nwidget:\n  type: transmission\n  url: http://transmission.host.or.ip\n  username: username\n  password: password\n  rpcurl: /transmission/ # optional. matches the value of "rpc-url" in your transmission\'s settings.json file\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 3、emby\n\n您可以在“设置 settings”>“高级 advanced”>“api 密钥 api keys”中从 emby 内部创建 api 密钥\n\n从 v0.6.11 开始，该小部件支持字段[“电影 movies”、“系列 series”、“剧集 episodes”、“歌曲 songs”]，这些块在默认情况下被禁用，但可以通过enableblocks选项启用。“正在播放 ”功能（默认情况下启用）可以通过enablenowplaying选项禁用。\n\nwidget:\n  type: emby\n  url: http://emby.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enableblocks: true # optional, defaults to false\n  enablenowplaying: true # optional, defaults to true\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 4、jellyfin\n\n您可以在“设置 settings”>“高级 advanced”>“api 密钥 api keys”中从 jellyfin 内部创建 api 密钥\n\n从 v0.6.11 开始，该小部件支持字段[“电影 movies”、“系列 series”、“剧集 episodes”、“歌曲 songs”]，这些块在默认情况下被禁用，但可以通过enableblocks选项启用。“正在播放 ”功能（默认情况下启用）可以通过enablenowplaying选项禁用。\n\nwidget:\n  type: jellyfin\n  url: http://jellyfin.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enableblocks: true # optional, defaults to false\n  enablenowplaying: true # optional, defaults to true\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 5、plex\n\nplex 的核心 api 在某种程度上有所限制，但支持有关库大小和活动流数量的基本信息。要获取有关活动流的更详细信息，请查看 plex tautulli widget.\n\n支持的字段: ["streams", "albums", "movies", "tv"].\n\nwidget:\n  type: plex\n  url: http://plex.host.or.ip:32400\n  key: mytokenhere # see https://www.plexopedia.com/plex-media-server/general/plex-token/\n\n\n1\n2\n3\n4\n\n\n\n# 6、jackett\n\njackett 在使用小部件时不能使用任何身份验证。\n\n支持的字段: ["configured", "errored"].\n\nwidget:\n  type: jackett\n  url: http://jackett.host.or.ip\n\n\n1\n2\n3\n\n\n\n# 7、navidrome\n\ntoken 的值：由密码和 salt 的值组成的字符串的 md5 值\n\n允许的字段：此小部件没有可配置的字段。\n\nwidget:\n  type: navidrome\n  url: http://navidrome.host.or.ip:port\n  user: username\n  token: token #md5(password + salt)\n  salt: randomsalt\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 8、audiobookshelf\n\n通过以管理员身份登录至 audiobookshelf 网页应用程序，然后在 设置-用户 页面中找到你的账户并点击，就可以看到 api 令牌了。\n\n允许的字段： ["podcasts", "podcastsduration", "books", "booksduration"]。\n\n * podcasts: 表示播客节目。\n * podcastsduration: 表示播客节目的持续时间。\n * books: 表示有声书。\n * booksduration: 表示有声书的持续时间。\n\nwidget:\n  type: audiobookshelf\n  url: http://audiobookshelf.host.or.ip:port\n  key: audiobookshelflapikey\n\n\n1\n2\n3\n4\n\n\n\n# 9、nginx proxy manager\n\n使用用于访问 web ui 的相同管理员用户名和密码登录。\n\n允许的字段：[“enabled 已启用”、“disabled 已禁用”、“total 总计”]。\n\nwidget:\n  type: npm\n  url: http://npm.host.or.ip\n  username: admin_username\n  password: admin_password\n\n\n1\n2\n3\n4\n5\n\n\n\n# 10、tailscale\n\n您需要从 tailscale 仪表板的密钥页面生成一个 api 访问令牌。\n\n要查找您的设备 id，请转到machine overview page，然后选择您的机器。在“机器详情 machine details”部分，复制您的id。它将以cntrl结尾。\n\n允许的字段有: ["address", "last_seen", "expires"].\n\nwidget:\n  type: tailscale\n  deviceid: deviceid\n  key: tailscalekey\n\n\n1\n2\n3\n4\n\n\n\n# 11、home assistant\n\n您需要为现有的 home assistant 用户在其个人资料中生成一个长期有效的访问令牌。\n\n允许的字段有：["people_home", "lights_on", "switches_on"]。\n\n----------------------------------------\n\n最多可以通过自定义属性查询四个自定义状态和/或模板，就像下面的示例一样。只要定义了 fields 属性，custom 属性将不起作用。\n\n * state将查询指定entity_id的状态\n   * 状态标签和值可以由用户定义，并且可以引用花括号中的实体属性\n   * 如果未定义状态标签，将默认为"{attributes.friendly_name}"\n   * 如果未定义状态值，将默认为"{state} {attributes.unit_of_measurement}"\n * template将查询指定的模板，请参阅home assistant templating\n   * 如果未定义模板标签，将为空\n\nwidget:\n  type: homeassistant\n  url: http://homeassistant.host.or.ip:port\n  key: access_token\n  custom:\n    - state: sensor.total_power\n    - state: sensor.total_energy_today\n      label: energy today\n    - template: "{{ states.switch|selectattr(\'state\',\'equalto\',\'on\')|list|length }}"\n      label: switches on\n    - state: weather.forecast_home\n      label: wind speed\n      value: "{attributes.wind_speed} {attributes.wind_speed_unit}"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# 八、信息小部件\n\n\n# 1、logo\n\n可以显示 homepage 的 logo。\n\n- logo:\n    icon: /icons/homepage.png # 也可使用url来指向图像\n\n\n1\n2\n\n\n\n# 2、resources 资源信息\n\n您可以选择包含所有或部分可用资源。如果您不想看到某个资源，只需将其设置为 false。\n\n磁盘路径是由 df（mounted on）报告的路径，或者是磁盘的装载点。\n\ncpu 和内存资源信息是容器的使用情况，而glances 则显示安装它的主机的统计信息。\n\n注意：不幸的是，用于获取 cpu 温度的软件包（systeminformation）与某些设置不兼容，并且不会报告任何 cpu 温度值。\n\n任何要访问的磁盘都必须作为卷装载到容器中。\n\n- resources:\n    cpu: true\n    memory: true\n    disk: /disk/mount/path\n    cputemp: true\n    uptime: true\n    units: imperial # only used by cpu temp\n    refresh: 3000 # optional, in ms\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n您还可以通过label 选项进行分组，将资源分组到组名称下。\n\n- resources:\n    label: system\n    cpu: true\n    memory: true\n\n- resources:\n    label: storage\n    disk: /mnt/storage\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n产生的效果：\n\n\n\n如果您有多个磁盘，并希望将它们组合在同一个标签下，您可以传递一个路径数组来实现。\n\n- resources:\n    label: storage\n    disk:\n      - /mnt/storage\n      - /mnt/backup\n      - /mnt/media\n\n\n1\n2\n3\n4\n5\n6\n\n\n产生的效果：\n\n\n\n您还可以提供一个可选的expanded属性，将其设置为 true 可以显示有关资源的其他详细信息。当未提供时，默认情况下expanded属性设置为 false。\n\n- resources:\n    label: array disks\n    expanded: true\n    disk:\n      - /disk1\n      - /disk2\n      - /disk3\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n\n# 3、date & time 日期&时间\n\n这可以显示日期 和/或 时间，并可以使用国际日期时间格式进行详细配置。\n\n格式设置是与区域设置相关的，并以您期望的区域格式呈现日期，例如对于英文区域设置，日期格式为 9/16/22 下午 3:03，而对于德文区域设置，日期格式为 16.09.22 下午 15:03。您还可以使用 locale 选项为 datetime 小部件指定一个特定的区域设置（见下文）\n\n- datetime:\n    text_size: xl\n    format:\n      timestyle: short\n\n\n1\n2\n3\n4\n\n\n传递给 format 的任何选项都直接传递给国际日期时间格式，请参考 mdn 文档获取所有可用选项。\n\n有效的文本大小有 4xl, 3xl, 2xl, xl, md, sm, xs。\n\n以下是一些例子：\n\n# 13:37\nformat:\n  timestyle: short\n  hourcycle: h23\n\n\n1\n2\n3\n4\n\n\n# 1:37 pm\nformat:\n  timestyle: short\n  hour12: true\n\n\n1\n2\n3\n4\n\n\n# 1/23/22, 1:37 pm\nformat:\n  datestyle: short\n  timestyle: short\n  hour12: true\n\n\n1\n2\n3\n4\n5\n\n\n# 4 januari 2023 om 13:51:25 pst\nlocale: nl\nformat:\n  datestyle: long\n  timestyle: long\n\n\n1\n2\n3\n4\n5\n\n\n\n# 4、greeting 欢迎词\n\n可以显示简单的文本，配置如下：\n\n- greeting:\n    text_size: xl\n    text: greeting text\n\n\n1\n2\n3\n\n\n有效的文本大小有：4xl, 3xl, 2xl, xl, md, sm, xs.\n\n\n# 5、search 搜索栏\n\n您可以在顶部小部件区域添加一个搜索栏，该搜索栏可以使用 google 谷歌、duckduckgo、bing 必应、baidu 百度、brave 或任何其他支持 基本的?q= 搜索查询参数的 自定义provider 提供程序进行搜索。\n\n- search:\n    provider: google # google, duckduckgo, bing, baidu, brave or custom\n    focus: true # optional, will set focus to the search bar on page load\n    target: _blank # one of _self, _blank, _parent or _top\n\n\n1\n2\n3\n4\n\n\n或对于自定义搜索:\n\n- search:\n    provider: custom\n    url: https://lougle.com/?q=\n    target: _blank\n\n\n1\n2\n3\n4\n\n\n还可以通过下拉列表支持多个provider 提供程序（不包括自定义）：\n\n- search:\n    provider: [brave, google, duckduckgo]\n\n\n1\n2\n\n\n\n# 6、天气组件\n\n# 1、open-meteo 天气\n\n经纬度信息打开open-meteo 官网，搜索城市获取。\n\n\n\n然后在 widgets.yaml 文件中添加：\n\n- openmeteo:\n    label: 湘潭 # 可选，标识提供商\n    latitude: 28.11 # 纬度\n    longitude: 112.99 # 经度\n    timezone: asia/shanghai # 可选，时区属性，“asia/shanghai”表示位于上海时区\n    units: metric # 单位属性，可以选择“metric”（公制）或“imperial”（英制）\n    cache: 5 # 缓存api响应的时间，单位为分钟\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n如果不传递latitude纬度和longitude经度将使用您的当前位置。\n\n# 2、openweathermap\n\n所需的仅是免费套餐的"one call api"，您需要订阅并获取您的 api 密钥。\n\n- openweathermap:\n    label: kyiv #optional\n    latitude: 50.449684\n    longitude: 30.525026\n    units: metric # or imperial\n    provider: openweathermap\n    apikey: youropenweathermapkey # required only if not using provider, this reveals api key in requests\n    cache: 5 # time in minutes to cache api responses, to stay within limits\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n您可以选择不传递latitude纬度和longitude经度经度，小部件将使用您的当前位置（需要安全上下文，例如 https）。\n\n# 3、weather api\n\n注意：由于新用户不再提供免费的 weather api 套餐，此小部件被视为"不推荐使用"。请参考 openmeteo 或 openweathermap 小部件以获取替代方案。\n\n免费套餐就足够了，它有所需的全部内容，不过您需要注册并获取 api 密钥。\n\n- weatherapi:\n    label: kyiv # optional\n    latitude: 50.449684\n    longitude: 30.525026\n    units: metric # or imperial\n    apikey: yourweatherapikey\n    cache: 5 # time in minutes to cache api responses, to stay within limits\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n您可以选择不传递latitude纬度和longitude经度经度，小部件将使用您的当前位置（需要安全上下文，例如 https）。\n\n\n# 7、glances\n\n(可以查找glances服务小部件)\n\nglances 小部件可以监视主机或另一台机器的资源（cpu、内存、存储、温度和正常运行时间），并且可以与resources小部件匹配。您可以通过添加另一个配置块来创建多个实例。cputemp、uptime & disk 状态需要单独的 api 调用，因此默认情况下不启用。要启用 api，glances 需要在“web 服务器”模式下运行，请参阅glances 文档。\n\n- glances:\n    url: http://host.or.ip:port\n    username: user # optional if auth enabled in glances\n    password: pass # optional if auth enabled in glances\n    cpu: true # optional, enabled by default, disable by setting to false\n    mem: true # optional, enabled by default, disable by setting to false\n    cputemp: true # disabled by default\n    uptime: true # disabled by default\n    disk: / # disabled by default, use mount point of disk(s) in glances. can also be a list (see below)\n    expanded: true # show the expanded view\n    label: mymachine # optional\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n可以通过以下方式指定多个磁盘：\n\ndisk:\n  - /\n  - /boot\n  ...\n\n\n1\n2\n3\n4\n\n\n\n# 8、kubernetes\n\n这与 resources 小部件非常相似，但提供了有关 kubernetes 集群的资源信息。\n\n它提供 节点级别 和/或 集群级别 的 cpu 和内存使用情况。\n\n- kubernetes:\n    cluster:\n      # shows cluster-wide statistics\n      show: true\n      # shows the aggregate cpu stats\n      cpu: true\n      # shows the aggregate memory stats\n      memory: true\n      # shows a custom label\n      showlabel: true\n      label: "cluster"\n    nodes:\n      # shows node-specific statistics\n      show: true\n      # shows the cpu for each node\n      cpu: true\n      # shows the memory for each node\n      memory: true\n      # shows the label, which is always the node name\n      showlabel: true\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 9、longhorn\n\nlonghorn 小部件从 kubernetes 上的 longhorn 存储驱动程序中获取存储利用率指标。它的设计与 resource 小部件的磁盘表示类似。\n\n确切的指标应该与 longhorn 仪表板上看到的非常相似。\n\n它可以显示聚合指标 和/或 各个节点的指标。\n\n- longhorn:\n    # show the expanded view\n    expanded: true\n    # shows a node representing the aggregate values\n    total: true\n    # shows the node names as labels\n    labels: true\n    # show the nodes\n    nodes: true\n    # an explicit list of nodes to show. all are shown by default if "nodes" is true\n    include:\n      - node1\n      - node2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\nlonghorn url 和凭据存储在settings.yaml的providers部分。\n\n\n# 10、unifi controller\n\n(查找unifi 控制服务小部件)\n\n您可以通过 unifi（网络）控制器显示常规连接状态。进行身份验证时，您需要使用一个至少具有读取权限的本地帐户。\n\n如果没有提供可选的"site"参数，该小部件将使用控制器的默认站点。\n\n注意：如果您输入的凭据不正确，并收到“api 错误”，则可能需要重新创建容器以清除缓存。\n\n- unifi_console:\n    url: https://unifi.host.or.ip:port\n    username: user\n    password: pass\n    site: site name # optional\n\n\n1\n2\n3\n4\n5\n\n\n\n# 九、docker.yaml\n\ndocker 实例的配置位于 docker.yaml 文件中。支持使用 ip:port 和 socket 进行连接。\n\n对于 ip:port，只需确保你的 docker 实例已配置为接受通过 http api 的流量。\n\nmy-remote-docker:\n  host: 192.168.0.101\n  port: 2375\n\n\n1\n2\n3\n\n\n\n# 使用 docker tls\n\n由于 docker 支持使用 tls 和客户端证书身份验证进行连接，因此在连接到 http api 时可以包含 tls 详细信息。有关设置 docker 以接受 tls 连接以及生成密钥和证书的更多详细信息，请参阅docker 文档。文件条目是相对于 config 目录（docker.yaml文件的位置）的。\n\nmy-remote-docker:\n  host: 192.168.0.101\n  port: 275\n  tls:\n    keyfile: tls/key.pem\n    cafile: tls/ca.pem\n    certfile: tls/cert.pem\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 使用 docker socket proxy\n\n由于直接暴露 docker socket 存在安全风险，您可以使用docker-socket-proxy 容器在更受限制和更安全的 api 上暴露 docker socket。\n\n以下是一个示例的 docker-compose 文件，它将公开 docker socket，然后从 homepage 容器连接到它：\n\ndockerproxy:\n  image: ghcr.io/tecnativa/docker-socket-proxy:latest\n  container_name: dockerproxy\n  environment:\n    - containers=1 # allow access to viewing containers\n    - services=1 # allow access to viewing services (necessary when using docker swarm)\n    - tasks=1 # allow access to viewing tasks (necessary when using docker swarm)\n    - post=0 # disallow any post operations (effectively read-only)\n  ports:\n    - 127.0.0.1:2375:2375\n  volumes:\n    - /var/run/docker.sock:/var/run/docker.sock:ro # mounted as read-only\n  restart: unless-stopped\n\nhomepage:\n  image: ghcr.io/gethomepage/02.homepage导航:latest\n  container_name: 02.homepage导航\n  volumes:\n    - /path/to/config:/app/config\n  ports:\n    - 3000:3000\n  restart: unless-stopped\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n然后，在docker.yaml 设置文件中，您可以这样配置 docker 实例：\n\nmy-docker:\n  host: dockerproxy\n  port: 2375\n\n\n1\n2\n3\n\n\n\n# 直接使用 socket\n\n如果你希望直接使用 socket，首先得确保将本地 socket 传递给 docker 容器。\n\n> 为了直接使用 socket，homepage 页必须以 root 身份运行\n\nhomepage:\n  image: ghcr.io/gethomepage/02.homepage导航:latest\n  container_name: 02.homepage导航\n  volumes:\n    - /path/to/config:/app/config\n    - /var/run/docker.sock:/var/run/docker.sock # pass local proxy\n  ports:\n    - 3000:3000\n  restart: unless-stopped\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n如果您使用的是 docker run命令，则应该使用 -v /var/run/docker.sock:/var/run/docker.sock。\n\n然后，在您的 docker.yaml配置文件中，可以进行如下配置来设置 docker 实例：\n\nmy-docker:\n  socket: /var/run/docker.sock\n\n\n1\n2\n\n\n\n# services\n\n在配置好 docker 实例后，您可以将其应用到您的服务中，以显示统计信息和状态报告。\n\n以下是在您希望连接到 docker 的服务内部的示例配置：\n\n- emby:\n  icon: emby.png\n  href: "http://emby.home/"\n  description: media server\n  server: my-docker # the docker server that was configured\n  container: emby # the name of the container you\'d like to connect\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 自动服务发现\n\nhomepage 可以通过附加适当标签的容器实现自动服务发现功能。所有配置选项都可以使用点符号应用，以 homepage 开头。\n\n下面是上面显示的相同服务条目的示例，使用 docker 标签表示。\n\nservices:\n  emby:\n    image: lscr.io/linuxserver/emby:latest\n    container_name: emby\n    ports:\n      - 8096:8096\n    restart: unless-stopped\n    labels:\n      - 02.homepage导航.group=media\n      - 02.homepage导航.name=emby\n      - 02.homepage导航.icon=emby.png\n      - 02.homepage导航.href=http://emby.home/\n      - 02.homepage导航.description=media server\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n当您的 docker 实例配置正确时，该服务将被自动发现并添加到 homepage 中。您不需要指定 server或container的值，因为它们将被自动推断。\n\n使用 docker swarm 时，可以使用deploy/labels来配置 homepage.\n\n\n# 小部件 widgets\n\n除了标准的服务条目外，您还可以使用点符号配置小部件（widgets）。\n\nlabels:\n  - 02.homepage导航.group=media\n  - 02.homepage导航.name=emby\n  - 02.homepage导航.icon=emby.png\n  - 02.homepage导航.href=http://emby.home/\n  - 02.homepage导航.description=media server\n  - 02.homepage导航.widget.type=emby\n  - 02.homepage导航.widget.url=http://emby.home\n  - 02.homepage导航.widget.key=yourembyapikeyhere\n  - 02.homepage导航.widget.fields=["field1","field2"] # optional\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# docker swarm\n\n支持 docker swarm ，并且使用相同的server和container表示法指定 docker 服务。。要启用 swarm 支持，您需要在您的 docker.yaml 文件中包含一个 swarm 设置，例如：\n\nmy-docker:\n  socket: /var/run/docker.sock\n  swarm: true\n\n\n1\n2\n3\n\n\n为了使 自动服务发现 能够发现所有服务，得将 homepage 部署在一个管理节点上。在您的 stack.yaml 配置中，可以将部署要求设置为主节点（manager node），例如：\n\n....\n  deploy:\n    placement:\n      constraints:\n        - node.role == manager\n...\n\n\n1\n2\n3\n4\n5\n6\n\n\n为了在 docker swarm 中检测到每个服务，需要使用服务标签（service labels），而不是容器标签（container labels）。请将 homepage 的标签配置如下：\n\n....\n  deploy:\n    labels:\n      - 02.homepage导航.icon=foobar\n...\n\n\n1\n2\n3\n4\n5\n\n\n\n# 排序 ordering\n\n从 v0.6.4 版本开始，发现的服务可以包括一个可选的权重字段来确定排序顺序，具体规则如下：\n\n * 发现的服务的默认权重为 0。\n * 配置的服务的默认权重是它们在其组内的索引值乘以 100，即 (索引 + 1) * 100。\n * 如果两个项目具有相同的权重值，则它们将按名称排序。\n\n从 v0.6.4 开始，发现的服务可以包括一个可选的权重字段来确定排序，以便：\n\n发现的服务的默认权重为 0\n\n配置服务的默认权重是其组内的索引，按 100 缩放，即（索引+1）*100\n\n如果两个项目具有相同的权重值，则它们将按 nam 排序\n\n\n# 显示统计信息\n\n您可以通过单击状态指示器来显示 docker 统计信息，也可以通过以下方式对每个服务进行控制：\n\n- example service:\n  ...\n  showstats: true\n\n\n1\n2\n3\n\n\n可以参阅show docker stats。\n\n\n# 十、custom-css-js\n\n从 v0.6.30 版本开始，homepage 支持添加自定义 css 和 javascript。请注意自行承担风险。\n\n要添加自定义 css，只需编辑 配置 config 目录下的 custom.css 文件，同样地，要添加自定义 javascript，您需要编辑 custom.js文件。然后，您可以使用各种类/id 来定制 homepage 中的元素。\n\n您还可以使用自定义 css 或 javascript 为服务或书签设置特定的id，例如：\n\nservice:\n    id: myserviceid\n    icon: icon.png\n    ...\n\n\n1\n2\n3\n4\n\n\n\n# 十一、kubernetes\n\nkubernetes 连接具有以下要求：\n\n * kubernetes 版本 1.19+\n * metrics 服务\n * ingress 控制器\n\nkubernetes 连接是在 kubernetes.yaml 文件中配置的。有三种模式可供选择：\n\n * disabled - 禁用 kubernetes 连接功能\n * default - 使用默认的 kubeconfig 配置文件解析 c- luster - 在集群中使用服务账户进行连接\n\nmode: default\n\n\n1\n\n\n\n# 服务 services\n\n一旦配置了 kubernetes 连接，就可以配置各个服务来获取统计信息。当前仅支持 cpu 和内存。\n\n在你想要连接到 pod 的服务内部：\n\n- emby:\n  icon: emby.png\n  href: "http://emby.home/"\n  description: media server\n  namespace: media # the kubernetes namespace the app resides in\n  app: emby # the name of the deployed app\n\n\n1\n2\n3\n4\n5\n6\n\n\napp字段用于创建标签选择器，例如，在本例中，它将匹配具有标签 app.kubernetes.io/name=emby 的 pod。 然而在复杂或非典型的应用部署中，这可能是不够的。\n\n在这种情况下，可以使用 pod-selector 字段，任何字段选择器都可以与它一起使用，因此它可以提供一些非常强大的选择能力。\n\n例如，可以利用它将多个底层部署归类到一个应用程序下，从而查看高级别的聚合信息：\n\n- element chat:\n    icon: matrix-light.png\n    href: https://chat.example.com\n    description: matrix synapse powered chat\n    app: matrix-element\n    namespace: comms\n    pod-selector: >-\n      app.kubernetes.io/instance in (\n          matrix-element,\n          matrix-media-repo,\n          matrix-media-repo-postgresql,\n          matrix-synapse\n      )\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n> 将 pod-selector 设置为空字符串并不会将其禁用，实际上它将选择命名空间中的所有 pod。这是一种捕获单个命名空间中复杂应用（如 longhorn）的资源使用情况的有用方法。\n\n\n# 自动服务发现\n\nhomepage 功能支持通过 ingress 注解进行自动服务发现。所有配置选项都可以使用典型的注解语法来应用，以gethomepage.dev/开头。\n\napiversion: networking.k8s.io/v1\nkind: ingress\nmetadata:\n  name: emby\n  annotations:\n    gethomepage.dev/enabled: "true"\n    gethomepage.dev/description: media server\n    gethomepage.dev/group: media\n    gethomepage.dev/icon: emby.png\n    gethomepage.dev/name: emby\n    gethomepage.dev/widget.type: "emby"\n    gethomepage.dev/widget.url: "https://emby.example.com"\n    gethomepage.dev/pod-selector: ""\n    gethomepage.dev/weight: 10 # optional\nspec:\n  rules:\n    - host: emby.example.com\n      http:\n        paths:\n          - backend:\n              service:\n                name: emby\n                port:\n                  number: 8080\n            path: /\n            pathtype: prefix\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n\n\n当 kubernetes 集群连接配置正确后，此服务将自动被发现并添加到您的主页中。您不需要指定namespace或app，因为它们将自动推断出来。\n\n# traefik ingressroute 支持\n\nhomepage 还可以读取使用 traefik ingressroute 自定义资源定义定义的 ingress。由于 traefik 路由规则的复杂性，需要设置gethomepage.dev/href注解。\n\napiversion: traefik.io/v1alpha1\nkind: ingressroute\nmetadata:\n  name: emby\n  annotations:\n    gethomepage.dev/href: "https://emby.example.com"\n    gethomepage.dev/enabled: "true"\n    gethomepage.dev/description: media server\n    gethomepage.dev/group: media\n    gethomepage.dev/icon: emby.png\n    gethomepage.dev/name: emby\n    gethomepage.dev/widget.type: "emby"\n    gethomepage.dev/widget.url: "https://emby.example.com"\n    gethomepage.dev/pod-selector: ""\n    gethomepage.dev/weight: 10 # optional\nspec:\n  entrypoints:\n    - websecure\n  routes:\n    - kind: rule\n      match: host(`emby.example.com`)\n      services:\n        - kind: service\n          name: emby\n          namespace: emby\n          port: 8080\n          scheme: http\n          strategy: roundrobin\n          weight: 10\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n如果 href 属性不存在，homepage 将忽略该特定的 ingressroute。\n\n\n# 注意事项\n\n与 docker 服务发现类似，目前没有严格的顺序来发现服务，并且发现的服务将显示在services.yaml中指定的服务之上。\n\n\n# 十二、其它服务小部件\n\n\n# adguard home\n\n用户名和密码与登录 web 界面时使用的用户名和密码相同。\n\n允许的字段: ["queries", "blocked", "filtered", "latency"].\n\nwidget:\n  type: adguard\n  url: http://adguard.host.or.ip\n  username: admin\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# atsumeru\n\ndefine same username and password that is used for login from web or supported apps\n\nallowed fields: ["series", "archives", "chapters", "categories"].\n\nwidget:\n  type: atsumeru\n  url: http://atsumeru.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# authentik\n\nthis widget reads the number of active users in the system, as well as logins for the last 24 hours.\n\nyou will need to generate an api token for an existing user. to do so follow these steps:\n\n 1. navigate to the authentik admin portal\n 2. expand directory, the click tokens & app passwords\n 3. click the create button\n 4. fill out the dialog making sure to set intent to api token\n 5. click the create button on the dialog\n 6. click the copy button on the far right of the newly created api token\n\nallowed fields: ["users", "loginslast24h", "failedloginslast24h"].\n\nwidget:\n  type: authentik\n  url: http://authentik.host.or.ip:22070\n  key: api_token\n\n\n1\n2\n3\n4\n\n\n\n# autobrr\n\nfind your api key under settings > api keys.\n\nallowed fields: ["approvedpushes", "rejectedpushes", "filters", "indexers"].\n\nwidget:\n  type: autobrr\n  url: http://autobrr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# azure devops\n\nthis widget has 2 functions:\n\n 1. pipelines: checks if the relevant pipeline is running or not, and if not, reports the last status.\n    allowed fields: ["result", "status"].\n\n 2. pull requests: returns the amount of open prs, the amount of the prs you have open, and how many prs that you open are marked as \'approved\' by atleast 1 person and not yet completed.\n    allowed fields: ["totalprs", "myprs", "approved"].\n\nyou will need to generate a personal access token for an existing user, see the azure documentation\n\nwidget:\n  type: azuredevops\n  organization: myorganization\n  project: myproject\n  definitionid: pipelinedefinitionid # required for pipelines\n  branchname: branchname # optional for pipelines, leave empty for all\n  useremail: email # required for pull requests\n  repositoryid: prrepositoryid # required for pull requests\n  key: personalaccesstoken\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# bazarr\n\nfind your api key under settings > general.\n\nallowed fields: ["missingepisodes", "missingmovies"].\n\nwidget:\n  type: bazarr\n  url: http://bazarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# caddy\n\nallowed fields: ["upstreams", "requests", "requests_failed"].\n\nwidget:\n  type: caddy\n  url: http://caddy.host.or.ip:adminport # default admin port is 2019\n\n\n1\n2\n3\n\n\n\n# calendar\n\nthis widget shows monthly calendar, with optional integrations to show events from supported widgets.\n\nwidget:\n  type: calendar\n  firstdayinweek: sunday # optional - defaults to monday\n  integrations: # optional\n    - type: sonarr # active widget type that is currently enabled on 02.homepage导航 - possible values: radarr, sonarr, lidarr, readarr\n      service_group: media # group name where widget exists\n      service_name: sonarr # service name for that widget\n      color: teal # optional - defaults to pre-defined color for the service (teal for sonarr)\n      params: # optional - additional params for the service\n        unmonitored: true # optional - defaults to false, used with *arr stack\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\ncurrently integrated widgets are sonarr, radarr, lidarr and readarr.\n\nsupported colors can be found on color palette.\n\n\n# readarr\n\nfind your api key under settings > general.\n\nallowed fields: ["wanted", "queued", "books"].\n\nwidget:\n  type: readarr\n  url: http://readarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# calibre-web\n\nnote: this widget requires a feature of calibre-web that has not yet been distributed in versioned release. the code is contained in "nightly" lsio builds after 25/8/23 or running the calibre-web source code including commit 0499e57.\n\nallowed fields: ["books", "authors", "categories", "series"].\n\nwidget:\n  type: calibreweb\n  url: http://your.calibreweb.host:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# changedetection.io\n\nfind your api key under settings > api.\n\nwidget:\n  type: changedetectionio\n  url: http://changedetection.host.or.ip:port\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# channels dvr server\n\nwidget:\n  type: channelsdvrserver\n  url: http://192.168.1.55:8089\n\n\n1\n2\n3\n\n\n\n# cloudflare tunnels\n\nas of v0.6.10 this widget no longer accepts a cloudflare global api key (or account email) due to security concerns. instead, you should setup an api token which only requires the permissions account.cloudflare tunnel:read.\n\nallowed fields: ["status", "origin_ip"].\n\nwidget:\n  type: cloudflared\n  accountid: accountid # from zero trust dashboard url e.g. https://one.dash.cloudflare.com/<accountid>/home/quick-start\n  tunnelid: tunnelid # found in tunnels dashboard under the tunnel name\n  key: cloudflareapitoken # api token with `account.cloudflare tunnel:read` https://dash.cloudflare.com/profile/api-tokens\n\n\n1\n2\n3\n4\n5\n\n\n\n# coin market cap\n\nget your api key from your coinmarketcap pro dashboard.\n\nallowed fields: no configurable fields for this widget.\n\nwidget:\n  type: coinmarketcap\n  currency: gbp # optional\n  symbols: [btc, ltc, eth]\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n5\n\n\nyou can also specify slugs instead of symbols (since symbols aren\'t garaunteed to be unique). if you supply both, slugs will be used. for example:\n\nwidget:\n  type: coinmarketcap\n  slugs: [chia-network, uniswap]\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# custom api\n\nthis widget can show information from custom self-hosted or third party api.\n\nfields need to be defined in the mappings section yaml object to correlate with the value in the apis json object. final field definition needs to be the key with the desired value information.\n\nwidget:\n  type: customapi\n  url: http://custom.api.host.or.ip:port/path/to/exact/api/endpoint\n  refreshinterval: 10000 # optional - in milliseconds, defaults to 10s\n  username: username # auth - optional\n  password: password # auth - optional\n  method: get # optional, e.g. post\n  headers: # optional, must be object, see below\n  mappings:\n    - field: key # needs to be yaml string or object\n      label: field 1\n      format: text # optional - defaults to text\n    - field: # needs to be yaml string or object\n        path:\n          to: key2\n      format: number # optional - defaults to text\n      label: field 2\n    - field: # needs to be yaml string or object\n        path:\n          to:\n            another: key3\n      label: field 3\n      format: percent # optional - defaults to text\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\nsupported formats for the values are text, number, float, percent, bytes and bitrate.\n\n\n# example\n\nfor the following json object from the api:\n\n{\n  "id": 1,\n  "name": "rick sanchez",\n  "status": "alive",\n  "species": "human",\n  "gender": "male",\n  "origin": {\n    "name": "earth (c-137)"\n  },\n  "locations": [\n    {\n      "name": "earth (c-137)"\n    },\n    {\n      "name": "citadel of ricks"\n    }\n  ]\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ndefine the mappings section as an aray, for example:\n\nmappings:\n  - field: name # rick sanchez\n    label: name\n  - field: status # alive\n    label: status\n  - field:\n      origin: name # earth (c-137)\n    label: origin\n  - field:\n      locations:\n        1: name # citadel of ricks\n    label: location\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# data transformation\n\nyou can manipulate data with the following tools remap, scale and suffix, for example:\n\n- field: key4\n  label: field 4\n  format: text\n  remap:\n    - value: 0\n      to: none\n    - value: 1\n      to: connected\n    - any: true # will map all other values\n      to: unknown\n- field: key5\n  label: power\n  format: float\n  scale: 0.001 # can be number or string e.g. 1/16\n  suffix: kw\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# custom headers\n\npass custom headers using the headers option, for example:\n\nheaders:\n  x-api-token: token\n\n\n1\n2\n\n\n\n# deluge\n\nuses the same password used to login to the webui, see the deluge faq.\n\nallowed fields: ["leech", "download", "seed", "upload"].\n\nwidget:\n  type: deluge\n  url: http://deluge.host.or.ip\n  password: password # webui password\n\n\n1\n2\n3\n4\n\n\n\n# synology disk station\n\nnote: the widget is not compatible with 2fa.\n\nan optional \'volume\' parameter can be supplied to specify which volume\'s free space to display when more than one volume exists. the value of the parameter must be in form of volume_n, e.g. to display free space for volume2, volume_2 should be set as \'volume\' value. if omitted, first returned volume\'s free space will be shown (not guaranteed to be volume1).\n\nallowed fields: ["uptime", "volumeavailable", "resources.cpu", "resources.mem"].\n\nto access these system metrics you need to connect to the diskstation with an account that is a member of the default administrators group. that is because these metrics are requested from the api\'s syno.core.system part that is only available to admin users. in order to keep the security impact as small as possible we can set the account in dsm up to limit the user\'s permissions inside the synology system. in dsm 7.x, for instance, follow these steps:\n\n 1. create a new user, i.e. remote_stats.\n 2. set up a strong password for the new user\n 3. under the user groups tab of the user config dialogue check the box for administrators.\n 4. on the permissions tab check the top box for no access, effectively prohibiting the user from accessing anything in the shared folders.\n 5. under applications check the box next to deny in the header to explicitly prohibit login to all applications.\n 6. now only allow login to the download station application, either by\n    * unchecking deny in the respective row, or (if inheriting permission doesn\'t work because of other group settings)\n    * checking allow for this app, or\n    * checking by ip for this app to limit the source of login attempts to one or more ip addresses/subnets.\n 7. when the preview column shows allow in the download station row, click save.\n\nnow configure the widget with the correct login information and test it.\n\nif you encounter issues during testing, make sure to uncheck the option for automatic blocking due to invalid logins under control panel > security > protection. if desired, this setting can be reactivated once the login is established working.\n\nwidget:\n  type: diskstation\n  url: http://diskstation.host.or.ip:port\n  username: username\n  password: password\n  volume: volume_n # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# synology download station\n\nnote: the widget is not compatible with 2fa.\n\nallowed fields: ["leech", "download", "seed", "upload"].\n\nwidget:\n  type: downloadstation\n  url: http://downloadstation.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# evcc\n\nallowed fields: ["pv_power", "grid_power", "home_power", "charge_power].\n\nwidget:\n  type: evcc\n  url: http://evcc.host.or.ip:port\n\n\n1\n2\n3\n\n\n\n# fileflows\n\nallowed fields: ["queue", "processing", "processed", "time"].\n\nwidget:\n  type: fileflows\n  url: http://your.fileflows.host:port\n\n\n1\n2\n3\n\n\n\n# flood\n\nallowed fields: ["leech", "download", "seed", "upload"].\n\nwidget:\n  type: flood\n  url: http://flood.host.or.ip\n  username: username # if set\n  password: password # if set\n\n\n1\n2\n3\n4\n5\n\n\n\n# freshrss\n\nplease refer to enable the api in freshrss for the "api password" to be entered in the password field.\n\nallowed fields: ["subscriptions", "unread"].\n\nwidget:\n  type: freshrss\n  url: http://freshrss.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# gamedig\n\nuses the gamedig library to get game server information for any supported server type.\n\nallowed fields (limited to a max of 4): ["status", "name", "map", "currentplayers", "players", "maxplayers", "bots", "ping"].\n\nwidget:\n  type: gamedig\n  servertype: csgo # see https://github.com/gamedig/node-gamedig#games-list\n  url: udp://server.host.or.ip:port\n\n\n1\n2\n3\n4\n\n\n\n# ghostfolio\n\nauthentication requires manually obtaining a bearer token which can be obtained by make a post request to the api e.g.\n\ncurl -x post http://localhost:3333/api/v1/auth/anonymous -h \'content-type: application/json\' -d \'{ "accesstoken": "security_token_of_account" }\'\n\n\n1\n\n\nsee the official docs.\n\nnote that the bearer token is valid for 6 months, after which a new one must be generated.\n\nallowed fields: ["gross_percent_today", "gross_percent_1y", "gross_percent_max"]\n\nwidget:\n  type: ghostfolio\n  url: http://ghostfoliohost:port\n  key: ghostfoliobearertoken\n\n\n1\n2\n3\n4\n\n\n\n# glances\n\n(find the glances information widget here)\n\nthe glances widget allows you to monitor the resources (cpu, memory, diskio, sensors & processes) of host or another machine. you can have multiple instances by adding another service block.\n\nwidget:\n  type: glances\n  url: http://glances.host.or.ip:port\n  username: user # optional if auth enabled in glances\n  password: pass # optional if auth enabled in glances\n  metric: cpu\n\n\n1\n2\n3\n4\n5\n6\n\n\nplease note, this widget does not need an href, icon or description on its parent service. to achive the same effect as the examples above, see as an example:\n\n- cpu usage:\n    widget:\n      type: glances\n      url: http://glances.host.or.ip:port\n      metric: cpu\n- network usage:\n    widget:\n      type: glances\n      url: http://glances.host.or.ip:port\n      metric: network:enp0s25\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# metrics\n\nthe metric field in the configuration determines the type of system monitoring data to be displayed. here are the supported metrics:\n\ninfo: system information. shows the system\'s hostname, os, kernel version, cpu type, cpu usage, ram usage and swap usage.\n\ncpu: cpu usage. shows how much of the system\'s computational resources are currently being used.\n\nmemory: memory usage. shows how much of the system\'s ram is currently being used.\n\nprocess: top 5 processes based on cpu usage. gives an overview of which processes are consuming the most resources.\n\nnetwork:<interface_name>: network data usage for the specified interface. replace <interface_name> with the name of your network interface, e.g., network:enp0s25, as specificed in glances.\n\nsensor:<sensor_id>: temperature of the specified sensor, typically used to monitor cpu temperature. replace <sensor_id> with the name of your sensor, e.g., sensor:package id 0 as specificed in glances.\n\ndisk:<disk_id>: disk i/o data for the specified disk. replace <disk_id> with the id of your disk, e.g., disk:sdb, as specificed in glances.\n\ngpu:<gpu_id>: gpu usage for the specified gpu. replace <gpu_id> with the id of your gpu, e.g., gpu:0, as specificed in glances.\n\nfs:<mnt_point>: disk usage for the specified mount point. replace <mnt_point> with the path of your disk, e.g., /mnt/storage, as specificed in glances.\n\n\n# views\n\nall widgets offer an alternative to the full or "graph" view, which is the compact, or "graphless" view.\n\nto switch to the alternative "graphless" view, simply passs chart: false as an option to the widget, like so:\n\n- network usage:\n    widget:\n      type: glances\n      url: http://glances.host.or.ip:port\n      metric: network:enp0s25\n      chart: false\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# gluetun\n\nrequires http control server options to be enabled.\n\nallowed fields: ["public_ip", "region", "country"].\n\nwidget:\n  type: gluetun\n  url: http://gluetun.host.or.ip\n\n\n1\n2\n3\n\n\n\n# gotify\n\nget a gotify client token from an existing client or create a new one on your gotify admin page.\n\nallowed fields: ["apps", "clients", "messages"].\n\nwidget:\n  type: gotify\n  url: http://gotify.host.or.ip\n  key: clientoken\n\n\n1\n2\n3\n4\n\n\n\n# grafana\n\nallowed fields: ["dashboards", "datasources", "totalalerts", "alertstriggered"].\n\nwidget:\n  type: grafana\n  url: http://grafana.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# hdhomerun\n\nallowed fields: ["channels", "hd"].\n\nwidget:\n  type: hdhomerun\n  url: http://hdhomerun.host.or.ip\n\n\n1\n2\n3\n\n\n\n# health checks\n\nto use the health checks widget, you first need to generate an api key. to do this, follow these steps:\n\n 1. go to settings in your check dashboard.\n 2. click on api key (read-only) and then click create.\n 3. copy the api key that is generated for you.\n\nallowed fields: ["status", "last_ping"].\n\nwidget:\n  type: healthchecks\n  url: http://healthchecks.host.or.ip:port\n  key: <your_api_key>\n  uuid: <your_check_uuid>\n\n\n1\n2\n3\n4\n5\n\n\n\n# homebridge\n\nthe homebridge api is actually provided by the config ui x plugin that has been included with homebridge for a while, still it is required to be installed for this widget to work.\n\nallowed fields: ["updates", "child_bridges"].\n\nwidget:\n  type: homebridge\n  url: http://homebridge.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# immich\n\nallowed fields: ["users" ,"photos", "videos", "storage"].\n\nnote that api key must be from admin user.\n\nwidget:\n  type: immich\n  url: http://immich.host.or.ip\n  key: adminapikeyadminapikeyadminapikey\n\n\n1\n2\n3\n4\n\n\n\n# service widgets\n\n\n# jdownloader\n\nbasic widget to show number of items in download queue, along with the queue size and current download speed.\n\nallowed fields: ["downloadcount", "downloadtotalbytes","downloadbytesremaining", "downloadspeed"].\n\nwidget:\n  type: jdownloader\n  username: jdownloader username\n  password: jdownloader password\n  client: name of jdownloader instance\n\n\n1\n2\n3\n4\n5\n\n\n\n# jellyseerr\n\nfind your api key under settings > general > api key.\n\nallowed fields: ["pending", "approved", "available"].\n\nwidget:\n  type: jellyseerr\n  url: http://jellyseerr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# kavita\n\nuses the same username and password used to login from the web.\n\nallowed fields: ["seriescount", "totalfiles"].\n\nwidget:\n  type: kavita\n  url: http://kavita.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# komga\n\nuses the same username and password used to login from the web.\n\nallowed fields: ["libraries", "series", "books"].\n\nwidget:\n  type: komga\n  url: http://komga.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# kopia\n\nallowed fields: ["status", "size", "lastrun", "nextrun"].\n\nyou may optionally pass values for snapshothost and / or snapshotpath to select a specific backup source for the widget.\n\nwidget:\n  type: kopia\n  url: http://kopia.host.or.ip:port\n  username: username\n  password: password\n  snapshothost: hostname # optional\n  snapshotpath: path # optional\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# lidarr\n\nfind your api key under settings > general.\n\nallowed fields: ["wanted", "queued", "artists"].\n\nwidget:\n  type: lidarr\n  url: http://lidarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# mastodon\n\nuse the base url of the mastodon instance you\'d like to pull stats for. does not require authentication as the stats are part of the public api endpoints.\n\nallowed fields: ["user_count", "status_count", "domain_count"].\n\nwidget:\n  type: mastodon\n  url: https://mastodon.host.name\n\n\n1\n2\n3\n\n\n\n# mealie\n\ngenerate a user api key under profile > manage your api tokens > generate.\n\nallowed fields: ["recipes", "users", "categories", "tags"].\n\nwidget:\n  type: mealie\n  url: http://mealie-frontend.host.or.ip\n  key: mealieapitoken\n\n\n1\n2\n3\n4\n\n\n\n# medusa\n\nallowed fields: ["wanted", "queued", "series"].\n\nwidget:\n  type: medusa\n  url: http://medusa.host.or.ip:port\n  key: medusaapikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# mikrotik\n\nhttps may be required, per the documentation\n\nallowed fields: ["uptime", "cpuload", "memoryused", "numberofleases"].\n\nwidget:\n  type: mikrotik\n  url: https://mikrotik.host.or.ip\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# minecraft\n\nallowed fields: ["players", "version", "status"].\n\nwidget:\n  type: minecraft\n  url: udp://minecraftserveripordomain:port\n\n\n1\n2\n3\n\n\n\n# miniflux\n\napi key is found under settings > api keys\n\nallowed fields: ["unread", "read"].\n\nwidget:\n  type: miniflux\n  url: http://miniflux.host.or.ip:port\n  key: minifluxapikey\n\n\n1\n2\n3\n4\n\n\n\n# mjpeg\n\n\n\npass the stream url from a service like µstreamer or camera-streamer.\n\nwidget:\n  type: mjpeg\n  stream: http://mjpeg.host.or.ip/webcam/stream\n\n\n1\n2\n3\n\n\n\n# moonraker (klipper)\n\nallowed fields: ["printer_state", "print_status", "print_progress", "layers"].\n\nwidget:\n  type: moonraker\n  url: http://moonraker.host.or.ip:port\n\n\n1\n2\n3\n\n\n\n# mylar3\n\napi must be enabled in mylar3 settings.\n\nallowed fields: ["series", "issues", "wanted"].\n\nwidget:\n  type: mylar\n  url: http://mylar3.host.or.ip:port\n  key: yourmylar3apikey\n\n\n1\n2\n3\n4\n\n\n\n# nextcloud\n\nuse username & password, or the nc-token key. information about the token can be found under settings > system. if both are provided, nc-token will be used.\n\nallowed fields: ["cpuload", "memoryusage", "freespace", "activeusers", "numfiles", "numshares"].\n\nnote "cpuload" and "memoryusage" were deprecated in v0.6.18 and a maximum of 4 fields can be displayed.\n\nwidget:\n  type: nextcloud\n  url: https://nextcloud.host.or.ip:port\n  key: token\n\n\n1\n2\n3\n4\n\n\nwidget:\n  type: nextcloud\n  url: https://nextcloud.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# nextdns\n\napi key is found under account > api, profile id is found under setup > endpoints > id\n\nwidget:\n  type: nextdns\n  profile: profileid\n  key: yourapikeyhere\n\n\n1\n2\n3\n4\n\n\n\n# nzbget\n\nthis widget uses the same authentication method as your browser when logging in (http basic auth), and is often referred to as the controlusername and controlpassword inside of nzbget documentation.\n\nallowed fields: ["rate", "remaining", "downloaded"].\n\nwidget:\n  type: nzbget\n  url: http://nzbget.host.or.ip\n  username: controlusername\n  password: controlpassword\n\n\n1\n2\n3\n4\n5\n\n\n\n# octoprint\n\nallowed fields: ["printer_state", "temp_tool", "temp_bed", "job_completion"].\n\nwidget:\n  type: octoprint\n  url: http://octoprint.host.or.ip:port\n  key: youroctoprintapikey\n\n\n1\n2\n3\n4\n\n\n\n# omada\n\nthe widget supports controller versions 3, 4 and 5.\n\nallowed fields: ["connectedap", "activeuser", "alerts", "connectedgateways", "connectedswitches"].\n\nwidget:\n  type: omada\n  url: http://omada.host.or.ip:port\n  username: username\n  password: password\n  site: sitename\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# ombi\n\nfind your api key under settings > configuration > general.\n\nallowed fields: ["pending", "approved", "available"].\n\nwidget:\n  type: ombi\n  url: http://ombi.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# opendtu\n\nallowed fields: ["yieldday", "relativepower", "absolutepower", "limit"].\n\nwidget:\n  type: opendtu\n  url: http://opendtu.host.or.ip\n\n\n1\n2\n3\n\n\n\n# openmediavault\n\nprovides useful information from your openmediavault\n\nwidget:\n  type: openmediavault\n  url: http://omv.host.or.ip\n  username: admin\n  password: pass\n  method: services.getstatus # required\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# methods\n\nthe method field determines the type of data to be displayed and is required. supported methods:\n\nservices.getstatus: shows status of running services. allowed fields: ["running", "stopped", "total"]\n\nsmart.getlistbg: shows s.m.a.r.t. status from disks. allowed fields: ["passed", "failed"]\n\ndownloader.getdownloadlist: displays the number of tasks from the downloader plugin currently being downloaded and total. allowed fields: ["downloading", "total"]\n\n\n# opnsense\n\nthe api key & secret can be generated via the webui by creating a new user at system/access/users. ensure "generate a scrambled password to prevent local database logins for this user" is checked and then edit the effective privileges selecting only:\n\n * diagnostics: system activity\n * status: traffic graph\n\nfinally, create a new api key which will download an apikey.txt file with your key and secret in it. use the values as the username and password fields, respectively, in your homepage config.\n\nallowed fields: ["cpu", "memory", "wanupload", "wandownload"].\n\nwidget:\n  type: opnsense\n  url: http://opnsense.host.or.ip\n  username: key\n  password: secret\n\n\n1\n2\n3\n4\n5\n\n\n\n# overseerr\n\nfind your api key under settings > general.\n\nallowed fields: ["pending", "approved", "available", "processing"].\n\nwidget:\n  type: overseerr\n  url: http://overseerr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# paperless-ngx\n\nuse username & password, or the token key. information about the token can be found in the paperless-ngx api documentation. if both are provided, the token will be used.\n\nallowed fields: ["total", "inbox"].\n\nwidget:\n  type: paperlessngx\n  url: http://paperlessngx.host.or.ip:port\n  username: username\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\nwidget:\n  type: paperlessngx\n  url: http://paperlessngx.host.or.ip:port\n  key: token\n\n\n1\n2\n3\n4\n\n\n\n# pfsense\n\nthis widget requires the installation of the pfsense-api which is a 3rd party package for pfsense routers.\n\nonce pfsense api is installed, you can set the api to be read-only in system > api > settings.\n\ncurrently the only supported authentication mode is \'local database\'.\n\nwan interface to monitor can be defined by updating the wan param.\n\nload is returned instead of cpu utilization. this is a limitation in the pfsense api due to the complexity of this calculation. this may become available in future versions.\n\nallowed fields: ["load", "memory", "temp", "wanstatus", "wanip", "disk"] (maximum of 4)\n\nwidget:\n  type: pfsense\n  url: http://pfsense.host.or.ip:port\n  username: user\n  password: pass\n  wan: igb0\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# photoprism\n\nallowed fields: ["albums", "photos", "videos", "people"].\n\nwidget:\n  type: photoprism\n  url: http://photoprism.host.or.ip:port\n  username: admin\n  password: password\n\n\n1\n2\n3\n4\n5\n\n\n\n# pialert\n\nwidget for pialert.\n\nallowed fields: ["total", "connected", "new_devices", "down_alerts"].\n\nwidget:\n  type: pialert\n  url: http://ip:port\n\n\n1\n2\n3\n\n\n\n# pihole\n\nas of v2022.12 pihole requires the use of an api key if an admin password is set. older versions do not require any authentication even if the admin uses a password.\n\nallowed fields: ["queries", "blocked", "blocked_percent", "gravity"].\n\nwidget:\n  type: pihole\n  url: http://pi.hole.or.ip\n  key: yourpiholeapikey # optional\n\n\n1\n2\n3\n4\n\n\nadded in v0.1.0, udpated in v0.6.18\n\n\n# tautulli (plex)\n\nprovides detailed information about currently active streams. you can find the api key from inside tautulli at settings > web interface > api.\n\nallowed fields: no configurable fields for this widget.\n\nwidget:\n  type: tautulli\n  url: http://tautulli.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# portainer\n\nyou\'ll need to make sure you have the correct environment set for the integration to work properly. from the environments section inside of portainer, click the one you\'d like to connect to and observe the id at the end of the url (should be), something like #!/endpoints/1, here 1 is the value to set as the env value. in order to generate an api key, please follow the steps outlined here https://docs.portainer.io/api/access.\n\nallowed fields: ["running", "stopped", "total"].\n\nwidget:\n  type: portainer\n  url: https://portainer.host.or.ip:9443\n  env: 1\n  key: ptr_accesskeyaccesskeyaccesskeyaccesskey\n\n\n1\n2\n3\n4\n5\n\n\n\n# prometheus\n\nallowed fields: ["targets_up", "targets_down", "targets_total"]\n\nwidget:\n  type: prometheus\n  url: http://prometheushost:port\n\n\n1\n2\n3\n\n\n\n# prowlarr\n\nfind your api key under settings > general.\n\nallowed fields: ["numberofgrabs", "numberofqueries", "numberoffailgrabs", "numberoffailqueries"].\n\nwidget:\n  type: prowlarr\n  url: http://prowlarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# proxmox\n\nthis widget shows the running and total counts of both qemu vms and lx containers in the proxmox cluster. it also shows the cpu and memory usage of the first node in the cluster.\n\nyou will need to generate an api token for new or an existing user. here is an example of how to do this for a new user.\n\n 1.  navigate to the proxmox portal, click on datacenter\n 2.  expand permissions, click on groups\n 3.  click the create button\n 4.  name the group something informative, like api-ro-users\n 5.  click on the permissions "folder"\n 6.  click add -> group permission\n     * path: /\n     * group: group from bullet 4 above\n     * role: pveauditor\n     * propagate: checked\n 7.  expand permissions, click on users\n 8.  click the add button\n     * user name: something informative like api\n     * realm: linux pam standard authentication\n     * group: group from bullet 4 above\n 9.  expand permissions, click on api tokens\n 10. click the add button\n     * user: user from bullet 8 above\n     * token id: something informative like the application or purpose like homepage\n     * privilege separation: checked\n 11. go back to the "permissions" menu\n 12. click add -> api token permission\n     * path: /\n     * api token: select the token id created in step 10\n     * role: pve auditor\n     * propagate: checked\n\nuse username@pam!token id as the username (e.g api@pam!homepage) setting and secret as the password setting.\n\nallowed fields: ["vms", "lxc", "resources.cpu", "resources.mem"].\n\nyou can set the optional node setting when you want to show metrics for a single node. by default it will show the average for the complete cluster.\n\nwidget:\n  type: proxmox\n  url: https://proxmox.host.or.ip:8006\n  username: api_token_id\n  password: api_token_secret\n  node: pve-1 # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# proxmox backup server\n\nallowed fields: ["datastore_usage", "failed_tasks_24h", "cpu_usage", "memory_usage"].\n\nwidget:\n  type: proxmoxbackupserver\n  url: https://proxmoxbackupserver.host:port\n  username: api_token_id\n  password: api_token_secret\n\n\n1\n2\n3\n4\n5\n\n\n\n# pterodactyl\n\nallowed fields: ["nodes", "servers"]\n\nwidget:\n  type: pterodactyl\n  url: http://pterodactylhost:port\n  key: pterodactylapikey\n\n\n1\n2\n3\n4\n\n\n\n# pyload\n\nallowed fields: ["speed", "active", "queue", "total"].\n\nwidget:\n  type: pyload\n  url: http://pyload.host.or.ip:port\n  username: username\n  password: password # only needed if set\n\n\n1\n2\n3\n4\n5\n\n\n\n# qnap\n\nallowed fields: ["cpuusage", "memusage", "systemtempc", "poolusage", "volumeusage"].\n\nwidget:\n  type: qnap\n  url: http://qnap.host.or.ip:port\n  username: user\n  password: pass\n\n\n1\n2\n3\n4\n5\n\n\nif the qnap device has multiple volumes, the poolusage will be a sum of all volumes.\n\nif only a single volume needs to be tracked, add the following to your configuration and the widget will track this as volumeusage:\n\nvolume: volume name from qnap\n\n\n1\n\n\n\n# radarr\n\nfind your api key under settings > general.\n\nallowed fields: ["wanted", "missing", "queued", "movies"].\n\na detailed queue listing is disabled by default, but can be enabled with the enablequeue option.\n\nwidget:\n  type: radarr\n  url: http://radarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enablequeue: true # optional, defaults to false\n\n\n1\n2\n3\n4\n5\n\n\n\n# rutorrent\n\nthis requires the httprpc plugin to be installed and enabled, and is part of the default rutorrent plugins. if you have not explicitly removed or disable this plugin, it should be available.\n\nallowed fields: ["active", "upload", "download"].\n\nwidget:\n  type: rutorrent\n  url: http://rutorrent.host.or.ip\n  username: username # optional, false if not used\n  password: password # optional, false if not used\n\n\n1\n2\n3\n4\n5\n\n\n\n# sabnzbd\n\nfind your api key under config > general.\n\nallowed fields: ["rate", "queue", "timeleft"].\n\nwidget:\n  type: sabnzbd\n  url: http://sabnzbd.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# scrutiny\n\nallowed fields: ["passed", "failed", "unknown"].\n\nwidget:\n  type: scrutiny\n  url: http://scrutiny.host.or.ip\n\n\n1\n2\n3\n\n\n\n# sonarr\n\nfind your api key under settings > general.\n\nallowed fields: ["wanted", "queued", "series"].\n\na detailed queue listing is disabled by default, but can be enabled with the enablequeue option.\n\nwidget:\n  type: sonarr\n  url: http://sonarr.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n  enablequeue: true # optional, defaults to false\n\n\n1\n2\n3\n4\n5\n\n\n\n# speedtest tracker\n\nno extra configuration is required.\n\nthis widget is compatible with both alexjustesen/speedtest-tracker and henrywhitaker3/speedtest-tracker.\n\nallowed fields: ["download", "upload", "ping"].\n\nwidget:\n  type: speedtest\n  url: http://speedtest.host.or.ip\n\n\n1\n2\n3\n\n\n\n# syncthing relay server\n\npulls stats from the relay server. see here for more information on configuration.\n\nallowed fields: ["numactivesessions", "numconnections", "bytesproxied"].\n\nwidget:\n  type: strelaysrv\n  url: http://syncthing.host.or.ip:22070\n\n\n1\n2\n3\n\n\n\n# tdarr\n\nallowed fields: ["queue", "processed", "errored", "saved"].\n\nwidget:\n  type: tdarr\n  url: http://tdarr.host.or.ip\n\n\n1\n2\n3\n\n\n\n# traefik\n\nno extra configuration is required. if your traefik install requires authentication, include the username and password used to login to the web interface.\n\nallowed fields: ["routers", "services", "middleware"].\n\nwidget:\n  type: traefik\n  url: http://traefik.host.or.ip\n  username: username # optional\n  password: password # optional\n\n\n1\n2\n3\n4\n5\n\n\n\n# truenas\n\nallowed fields: ["load", "uptime", "alerts"].\n\nto create an api key, follow the official truenas documentation.\n\nwidget:\n  type: truenas\n  url: http://truenas.host.or.ip\n  username: user # not required if using api key\n  password: pass # not required if using api key\n  key: yourtruenasapikey # not required if using username / password\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# tube archivist\n\nrequires api key.\n\nallowed fields: ["downloads", "videos", "channels", "playlists"].\n\nwidget:\n  type: tubearchivist\n  url: http://tubearchivist.host.or.ip\n  key: apikeyapikeyapikeyapikeyapikey\n\n\n1\n2\n3\n4\n\n\n\n# unifi controller\n\n(find the unifi controller information widget here)\n\nyou can display general connectivity status from your unifi (network) controller. when authenticating you will want to use an account that has at least read privileges.\n\nan optional \'site\' parameter can be supplied, if it is not the widget will use the default site for the controller.\n\nallowed fields: ["uptime", "wan", "lan_users", "wlan_users"].\n\nwidget:\n  type: unifi\n  url: https://unifi.host.or.ip:port\n  username: username\n  password: password\n  site: site name # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\nadded in v0.4.18, updated in 0.6.7\n\n\n# unmanic\n\nallowed fields: ["active_workers", "total_workers", "records_total"].\n\nwidget:\n  type: unmanic\n  url: http://unmanic.host.or.ip:port\n\n\n1\n2\n3\n\n\n\n# uptime kuma\n\nas uptime kuma does not yet have a full api the widget uses data from a single "status page". as such you will need a status page setup with a group of monitored sites, which is where you get the slug (without the /status/ portion).\n\nallowed fields: ["up", "down", "uptime", "incident"].\n\nwidget:\n  type: uptimekuma\n  url: http://uptimekuma.host.or.ip:port\n  slug: statuspageslug\n\n\n1\n2\n3\n4\n\n\n\n# uptimerobot\n\nto generate an api key, select my settings, and either monitor-specific api key or read-only api key.\n\na monitor-specific api key will provide the following detailed information for the selected monitor:\n\n * current status\n * current uptime\n * date/time of last downtime\n * duration of last downtime\n\nallowed fields: ["status", "uptime", "lastdown", "downduration"].\n\na read-only api key will provide a summary of all monitors in your account:\n\n * number of \'up\' monitors\n * number of \'down\' monitors\n\nallowed fields: ["sitesup", "sitesdown"].\n\nwidget:\n  type: uptimerobot\n  url: https://api.uptimerobot.com\n  key: uptimerobotapitoken\n\n\n1\n2\n3\n4\n\n\n\n# urbackup\n\nthe urbackup widget retrieves the total number of clients that currently have no errors, have errors, or haven\'t backed up recently. clients are considered "errored" or "out of date" if either the file or image backups for that client have errors/are out of date, unless the client does not support image backups.\n\nthe default number of days that can elapse before a client is marked out of date is 3, but this value can be customized by setting the maxdays value in the config.\n\noptionally, the widget can also report the total amount of disk space consumed by backups. this is disabled by default, because it requires a second api call.\n\nnote: client status is only shown for backups that the specified user has access to. disk usage shown is the total for all backups, regardless of permissions.\n\nallowed fields: ["ok", "errored", "norecent", "totalused"]. note that totalused will not be shown unless explicitly included in fields.\n\nwidget:\n  type: urbackup\n  username: urbackupusername\n  password: urbackuppassword\n  url: http://urbackupurl:55414\n  maxdays: 5 # optional\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# watchtower\n\nto use this widget, watchtower needs to be configured to to enable metrics.\n\nallowed fields: ["containers_scanned", "containers_updated", "containers_failed"].\n\nwidget:\n  type: watchtower\n  url: http://your-ip-address:8080\n  key: demotoken\n\n\n1\n2\n3\n4\n\n\n\n# whats up docker\n\ncurrently requires unauthenticated whatsupdocker instance.\n\nallowed fields: ["monitoring", "updates"].\n\nwidget:\n  type: whatsupdocker\n  url: http://whatsupdocker:port\n\n\n1\n2\n3\n\n\n\n# xteve\n\nallowed fields: ["streams_all", "streams_active", "streams_xepg"].\n\nwidget:\n  type: xteve\n  url: http://xteve.host.or.ip\n  username: username # optional\n  password: password # optional\n\n\n1\n2\n3\n4\n5\n',charsets:{cjk:!0}},{title:"typecho个人博客",frontmatter:{title:"typecho个人博客",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/typecho/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/05.%E7%AC%94%E8%AE%B0/03.typecho%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html",relativePath:"02.工具/05.笔记/03.typecho个人博客.md",key:"v-0be1e874",path:"/tool/typecho/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:151},{level:2,title:"主题",slug:"主题",normalizedTitle:"主题",charIndex:320}],headersStr:"容器部署 初始化 主题",content:"# 容器部署\n\n1、绿联打开 Docker，搜索【80x86/typecho】，点击下载最新版本。\n\n\n\n2、创建容器\n\n1）存储空间：在 Docker 文件夹下新建一个 Typecho 文件夹，把它挂载，装载路径填/data\n\n\n\n2）端口：本地端口填写个未被占用的端口比如 9040。\n\n\n\n\n# 初始化\n\n1、我们打开浏览器输入 IP:9040，打开我们的 Typecho 博客安装程序，点下一步。\n\n\n\n2、自定义自己的管理账号密码，填上自己的常用邮箱，然后点开始安装。\n\n\n\n3、等待一分钟后网页创建完毕后输入 IP:9040/admin/index.php，进入自己的博客控制台。在控制台里我们可以自行设置我们的所有插件、设置和主题外观。\n\n\n\n\n# 主题\n\n主题模板网址：https://www.typecho.me/\n\n比如这个主题：\n\n\n\n下载完成之后把主题文件解压粘贴到 Docker 盘 Typecho 文件夹下的 themes 文件夹内。\n\n\n\n然后刷新一下我们的博客控制台，点击更改外观。\n\n\n\n点击启用后就可以启用我们的主题了。\n\n",normalizedContent:"# 容器部署\n\n1、绿联打开 docker，搜索【80x86/typecho】，点击下载最新版本。\n\n\n\n2、创建容器\n\n1）存储空间：在 docker 文件夹下新建一个 typecho 文件夹，把它挂载，装载路径填/data\n\n\n\n2）端口：本地端口填写个未被占用的端口比如 9040。\n\n\n\n\n# 初始化\n\n1、我们打开浏览器输入 ip:9040，打开我们的 typecho 博客安装程序，点下一步。\n\n\n\n2、自定义自己的管理账号密码，填上自己的常用邮箱，然后点开始安装。\n\n\n\n3、等待一分钟后网页创建完毕后输入 ip:9040/admin/index.php，进入自己的博客控制台。在控制台里我们可以自行设置我们的所有插件、设置和主题外观。\n\n\n\n\n# 主题\n\n主题模板网址：https://www.typecho.me/\n\n比如这个主题：\n\n\n\n下载完成之后把主题文件解压粘贴到 docker 盘 typecho 文件夹下的 themes 文件夹内。\n\n\n\n然后刷新一下我们的博客控制台，点击更改外观。\n\n\n\n点击启用后就可以启用我们的主题了。\n\n",charsets:{cjk:!0}},{title:"pandora",frontmatter:{title:"pandora",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/pandora/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/01.pandora.html",relativePath:"02.工具/10.其它工具/01.pandora.md",key:"v-12269d11",path:"/tool/pandora/",headers:[{level:2,title:"1、docker 部署",slug:"_1、docker-部署",normalizedTitle:"1、docker 部署",charIndex:50},{level:2,title:"2、网页部署",slug:"_2、网页部署",normalizedTitle:"2、网页部署",charIndex:151}],headersStr:"1、docker 部署 2、网页部署",content:"官网：https://hub.docker.com/r/pengzhile/pandora\n\n\n# 1、docker 部署\n\n1、下载好 pengzhile/pandora 镜像后，点击创建容器\n\n\n\n2、网络选择 host\n\n\n\n3、设置存储空间\n\n\n\n4、设置端口\n\n\n\n5、环境设置\n\n\n\n\n# 2、网页部署\n\n1、输入绿联 IP:端口进入网页，点击 go get it 去获取 token。\n\n\n\n2、点击直接登录\n\n\n\n3、输入注册的账号密码，然后点击获取\n\n\n\n4、点击文本信息复制 token\n\n\n\n5、选择使用 token 登录\n\n\n\n6、登陆后就可以使用了\n\n",normalizedContent:"官网：https://hub.docker.com/r/pengzhile/pandora\n\n\n# 1、docker 部署\n\n1、下载好 pengzhile/pandora 镜像后，点击创建容器\n\n\n\n2、网络选择 host\n\n\n\n3、设置存储空间\n\n\n\n4、设置端口\n\n\n\n5、环境设置\n\n\n\n\n# 2、网页部署\n\n1、输入绿联 ip:端口进入网页，点击 go get it 去获取 token。\n\n\n\n2、点击直接登录\n\n\n\n3、输入注册的账号密码，然后点击获取\n\n\n\n4、点击文本信息复制 token\n\n\n\n5、选择使用 token 登录\n\n\n\n6、登陆后就可以使用了\n\n",charsets:{cjk:!0}},{title:"vaultwarden密码管理器",frontmatter:{title:"vaultwarden密码管理器",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/vaultwarden/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/02.vaultwarden%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8.html",relativePath:"02.工具/10.其它工具/02.vaultwarden密码管理器.md",key:"v-1ea08276",path:"/tool/vaultwarden/",headers:[{level:2,title:"1、容器部署",slug:"_1、容器部署",normalizedTitle:"1、容器部署",charIndex:2},{level:2,title:"2、初始化",slug:"_2、初始化",normalizedTitle:"2、初始化",charIndex:84},{level:2,title:"3、浏览器插件",slug:"_3、浏览器插件",normalizedTitle:"3、浏览器插件",charIndex:220}],headersStr:"1、容器部署 2、初始化 3、浏览器插件",content:"# 1、容器部署\n\n1）在绿联云的镜像仓库搜索 vaultwarden，下载最新版本。\n\n\n\n2）创建容器\n\n基础设置\n\n\n\n存储空间设置\n\n\n\n端口设置\n\n\n\n\n# 2、初始化\n\n1、使用外网来登录（端口转发上面 80 对应的本地端口如 2080）进入网页，点击创建账户。\n\n\n\n2、按要求填写后点击创建账户。\n\n\n\n3、创建成功，点击继续\n\n\n\n4、使用主密码登录\n\n\n\n5、进入页面\n\n\n\n6、可以新建文件夹用来分类密码\n\n\n\n\n# 3、浏览器插件\n\n1、在浏览器安装对应的插件\n\n\n\n2、点击插件，输入邮箱后点击自托管。\n\n\n\n3、输入 docker 的公网地址后点击保存，回到登录页面点击继续。\n\n\n\n4、输入密码，点击登录。\n\n\n\n5、插件创建完成，可以点右上方的+添加密码项目。\n\n",normalizedContent:"# 1、容器部署\n\n1）在绿联云的镜像仓库搜索 vaultwarden，下载最新版本。\n\n\n\n2）创建容器\n\n基础设置\n\n\n\n存储空间设置\n\n\n\n端口设置\n\n\n\n\n# 2、初始化\n\n1、使用外网来登录（端口转发上面 80 对应的本地端口如 2080）进入网页，点击创建账户。\n\n\n\n2、按要求填写后点击创建账户。\n\n\n\n3、创建成功，点击继续\n\n\n\n4、使用主密码登录\n\n\n\n5、进入页面\n\n\n\n6、可以新建文件夹用来分类密码\n\n\n\n\n# 3、浏览器插件\n\n1、在浏览器安装对应的插件\n\n\n\n2、点击插件，输入邮箱后点击自托管。\n\n\n\n3、输入 docker 的公网地址后点击保存，回到登录页面点击继续。\n\n\n\n4、输入密码，点击登录。\n\n\n\n5、插件创建完成，可以点右上方的+添加密码项目。\n\n",charsets:{cjk:!0}},{title:"hass",frontmatter:{title:"hass",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/hass/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/03.hass.html",relativePath:"02.工具/10.其它工具/03.hass.md",key:"v-2eb7860a",path:"/tool/hass/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:3,title:"1、镜像下载",slug:"_1、镜像下载",normalizedTitle:"1、镜像下载",charIndex:11},{level:3,title:"2、创建容器",slug:"_2、创建容器",normalizedTitle:"2、创建容器",charIndex:57},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:215},{level:3,title:"1、初始化",slug:"_1、初始化",normalizedTitle:"1、初始化",charIndex:222},{level:3,title:"hacs",slug:"hacs",normalizedTitle:"hacs",charIndex:276},{level:3,title:"外网访问",slug:"外网访问",normalizedTitle:"外网访问",charIndex:671},{level:3,title:"日志",slug:"日志",normalizedTitle:"日志",charIndex:712}],headersStr:"容器部署 1、镜像下载 2、创建容器 使用 1、初始化 hacs 外网访问 日志",content:"# 容器部署\n\n\n# 1、镜像下载\n\n在镜像管理-常用镜像里下载 homeassistant 镜像。\n\n\n\n\n# 2、创建容器\n\n1）网络：修改为 host。\n\n\n\n2）先在 Docker 文件夹下新建一个 HomeAssistant 文件夹，然后选择 HomeAssistant 文件夹，设置装载路径为/config。\n\n\n\n3）“环境变量”里添加一个“变量名”为 TZ，值为 Asia/Shanghai 的变量。\n\n\n\n\n# 使用\n\n\n# 1、初始化\n\n1）打开 IP:8123 进入网页端，点击创建一个管理用户。\n\n\n\n2）进入页面\n\n\n\n\n# hacs\n\n1、下载最新版 hacs：https://github.com/hacs/integration/releases\n\n2、在 docekr-HomeAssistant 文件夹里新建个文件夹：custom_components，并把刚刚下载的 hacs 文件解压，然后上传进去。上传完后重启容器。\n\n\n\n3、点击配置-集成-添加集成，选择 hacs\n\n\n\n4、只有最后一项（实验性功能）是可选的，您需要接受上述所有内容，然后才能设置 HACS。\n\n\n\n5、在第一个屏幕上，您会看到一个设备代码，将其复制到剪贴板，然后单击 https://github.com/login/device 链接以继续设置。\n\n\n\n6、输入刚刚的设备代码来激活设备\n\n\n\n7、点击授权 hacs\n\n\n\n8、授权成功\n\n\n\n9、创建配置成功，点击完成\n\n\n\n10、可以在集成里看到 hacs\n\n\n\n\n# 外网访问\n\n点击配置-系统\n\n\n\n选择网络\n\n\n\n填写外网访问的网址\n\n\n\n\n# 日志\n\n1、如果外网访问显示以下错误\n\n\n\n2、点击配置-系统\n\n\n\n3、选择日志\n\n\n\n4、查看日志内容\n\n\n\n5、更改配置文件夹中 configuration.yaml 文件的内容\n\n",normalizedContent:"# 容器部署\n\n\n# 1、镜像下载\n\n在镜像管理-常用镜像里下载 homeassistant 镜像。\n\n\n\n\n# 2、创建容器\n\n1）网络：修改为 host。\n\n\n\n2）先在 docker 文件夹下新建一个 homeassistant 文件夹，然后选择 homeassistant 文件夹，设置装载路径为/config。\n\n\n\n3）“环境变量”里添加一个“变量名”为 tz，值为 asia/shanghai 的变量。\n\n\n\n\n# 使用\n\n\n# 1、初始化\n\n1）打开 ip:8123 进入网页端，点击创建一个管理用户。\n\n\n\n2）进入页面\n\n\n\n\n# hacs\n\n1、下载最新版 hacs：https://github.com/hacs/integration/releases\n\n2、在 docekr-homeassistant 文件夹里新建个文件夹：custom_components，并把刚刚下载的 hacs 文件解压，然后上传进去。上传完后重启容器。\n\n\n\n3、点击配置-集成-添加集成，选择 hacs\n\n\n\n4、只有最后一项（实验性功能）是可选的，您需要接受上述所有内容，然后才能设置 hacs。\n\n\n\n5、在第一个屏幕上，您会看到一个设备代码，将其复制到剪贴板，然后单击 https://github.com/login/device 链接以继续设置。\n\n\n\n6、输入刚刚的设备代码来激活设备\n\n\n\n7、点击授权 hacs\n\n\n\n8、授权成功\n\n\n\n9、创建配置成功，点击完成\n\n\n\n10、可以在集成里看到 hacs\n\n\n\n\n# 外网访问\n\n点击配置-系统\n\n\n\n选择网络\n\n\n\n填写外网访问的网址\n\n\n\n\n# 日志\n\n1、如果外网访问显示以下错误\n\n\n\n2、点击配置-系统\n\n\n\n3、选择日志\n\n\n\n4、查看日志内容\n\n\n\n5、更改配置文件夹中 configuration.yaml 文件的内容\n\n",charsets:{cjk:!0}},{title:"宝塔",frontmatter:{title:"宝塔",date:"2024-02-26T10:17:03.000Z",permalink:"/tool/baota/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/05.%E5%AE%9D%E5%A1%94.html",relativePath:"02.工具/10.其它工具/05.宝塔.md",key:"v-08f1aba4",path:"/tool/baota/",headers:[{level:2,title:"1、容器部署",slug:"_1、容器部署",normalizedTitle:"1、容器部署",charIndex:2},{level:2,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:451}],headersStr:"1、容器部署 初始化",content:"# 1、容器部署\n\n1、点击镜像管理-本地镜像-添加-官方库，镜像名称输入：kangkang223/baota，输入后等待一下，直到输入框下方显示出下拉列表，表示从 docker 源加载到数据，再点击确定，因为如果不等待下拉列表直接点确定，系统会报错并提示：请输入 url 地址。\n\n\n\n2、确定后弹出选择版本对话框，等待安装版本中的 latest 变成列表可选状态后点确定进行下载。\n\n\n\n3、在本地镜像中找到刚刚下载完成的镜像，点击创建容器。可以启用一下资源限制，勾选创建后启动容器，点击下一步。\n\n\n\n4、基础设置里指定重启策略\n\n\n\n5、网络为 host 模式\n\n\n\n6、在 docker 文件夹里新建一个 baota 文件夹，并新建两个子文件夹：backup 和 wwwroot，把它俩分别挂载为/www/backup、/www/wwwroot，类型都为读写\n\n\n\n7、因为我们选择了 host，所以不用修改这里。如果选择了 bridge 模式，这里自行添加需要使用的所有端口。\n\n\n\n\n# 初始化\n\n1、浏览器输入 IP：8888，会出现以下界面，别慌，这是正常的\n\n\n\n2、点击容器管理，找到安装好的宝塔容器，点击详情\n\n\n\n3、点击终端，点击连接，注意需要在局域网连接模式下\n\n\n\n4、连接成功后是这个界面\n\n\n\n5、复制命令：/etc/init.d/bt default，然后 Ctrl+Shift+V 来粘贴命令，粘贴完成后回车后得到面板的登录地址和账号密码\n\n\n\n6、进入登陆地址，并按它显示的用户名 kangkang，密码 f78679a7，来登录，发现以上信息无法成功登录，因为它是系统初始值。\n\n\n\n7、我们再次在终端中连接，并输入 cd /www/server/panel && btpython tools.py panel ugreen，其中 ugreen 就是我们设置的真实密码，你可以改成你自己的\n\n\n\n8、重新输入刚刚设置的密码，登陆成功。输入宝塔账号密码，绑定宝塔账号。\n\n\n\n9、如果没有账号点击登录上方的免费注册去注册一个。\n\n\n\n10、绑定宝塔账号后进入控制台，可以在面板设置里修改别名、默认端口、面板用户和密码。\n\n",normalizedContent:"# 1、容器部署\n\n1、点击镜像管理-本地镜像-添加-官方库，镜像名称输入：kangkang223/baota，输入后等待一下，直到输入框下方显示出下拉列表，表示从 docker 源加载到数据，再点击确定，因为如果不等待下拉列表直接点确定，系统会报错并提示：请输入 url 地址。\n\n\n\n2、确定后弹出选择版本对话框，等待安装版本中的 latest 变成列表可选状态后点确定进行下载。\n\n\n\n3、在本地镜像中找到刚刚下载完成的镜像，点击创建容器。可以启用一下资源限制，勾选创建后启动容器，点击下一步。\n\n\n\n4、基础设置里指定重启策略\n\n\n\n5、网络为 host 模式\n\n\n\n6、在 docker 文件夹里新建一个 baota 文件夹，并新建两个子文件夹：backup 和 wwwroot，把它俩分别挂载为/www/backup、/www/wwwroot，类型都为读写\n\n\n\n7、因为我们选择了 host，所以不用修改这里。如果选择了 bridge 模式，这里自行添加需要使用的所有端口。\n\n\n\n\n# 初始化\n\n1、浏览器输入 ip：8888，会出现以下界面，别慌，这是正常的\n\n\n\n2、点击容器管理，找到安装好的宝塔容器，点击详情\n\n\n\n3、点击终端，点击连接，注意需要在局域网连接模式下\n\n\n\n4、连接成功后是这个界面\n\n\n\n5、复制命令：/etc/init.d/bt default，然后 ctrl+shift+v 来粘贴命令，粘贴完成后回车后得到面板的登录地址和账号密码\n\n\n\n6、进入登陆地址，并按它显示的用户名 kangkang，密码 f78679a7，来登录，发现以上信息无法成功登录，因为它是系统初始值。\n\n\n\n7、我们再次在终端中连接，并输入 cd /www/server/panel && btpython tools.py panel ugreen，其中 ugreen 就是我们设置的真实密码，你可以改成你自己的\n\n\n\n8、重新输入刚刚设置的密码，登陆成功。输入宝塔账号密码，绑定宝塔账号。\n\n\n\n9、如果没有账号点击登录上方的免费注册去注册一个。\n\n\n\n10、绑定宝塔账号后进入控制台，可以在面板设置里修改别名、默认端口、面板用户和密码。\n\n",charsets:{cjk:!0}},{title:"微力同步",frontmatter:{title:"微力同步",date:"2024-03-28T16:18:03.000Z",permalink:"/tool/verysync/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/06.%E5%BE%AE%E5%8A%9B%E5%90%8C%E6%AD%A5.html",relativePath:"02.工具/10.其它工具/06.微力同步.md",key:"v-2805a304",path:"/tool/verysync/",headers:[{level:2,title:"NAS 端",slug:"nas-端",normalizedTitle:"nas 端",charIndex:2},{level:2,title:"电脑端",slug:"电脑端",normalizedTitle:"电脑端",charIndex:392},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:359}],headersStr:"NAS 端 电脑端 使用",content:"# NAS 端\n\n1、打开绿联 docker，点击镜像管理-镜像仓库，搜索 jonnyan404/verysync，点击下载最新版本的镜像。\n\n\n\n2、找到刚刚下载好的镜像，点击创建容器。名称可以自定义，勾选创建后启动容器。然后点击下一步。\n\n\n\n3、基础设置：改一下重启策略为容器退出时总是重启容器。\n\n\n\n4、存储空间：把要用来做同步文件夹的文件夹路径挂载上，类型一定要选读写。\n\n\n\n5、端口设置：容器端口是默认的 8886，本地端口随意一个你自己没有被占用过的就好。设置两个端口，TCP 和 UDP 各一个。然后点击下一步，再点击完成完成容器安装。\n\n\n\n6、在浏览器输入你 nas 的 IP:5151(这个 5151 就是我刚刚设置的本地端口，你改成自己的即可)进入页面。勾选接受协议，然后取个名字后点击开始使用。\n\n\n\n7、进入界面，点击左上角可以注册账号。\n\n\n\n\n# 电脑端\n\n微力同步官网：https://www.verysync.com/download.html\n\n在官网下载你自己的版本的软件，比如我是 win 版的。\n\n\n\n2、下载完成是个压缩包。解压后有个 exe 文件，点击打开，然后一样的接受协议和更改名称进入页面。\n\n\n\n\n# 使用\n\n微力同步教程：https://www.verysync.com/manual/users/start.html#add-folder\n\n以电脑同步到 nas 为例：\n\n1、创建同步目录：在电脑上打开微力同步的软件，点击“新建同步”按钮，在弹出的添加菜单中选择“标准文件夹”。然后选择要进行共享同步的文件夹。\n\n\n\n注意：创建目录时微力同步默认将选择的文件夹名作为此同步目录的名称，在创建成功后可通过选项设置修改目录名。\n\n2、同步目录创建成功后会立即显示出用于连接的链接和密钥，权限可以选择只读或者读写。\n\n\n\n * 只读密钥：一般用于分享给朋友或同事，但又不希望对方能修改或删除我们的文件。如果其它设备通过该只读密钥进行连接，对目录进行文件添加或修改将不会同步到其它电脑上，且数据不会影响拥有读写权限密钥的设备。\n * 读写密钥：一般用于自己多设备间资料的同步，希望将对目录的所有操作应用到所有电脑上。如果其它设备通过读写密钥进行连接，对目录进行文件添加/修改或删除操作，操作结果将同步到连接了该目录的所有设备上。\n\n这里也可以先关掉，因为可以点击分享按钮也会出现。\n\n\n\n点击设置按钮，可以进行一些更改，比如更改扫描时间：\n\n\n\n3、在 nas 端的微力同步中点击“新建同步”按钮，在弹出的添加菜单中选择“连接密钥或链接”。\n\n\n\n输入刚刚显示的链接/密钥，勾选添加后立即开始同步，点击下一步\n\n\n\n更改保存路径然后点击连接\n\n\n\n等一会可以看到同步完成的状态，也可以点击设备查看连接的设备。\n\n",normalizedContent:"# nas 端\n\n1、打开绿联 docker，点击镜像管理-镜像仓库，搜索 jonnyan404/verysync，点击下载最新版本的镜像。\n\n\n\n2、找到刚刚下载好的镜像，点击创建容器。名称可以自定义，勾选创建后启动容器。然后点击下一步。\n\n\n\n3、基础设置：改一下重启策略为容器退出时总是重启容器。\n\n\n\n4、存储空间：把要用来做同步文件夹的文件夹路径挂载上，类型一定要选读写。\n\n\n\n5、端口设置：容器端口是默认的 8886，本地端口随意一个你自己没有被占用过的就好。设置两个端口，tcp 和 udp 各一个。然后点击下一步，再点击完成完成容器安装。\n\n\n\n6、在浏览器输入你 nas 的 ip:5151(这个 5151 就是我刚刚设置的本地端口，你改成自己的即可)进入页面。勾选接受协议，然后取个名字后点击开始使用。\n\n\n\n7、进入界面，点击左上角可以注册账号。\n\n\n\n\n# 电脑端\n\n微力同步官网：https://www.verysync.com/download.html\n\n在官网下载你自己的版本的软件，比如我是 win 版的。\n\n\n\n2、下载完成是个压缩包。解压后有个 exe 文件，点击打开，然后一样的接受协议和更改名称进入页面。\n\n\n\n\n# 使用\n\n微力同步教程：https://www.verysync.com/manual/users/start.html#add-folder\n\n以电脑同步到 nas 为例：\n\n1、创建同步目录：在电脑上打开微力同步的软件，点击“新建同步”按钮，在弹出的添加菜单中选择“标准文件夹”。然后选择要进行共享同步的文件夹。\n\n\n\n注意：创建目录时微力同步默认将选择的文件夹名作为此同步目录的名称，在创建成功后可通过选项设置修改目录名。\n\n2、同步目录创建成功后会立即显示出用于连接的链接和密钥，权限可以选择只读或者读写。\n\n\n\n * 只读密钥：一般用于分享给朋友或同事，但又不希望对方能修改或删除我们的文件。如果其它设备通过该只读密钥进行连接，对目录进行文件添加或修改将不会同步到其它电脑上，且数据不会影响拥有读写权限密钥的设备。\n * 读写密钥：一般用于自己多设备间资料的同步，希望将对目录的所有操作应用到所有电脑上。如果其它设备通过读写密钥进行连接，对目录进行文件添加/修改或删除操作，操作结果将同步到连接了该目录的所有设备上。\n\n这里也可以先关掉，因为可以点击分享按钮也会出现。\n\n\n\n点击设置按钮，可以进行一些更改，比如更改扫描时间：\n\n\n\n3、在 nas 端的微力同步中点击“新建同步”按钮，在弹出的添加菜单中选择“连接密钥或链接”。\n\n\n\n输入刚刚显示的链接/密钥，勾选添加后立即开始同步，点击下一步\n\n\n\n更改保存路径然后点击连接\n\n\n\n等一会可以看到同步完成的状态，也可以点击设备查看连接的设备。\n\n",charsets:{cjk:!0}},{title:"dc容器一键更新",frontmatter:{title:"dc容器一键更新",date:"2024-03-28T14:12:03.000Z",permalink:"/tool/dc/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/04.dc%E5%AE%B9%E5%99%A8%E6%9B%B4%E6%96%B0.html",relativePath:"02.工具/10.其它工具/04.dc容器更新.md",key:"v-a270744c",path:"/tool/dc/",headers:[{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:299},{level:3,title:"绿联篇",slug:"绿联篇",normalizedTitle:"绿联篇",charIndex:306},{level:3,title:"ssh 篇",slug:"ssh-篇",normalizedTitle:"ssh 篇",charIndex:628},{level:3,title:"极空间篇",slug:"极空间篇",normalizedTitle:"极空间篇",charIndex:1031},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:82},{level:3,title:"登录",slug:"登录",normalizedTitle:"登录",charIndex:1331},{level:3,title:"更新",slug:"更新",normalizedTitle:"更新",charIndex:33},{level:3,title:"镜像",slug:"镜像",normalizedTitle:"镜像",charIndex:74},{level:3,title:"备份",slug:"备份",normalizedTitle:"备份",charIndex:100},{level:3,title:"更新自身",slug:"更新自身",normalizedTitle:"更新自身",charIndex:1941}],headersStr:"安装 绿联篇 ssh 篇 极空间篇 使用 登录 更新 镜像 备份 更新自身",content:"dc 是一个主打简单操作的 docker 管理工具：\n\n * 容器更新：可以直观的看到容器是否有更新然后一键更新，也可以很方便的更换容器版本\n * 镜像管理：对于不使用的镜像可以一键清理\n * 容器的备份与恢复：万一不幸遇到盘挂了或者更换设备，可以方便的一键复活。\n\ndc 项目 GitHub 地址：https://github.com/onlyLTY/dockerCopilot。好用的话可以打个星给予鼓励哦~\n\n> bug 反馈和建议联系方式： 部署遇到的问题和想要反馈的话都可以直接在上述的 Github 地址提 issue，或者发送到唯依佬的邮箱：onlylty@lty.wiki\n\n\n# 安装\n\n\n# 绿联篇\n\n1、打开绿联的 Docker，点击镜像管理-本地镜像-添加，输入0nlylty/dockercopilot:UGREEN，点击确认后会跳出选择版本的弹窗，继续点击确认即可，然后等待镜像拉取完成。\n\n\n\n2、找到刚刚拉取的镜像，点击创建容器，这里要使用高级模式，可以勾选创建后启动容器，然后点击下一步\n\n\n\n3、基础设置：重启策略设置为容器退出时总是重启容器\n\n\n\n4、网络：设置为 host 模式\n\n\n\n5、存储空间：自定义/data对应的路径，同时类型要改为读写\n\n\n\n6、环境：设置 secretKey 的值，也就是你的密码，注意：密码长度要大于 8 位，且不能为纯数字\n\n\n\n然后点击下一步，点击完成。至此，安装完成。\n\n\n# ssh 篇\n\n> 警告！！！群晖必须用 ssh 安装，否则容易出现问题\n\n1、连接 ssh，由于各系统不一样这里就不赘述，可自行使用搜索引擎\n\n2、ssh 命令，自行修改两个中文处的地方：\n\ndocker run -d --privileged -p 12712:12712 -e secretKey=自己设置密码，需要大于八位且非纯数字 -e DOCKER_HOST=unix:///var/run/docker.sock -e hubURL=https://docker.nju.edu.cn -v /var/run/docker.sock:/var/run/docker.sock -v 自己设置路径:/data --restart=always --name dockerCopilot 0nlylty/dockercopilot:UGREEN\n\n\n1\n\n\n3、ssh 执行修改好的命令。\n\n\n# 极空间篇\n\n1、打开极空间 Docker，点击镜像-仓库-自定义拉取\n\n\n\n2、输入0nlylty/dockercopilot:ZSPACE，点击拉取，等待拉取完成。\n\n\n\n3、在本地镜像找到拉取到的 dc 镜像，点击添加到容器\n\n\n\n4、基本设置：勾选极空间开机后自动启动此容器\n\n\n\n5、文件夹路径：需要挂载/data 目录来保存备份容器的文件，以及未来可能的配置文件\n\n\n\n6、网络：必须要修改为 host 模式\n\n\n\n7、环境：account 填写极空间的管理员账号。secretKey 填写一个自己设置的不少于 8 位的非纯数字密码\n\n\n\n8、点击应用。至此安装完成\n\n\n# 使用\n\n\n# 登录\n\n1、在浏览器输入 nas的ip:12712 ，打开页面后可以看到一个登录框，会要求输入网址、端口、密钥，填写完后点击 ok，如果正确的话，登录框就会消失。如果没有消失就说明有东西输错了，请仔细检查\n\n * 网址：写你 nas 的 ip，如果你是用域名访问就写域名\n * 端口：12712，这个是固定的。\n * 密钥 ：刚刚设置的 secretKey，如果忘记的话可以在容器的环境看。\n\n\n\n2、这是一个正常登录后的页面。会显示容器的状态、版本状态、使用的镜像和创建的时间这样一些基础信息。\n\n\n\n\n# 更新\n\n1、可以通过勾选多选框，对容器批量启动、停止、重启和更新。\n\n\n\n2、可以点击想要操作的容器，右侧会有弹出栏，这样就可以单独对容器执行重命名、更换版本、更新等操作了。\n\n\n\n3、如果进行了更新操作，右上角会有弹窗提示，且可以在进度里查看更新进度。\n\n\n\n\n# 镜像\n\n1、点击镜像目录，可以清晰的看到哪些镜像在使用中，哪些已经没有使用了。我们可以手动选择未使用的镜像然后点击右上角的删除来清理镜像。\n\n\n\n2、可以直接点击右上角的清理镜像，根据条件批量清理镜像。\n\n\n\n3、有时候会有特殊情况，普通删除无法删除镜像，这时候可以使用强制镜像，但请谨慎使用强制删除\n\n4、清理完镜像后右上角会有删除成功的提示。\n\n\n\n\n# 备份\n\n点击备份目录，可以备份容器的创建参数和根据备份文件恢复容器。\n\n\n\n\n# 更新自身\n\ndc 可以通过左下角的更新程序按钮来更新自身。这个按钮只有在有更新的时候才会显示，如果没有更新则不会显示。\n\n",normalizedContent:"dc 是一个主打简单操作的 docker 管理工具：\n\n * 容器更新：可以直观的看到容器是否有更新然后一键更新，也可以很方便的更换容器版本\n * 镜像管理：对于不使用的镜像可以一键清理\n * 容器的备份与恢复：万一不幸遇到盘挂了或者更换设备，可以方便的一键复活。\n\ndc 项目 github 地址：https://github.com/onlylty/dockercopilot。好用的话可以打个星给予鼓励哦~\n\n> bug 反馈和建议联系方式： 部署遇到的问题和想要反馈的话都可以直接在上述的 github 地址提 issue，或者发送到唯依佬的邮箱：onlylty@lty.wiki\n\n\n# 安装\n\n\n# 绿联篇\n\n1、打开绿联的 docker，点击镜像管理-本地镜像-添加，输入0nlylty/dockercopilot:ugreen，点击确认后会跳出选择版本的弹窗，继续点击确认即可，然后等待镜像拉取完成。\n\n\n\n2、找到刚刚拉取的镜像，点击创建容器，这里要使用高级模式，可以勾选创建后启动容器，然后点击下一步\n\n\n\n3、基础设置：重启策略设置为容器退出时总是重启容器\n\n\n\n4、网络：设置为 host 模式\n\n\n\n5、存储空间：自定义/data对应的路径，同时类型要改为读写\n\n\n\n6、环境：设置 secretkey 的值，也就是你的密码，注意：密码长度要大于 8 位，且不能为纯数字\n\n\n\n然后点击下一步，点击完成。至此，安装完成。\n\n\n# ssh 篇\n\n> 警告！！！群晖必须用 ssh 安装，否则容易出现问题\n\n1、连接 ssh，由于各系统不一样这里就不赘述，可自行使用搜索引擎\n\n2、ssh 命令，自行修改两个中文处的地方：\n\ndocker run -d --privileged -p 12712:12712 -e secretkey=自己设置密码，需要大于八位且非纯数字 -e docker_host=unix:///var/run/docker.sock -e huburl=https://docker.nju.edu.cn -v /var/run/docker.sock:/var/run/docker.sock -v 自己设置路径:/data --restart=always --name dockercopilot 0nlylty/dockercopilot:ugreen\n\n\n1\n\n\n3、ssh 执行修改好的命令。\n\n\n# 极空间篇\n\n1、打开极空间 docker，点击镜像-仓库-自定义拉取\n\n\n\n2、输入0nlylty/dockercopilot:zspace，点击拉取，等待拉取完成。\n\n\n\n3、在本地镜像找到拉取到的 dc 镜像，点击添加到容器\n\n\n\n4、基本设置：勾选极空间开机后自动启动此容器\n\n\n\n5、文件夹路径：需要挂载/data 目录来保存备份容器的文件，以及未来可能的配置文件\n\n\n\n6、网络：必须要修改为 host 模式\n\n\n\n7、环境：account 填写极空间的管理员账号。secretkey 填写一个自己设置的不少于 8 位的非纯数字密码\n\n\n\n8、点击应用。至此安装完成\n\n\n# 使用\n\n\n# 登录\n\n1、在浏览器输入 nas的ip:12712 ，打开页面后可以看到一个登录框，会要求输入网址、端口、密钥，填写完后点击 ok，如果正确的话，登录框就会消失。如果没有消失就说明有东西输错了，请仔细检查\n\n * 网址：写你 nas 的 ip，如果你是用域名访问就写域名\n * 端口：12712，这个是固定的。\n * 密钥 ：刚刚设置的 secretkey，如果忘记的话可以在容器的环境看。\n\n\n\n2、这是一个正常登录后的页面。会显示容器的状态、版本状态、使用的镜像和创建的时间这样一些基础信息。\n\n\n\n\n# 更新\n\n1、可以通过勾选多选框，对容器批量启动、停止、重启和更新。\n\n\n\n2、可以点击想要操作的容器，右侧会有弹出栏，这样就可以单独对容器执行重命名、更换版本、更新等操作了。\n\n\n\n3、如果进行了更新操作，右上角会有弹窗提示，且可以在进度里查看更新进度。\n\n\n\n\n# 镜像\n\n1、点击镜像目录，可以清晰的看到哪些镜像在使用中，哪些已经没有使用了。我们可以手动选择未使用的镜像然后点击右上角的删除来清理镜像。\n\n\n\n2、可以直接点击右上角的清理镜像，根据条件批量清理镜像。\n\n\n\n3、有时候会有特殊情况，普通删除无法删除镜像，这时候可以使用强制镜像，但请谨慎使用强制删除\n\n4、清理完镜像后右上角会有删除成功的提示。\n\n\n\n\n# 备份\n\n点击备份目录，可以备份容器的创建参数和根据备份文件恢复容器。\n\n\n\n\n# 更新自身\n\ndc 可以通过左下角的更新程序按钮来更新自身。这个按钮只有在有更新的时候才会显示，如果没有更新则不会显示。\n\n",charsets:{cjk:!0}},{title:"webssh",frontmatter:{title:"webssh",date:"2025-01-13T10:11:03.000Z",permalink:"/tool/webssh/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/08.webssh.html",relativePath:"02.工具/10.其它工具/08.webssh.md",key:"v-d1c7090a",path:"/tool/webssh/",headers:[{level:2,title:"docker-run 安装命令",slug:"docker-run-安装命令",normalizedTitle:"docker-run 安装命令",charIndex:2},{level:2,title:"compose 安装",slug:"compose-安装",normalizedTitle:"compose 安装",charIndex:205},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:752}],headersStr:"docker-run 安装命令 compose 安装 使用",content:"# docker-run 安装命令\n\ndocker run -d --net=host --log-driver json-file --log-opt max-file=1 --log-opt max-size=100m --restart always --name webssh -e TZ=Asia/Shanghai -e savePass=true jrohy/webssh\n\n\n\n1\n2\n\n\n\n# compose 安装\n\nservices:\n    webssh:\n        container_name: webssh\n        image: jrohy/webssh\n        restart: always\n        network_mode: host\n        environment:\n            - TZ=Asia/Shanghai\n            - savePass=true #是否保存密码，不想保存就改成false\n            - authInfo=xiaxiazi:test123 #登录web的用户名和密码\n            - port=5032 #访问web应用的端口号，取个未被占用的\n        logging:\n            driver: json-file\n            options:\n                max-file: 1\n                max-size: 100m\n        command: /start.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 使用\n\n通过nas的ip:port参数配置的端口号打开web端，填入环境变量里【authInfo】的设置的用户名密码进行登录。然后就来到了主页，输入ip，端口号，用户名，密码即可进行远程ssh登录。\n\n",normalizedContent:"# docker-run 安装命令\n\ndocker run -d --net=host --log-driver json-file --log-opt max-file=1 --log-opt max-size=100m --restart always --name webssh -e tz=asia/shanghai -e savepass=true jrohy/webssh\n\n\n\n1\n2\n\n\n\n# compose 安装\n\nservices:\n    webssh:\n        container_name: webssh\n        image: jrohy/webssh\n        restart: always\n        network_mode: host\n        environment:\n            - tz=asia/shanghai\n            - savepass=true #是否保存密码，不想保存就改成false\n            - authinfo=xiaxiazi:test123 #登录web的用户名和密码\n            - port=5032 #访问web应用的端口号，取个未被占用的\n        logging:\n            driver: json-file\n            options:\n                max-file: 1\n                max-size: 100m\n        command: /start.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# 使用\n\n通过nas的ip:port参数配置的端口号打开web端，填入环境变量里【authinfo】的设置的用户名密码进行登录。然后就来到了主页，输入ip，端口号，用户名，密码即可进行远程ssh登录。\n\n",charsets:{cjk:!0}},{title:"DDNS-TO",frontmatter:{title:"DDNS-TO",date:"2024-02-26T10:17:03.000Z",permalink:"/network/ddnsto/",categories:["网络"],tags:[null]},regularPath:"/03.%E7%BD%91%E7%BB%9C/01.ddnsto.html",relativePath:"03.网络/01.ddnsto.md",key:"v-e2faeb9a",path:"/network/ddnsto/",headers:[{level:2,title:"1、拉取镜像",slug:"_1、拉取镜像",normalizedTitle:"1、拉取镜像",charIndex:27},{level:2,title:"2、创建容器",slug:"_2、创建容器",normalizedTitle:"2、创建容器",charIndex:127},{level:2,title:"3、添加域名",slug:"_3、添加域名",normalizedTitle:"3、添加域名",charIndex:285}],headersStr:"1、拉取镜像 2、创建容器 3、添加域名",content:"适用于无公网者使用，免费版适用于要求不高者。\n\n\n# 1、拉取镜像\n\n在 docker-镜像管理-镜像仓库旁边搜索框中搜索“ddnsto”，选择 linkease/ddnsto 这个镜像，点击下载，若无版本需求的话选择 latest 即可。\n\n\n\n\n# 2、创建容器\n\n1、下载完成后即可在镜像管理-本地镜像中找到，点击创建容器。\n\n\n\n2、点击下一步。\n\n\n\n3、点击存储空间。选择存放配置文件的文件夹，挂载路径填/config，类型选读写。\n\n\n\n4、环境变量\n\n首先在ddnsto 官网的控制台中获取令牌。\n\n\n\n然后在 token 填入自己的令牌。\n\n\n\n\n# 3、添加域名\n\n进入 ddnsto 控制台，点击添加域名。填写域名映射：\n\n * 主域名填写你想要使用的外网地址，比如 qbitorrent 可以设置成 xxxqb。\n * 目标主机地址填写 docker 的内网地址+端口，比如 qbitorrent 可以设置成http://192.168.xx.xx:8080\n\n\n\n填写完成后点击添加，稍等片刻后便可使用外网登录自己创建的域名来访问 nas 里的 docker。",normalizedContent:"适用于无公网者使用，免费版适用于要求不高者。\n\n\n# 1、拉取镜像\n\n在 docker-镜像管理-镜像仓库旁边搜索框中搜索“ddnsto”，选择 linkease/ddnsto 这个镜像，点击下载，若无版本需求的话选择 latest 即可。\n\n\n\n\n# 2、创建容器\n\n1、下载完成后即可在镜像管理-本地镜像中找到，点击创建容器。\n\n\n\n2、点击下一步。\n\n\n\n3、点击存储空间。选择存放配置文件的文件夹，挂载路径填/config，类型选读写。\n\n\n\n4、环境变量\n\n首先在ddnsto 官网的控制台中获取令牌。\n\n\n\n然后在 token 填入自己的令牌。\n\n\n\n\n# 3、添加域名\n\n进入 ddnsto 控制台，点击添加域名。填写域名映射：\n\n * 主域名填写你想要使用的外网地址，比如 qbitorrent 可以设置成 xxxqb。\n * 目标主机地址填写 docker 的内网地址+端口，比如 qbitorrent 可以设置成http://192.168.xx.xx:8080\n\n\n\n填写完成后点击添加，稍等片刻后便可使用外网登录自己创建的域名来访问 nas 里的 docker。",charsets:{cjk:!0}},{title:"easyimage图床",frontmatter:{title:"easyimage图床",date:"2024-07-23T19:11:03.000Z",permalink:"/tool/easyimage/",categories:["工具"],tags:[null]},regularPath:"/02.%E5%B7%A5%E5%85%B7/10.%E5%85%B6%E5%AE%83%E5%B7%A5%E5%85%B7/07.%E5%9B%BE%E5%BA%8A.html",relativePath:"02.工具/10.其它工具/07.图床.md",key:"v-4e4c0bd2",path:"/tool/easyimage/",headers:[{level:2,title:"安装ddsderek/easyimage",slug:"安装ddsderek-easyimage",normalizedTitle:"安装ddsderek/easyimage",charIndex:2},{level:3,title:"绿联可视化安装",slug:"绿联可视化安装",normalizedTitle:"绿联可视化安装",charIndex:27},{level:3,title:"docker-compose.yml 安装：",slug:"docker-compose-yml-安装",normalizedTitle:"docker-compose.yml 安装：",charIndex:289},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:747}],headersStr:"安装ddsderek/easyimage 绿联可视化安装 docker-compose.yml 安装： 使用",content:"# 安装ddsderek/easyimage\n\n\n# 绿联可视化安装\n\n1、先在docker文件夹下建两个目录：config、i\n\n\n\n2、搜索ddsderek/easyimage镜像，并下载最新版\n\n\n\n3、创建容器\n\n * 基本信息里容器名称和CPU、内存这些自定义，开启容器自动重启\n   \n   \n\n * 存储空间挂载两个文件夹：config目录挂载为/app/web/config，i目录挂载为/app/web/i\n   \n   \n\n * 网络这里NAS端口随便填个未被占用的\n   \n   \n\n * 环境变量填下下面三个变量\n   \n   \n\n至此安装完成\n\n\n# docker-compose.yml 安装：\n\n也可以 compose安装：\n\nversion: '3.3'\nservices:\n  easyimage:\n    image: ddsderek/easyimage:latest\n    container_name: easyimage\n    ports:\n      - '8080:80'\n    environment:\n      - TZ=Asia/Shanghai\n      - PUID=1000\n      - PGID=1000\n    volumes:\n      - '/root/data/docker_data/easyimage/config:/app/web/config'\n      - '/root/data/docker_data/easyimage/i:/app/web/i'\n    restart: unless-stopped\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 使用\n\n1、登录IP:NAS端口，点击下一步\n\n\n\n2、域名可以填写内网网址/外网域名，这里我填写的是外网域名，记得统一，然后设置密码，点击开始安装\n\n\n\n3、登录后来到页面\n\n",normalizedContent:"# 安装ddsderek/easyimage\n\n\n# 绿联可视化安装\n\n1、先在docker文件夹下建两个目录：config、i\n\n\n\n2、搜索ddsderek/easyimage镜像，并下载最新版\n\n\n\n3、创建容器\n\n * 基本信息里容器名称和cpu、内存这些自定义，开启容器自动重启\n   \n   \n\n * 存储空间挂载两个文件夹：config目录挂载为/app/web/config，i目录挂载为/app/web/i\n   \n   \n\n * 网络这里nas端口随便填个未被占用的\n   \n   \n\n * 环境变量填下下面三个变量\n   \n   \n\n至此安装完成\n\n\n# docker-compose.yml 安装：\n\n也可以 compose安装：\n\nversion: '3.3'\nservices:\n  easyimage:\n    image: ddsderek/easyimage:latest\n    container_name: easyimage\n    ports:\n      - '8080:80'\n    environment:\n      - tz=asia/shanghai\n      - puid=1000\n      - pgid=1000\n    volumes:\n      - '/root/data/docker_data/easyimage/config:/app/web/config'\n      - '/root/data/docker_data/easyimage/i:/app/web/i'\n    restart: unless-stopped\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# 使用\n\n1、登录ip:nas端口，点击下一步\n\n\n\n2、域名可以填写内网网址/外网域名，这里我填写的是外网域名，记得统一，然后设置密码，点击开始安装\n\n\n\n3、登录后来到页面\n\n",charsets:{cjk:!0}},{title:"DDNS-GO",frontmatter:{title:"DDNS-GO",date:"2024-02-26T10:17:03.000Z",permalink:"/network/ddnsgo/",categories:["网络"],tags:[null]},regularPath:"/03.%E7%BD%91%E7%BB%9C/02.ddnsgo.html",relativePath:"03.网络/02.ddnsgo.md",key:"v-b209049a",path:"/network/ddnsgo/",headers:[{level:2,title:"1、域名申请",slug:"_1、域名申请",normalizedTitle:"1、域名申请",charIndex:47},{level:2,title:"2、域名解析",slug:"_2、域名解析",normalizedTitle:"2、域名解析",charIndex:368},{level:2,title:"3、AccessKey 创建",slug:"_3、accesskey-创建",normalizedTitle:"3、accesskey 创建",charIndex:631},{level:2,title:"4、ddns-go 容器创建",slug:"_4、ddns-go-容器创建",normalizedTitle:"4、ddns-go 容器创建",charIndex:835},{level:2,title:"5、ddns-go 设置",slug:"_5、ddns-go-设置",normalizedTitle:"5、ddns-go 设置",charIndex:1131}],headersStr:"1、域名申请 2、域名解析 3、AccessKey 创建 4、ddns-go 容器创建 5、ddns-go 设置",content:"通过 DDNS-GO 和阿里云的免费域名部署动态解析，实现外网通过域名访问 NAS。\n\n\n# 1、域名申请\n\n首先我们确定阿里上我们已经上传了个人信息模板，并已经实名认证完成了。\n\n1、打开阿里 xyz 域名购买网站，输入你想购买的域名然后点击立即查询。旁边也可选择其它后缀，但是 6 位纯数字 XYZ 后缀的域名便宜，十年只需 68 块钱，具体的选择还是看你自己。\n\n\n\n2、点击想购买域名后的加入清单，然后点击上面的域名清单。\n\n\n\n3、点击立即购买。\n\n\n\n4、输入想购买的年限，并选择信息模板，勾选同意协定，点击立即购买。\n\n\n\n5、然后我们点击控制台，进入域名控制台下的域名列表，点击管理。\n\n\n\n6、先在基本信息里看看自己的域名是否实名认证成功，因为没有认证成功是没办法进行域名解析的。这里我们是已认证的状态。\n\n\n\n\n# 2、域名解析\n\n1、点击进入域名解析。\n\n\n\n2、点击添加记录（如果有新手指引可以先跳过），设置二级域名。\n\n\n\n3、这里我们创建两个记录。\n\n * 如果宽带 ip 是 ipv4，记录类型选择 A，宽带类型是 ipv6，记录类型选择 AAAA，这里大家根据自己的网络情况进行选择；主机记录选择@；记录值可以随便填一个进入比如 1.1.1.1（宽带是 V4 的），因为后面会实时更新；其他选项选择默认即可。\n * 创建一个记录类型为 CHAME 的；主机记录选择*；记录值填写我们申请的域名；其他选项选择默认即可。\n\n\n\n\n# 3、AccessKey 创建\n\n我们把鼠标放在阿里云头像位置，会自动弹出菜单，选择 AccessKey 管理。\n\n\n\n这时会弹出窗口，我们点击继续使用。\n\n\n\n进入 AccessKey 管理界面，点击创建 AccessKey，然后选择验证方式进行验证。\n\n\n\n验证完后会自动生成一份 AccessKey 和 AccessKeySecret。这里注意要保存下来，否则后面没法再找回，只能重新创建。\n\n\n\n\n# 4、ddns-go 容器创建\n\n进入绿联云 APP 的 Docker 镜像仓库，搜索 ddns-go。点击下载拉取最新版镜像。\n\n\n\n下载完后，在镜像管理找到刚下载的镜像，点击创建容器，勾选高级模式和创建后启动容器，点击下一步\n\n\n\n在基础设置里的重启策略选择重启策略。\n\n\n\n网络选择 host。\n\n\n\n存储空间选择放置 Docker 的硬盘，新建文件夹 ddns-go 并选择它，完成挂载文件夹的填写，装载路径填“/root”，注意类型选择读写。\n\n\n\n端口设置本地端口设置成跟容器端口一致，都填 9876。\n\n\n\n链接和环境不用设置，点击【下一步】后点击【完成】完成容器创建。\n\n\n# 5、ddns-go 设置\n\n创建完成后，在浏览器输入绿联 IP:9876，即可进入 DDNS-GO 的设置界面。选择阿里云，填入之前获取到的 AccessKey ID 和 AccessKey Secret。TTL 选择自动。\n\n\n\n下面的 ipv4 和 ipv6 设置，大家根据自己的网络实际情况任选其一均可。Domains 这里因为我们解析的是一个@记录，所以这里填写@.域名。\n\n\n\n其他设置这里，可以自行选择是否禁止公网访问，一般不建议打开公网访问，因为 DDNS-GO 的动态解析只要设置一次后就会自动解析。当然，你也可以选择启用公网访问，只需要转发一下端口。另外这里也可以重新设置账号密码。全部设置完成之后，在下方点击 Save，就可以在日志里面看到解析是否成功的记录。\n\n",normalizedContent:"通过 ddns-go 和阿里云的免费域名部署动态解析，实现外网通过域名访问 nas。\n\n\n# 1、域名申请\n\n首先我们确定阿里上我们已经上传了个人信息模板，并已经实名认证完成了。\n\n1、打开阿里 xyz 域名购买网站，输入你想购买的域名然后点击立即查询。旁边也可选择其它后缀，但是 6 位纯数字 xyz 后缀的域名便宜，十年只需 68 块钱，具体的选择还是看你自己。\n\n\n\n2、点击想购买域名后的加入清单，然后点击上面的域名清单。\n\n\n\n3、点击立即购买。\n\n\n\n4、输入想购买的年限，并选择信息模板，勾选同意协定，点击立即购买。\n\n\n\n5、然后我们点击控制台，进入域名控制台下的域名列表，点击管理。\n\n\n\n6、先在基本信息里看看自己的域名是否实名认证成功，因为没有认证成功是没办法进行域名解析的。这里我们是已认证的状态。\n\n\n\n\n# 2、域名解析\n\n1、点击进入域名解析。\n\n\n\n2、点击添加记录（如果有新手指引可以先跳过），设置二级域名。\n\n\n\n3、这里我们创建两个记录。\n\n * 如果宽带 ip 是 ipv4，记录类型选择 a，宽带类型是 ipv6，记录类型选择 aaaa，这里大家根据自己的网络情况进行选择；主机记录选择@；记录值可以随便填一个进入比如 1.1.1.1（宽带是 v4 的），因为后面会实时更新；其他选项选择默认即可。\n * 创建一个记录类型为 chame 的；主机记录选择*；记录值填写我们申请的域名；其他选项选择默认即可。\n\n\n\n\n# 3、accesskey 创建\n\n我们把鼠标放在阿里云头像位置，会自动弹出菜单，选择 accesskey 管理。\n\n\n\n这时会弹出窗口，我们点击继续使用。\n\n\n\n进入 accesskey 管理界面，点击创建 accesskey，然后选择验证方式进行验证。\n\n\n\n验证完后会自动生成一份 accesskey 和 accesskeysecret。这里注意要保存下来，否则后面没法再找回，只能重新创建。\n\n\n\n\n# 4、ddns-go 容器创建\n\n进入绿联云 app 的 docker 镜像仓库，搜索 ddns-go。点击下载拉取最新版镜像。\n\n\n\n下载完后，在镜像管理找到刚下载的镜像，点击创建容器，勾选高级模式和创建后启动容器，点击下一步\n\n\n\n在基础设置里的重启策略选择重启策略。\n\n\n\n网络选择 host。\n\n\n\n存储空间选择放置 docker 的硬盘，新建文件夹 ddns-go 并选择它，完成挂载文件夹的填写，装载路径填“/root”，注意类型选择读写。\n\n\n\n端口设置本地端口设置成跟容器端口一致，都填 9876。\n\n\n\n链接和环境不用设置，点击【下一步】后点击【完成】完成容器创建。\n\n\n# 5、ddns-go 设置\n\n创建完成后，在浏览器输入绿联 ip:9876，即可进入 ddns-go 的设置界面。选择阿里云，填入之前获取到的 accesskey id 和 accesskey secret。ttl 选择自动。\n\n\n\n下面的 ipv4 和 ipv6 设置，大家根据自己的网络实际情况任选其一均可。domains 这里因为我们解析的是一个@记录，所以这里填写@.域名。\n\n\n\n其他设置这里，可以自行选择是否禁止公网访问，一般不建议打开公网访问，因为 ddns-go 的动态解析只要设置一次后就会自动解析。当然，你也可以选择启用公网访问，只需要转发一下端口。另外这里也可以重新设置账号密码。全部设置完成之后，在下方点击 save，就可以在日志里面看到解析是否成功的记录。\n\n",charsets:{cjk:!0}},{title:"NPM",frontmatter:{title:"NPM",date:"2024-02-26T10:17:03.000Z",permalink:"/network/npm/",categories:["网络"],tags:[null]},regularPath:"/03.%E7%BD%91%E7%BB%9C/03.npm.html",relativePath:"03.网络/03.npm.md",key:"v-4daf549f",path:"/network/npm/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:2},{level:2,title:"npm 设置",slug:"npm-设置",normalizedTitle:"npm 设置",charIndex:254},{level:3,title:"初始化",slug:"初始化",normalizedTitle:"初始化",charIndex:265},{level:3,title:"SSL 证书",slug:"ssl-证书",normalizedTitle:"ssl 证书",charIndex:396},{level:3,title:"反代端口",slug:"反代端口",normalizedTitle:"反代端口",charIndex:882}],headersStr:"容器部署 npm 设置 初始化 SSL 证书 反代端口",content:"# 容器部署\n\n1、在绿联的镜像仓库里搜 nginx-proxy-manager，并安装最新版本。\n\nPs：如果想安装中文版的话可以安装 nginx-proxy-manager-zh 版本，这个版本是国人翻译的中文版。\n\n\n\n2、创建容器\n\n1）存储空间设置\n\n\n\n2）端口设置:\n\n因为家宽默认是封 80 和 443 的端口的，所以我们本地端口都改了。这里的 1998 对应 443，是我们外网访问时需要映射的端口，可根据个人喜好填写。1998 也是我们需要到路由器端口转发中映射出去的端口。\n\n\n\n\n# npm 设置\n\n\n# 初始化\n\n浏览器输入绿联 ip:端口进入 npm，默认的账号为admin@example.com，默认的密码是：changeme。\n\n登入后点击右上角的头像，然后点击 1 可以修改用户名和邮箱，点击 2 可以修改密码，首次进入推荐更改账号以及密码。\n\n\n\n\n# SSL 证书\n\n点击 SSL 证书（SSL Certificate），然后点击创建证书，并按要求输入内容，输入完成后点击 save 保存。\n\n * 域名（Domain Names）：填写两个，一个直接填写你申请的域名，一个填写【*.申请的域名】。\n * 填写对应的邮箱地址，勾选【使用 DNS 认证（Use a DNS Challenge）】。\n * DNS 提供者（DNS Provider）选择你申请的域名服务商，比如阿里。\n * 证书内容（Credentials File Content）里把=后面的内容换成你自己的 access_key。\n * 等待时间（Propagation Seconds）可默认不填。\n * 勾选同意条款。\n\n\n\n添加完成后需要等待一会，就可以看到我们添加成功的证书。由于这是免费的泛域名证书，有效期只有三个月，所以有个到期时间，到期后我们就需要来重新申请一次证书。\n\n\n\n如出现如图错误：\n\n\n\n则我们需要下载一个 zope 模块，等待下载完成后再去 Nginx-Proxy-Manager 后台点击保存确认，即可申请到证书。\n\n\n# 反代端口\n\n点击 Hosts（主机），选择 Proxy Hosts（代理服务），添加然后在 Proxy Hosts（代理服务）页面点击 Add Proxy Hosts（添加代理服务）。\n\n\n\n主要设置以下两项：\n\n1）Details\n\n以 emby 为例：这里的域名是二级域名可随意填写，只要后缀是自己的域名就可以，比如 emby.域名；协议就是 http；转发主机就是绿联的 IP；转发端口就是你需要转发的容器服务比如 emby 对应的端口；然后勾选下面三项内容。\n\n\n\n2）SSL\n\n点击 SSL，勾选刚才申请的证书和下面四项内容。\n\n",normalizedContent:"# 容器部署\n\n1、在绿联的镜像仓库里搜 nginx-proxy-manager，并安装最新版本。\n\nps：如果想安装中文版的话可以安装 nginx-proxy-manager-zh 版本，这个版本是国人翻译的中文版。\n\n\n\n2、创建容器\n\n1）存储空间设置\n\n\n\n2）端口设置:\n\n因为家宽默认是封 80 和 443 的端口的，所以我们本地端口都改了。这里的 1998 对应 443，是我们外网访问时需要映射的端口，可根据个人喜好填写。1998 也是我们需要到路由器端口转发中映射出去的端口。\n\n\n\n\n# npm 设置\n\n\n# 初始化\n\n浏览器输入绿联 ip:端口进入 npm，默认的账号为admin@example.com，默认的密码是：changeme。\n\n登入后点击右上角的头像，然后点击 1 可以修改用户名和邮箱，点击 2 可以修改密码，首次进入推荐更改账号以及密码。\n\n\n\n\n# ssl 证书\n\n点击 ssl 证书（ssl certificate），然后点击创建证书，并按要求输入内容，输入完成后点击 save 保存。\n\n * 域名（domain names）：填写两个，一个直接填写你申请的域名，一个填写【*.申请的域名】。\n * 填写对应的邮箱地址，勾选【使用 dns 认证（use a dns challenge）】。\n * dns 提供者（dns provider）选择你申请的域名服务商，比如阿里。\n * 证书内容（credentials file content）里把=后面的内容换成你自己的 access_key。\n * 等待时间（propagation seconds）可默认不填。\n * 勾选同意条款。\n\n\n\n添加完成后需要等待一会，就可以看到我们添加成功的证书。由于这是免费的泛域名证书，有效期只有三个月，所以有个到期时间，到期后我们就需要来重新申请一次证书。\n\n\n\n如出现如图错误：\n\n\n\n则我们需要下载一个 zope 模块，等待下载完成后再去 nginx-proxy-manager 后台点击保存确认，即可申请到证书。\n\n\n# 反代端口\n\n点击 hosts（主机），选择 proxy hosts（代理服务），添加然后在 proxy hosts（代理服务）页面点击 add proxy hosts（添加代理服务）。\n\n\n\n主要设置以下两项：\n\n1）details\n\n以 emby 为例：这里的域名是二级域名可随意填写，只要后缀是自己的域名就可以，比如 emby.域名；协议就是 http；转发主机就是绿联的 ip；转发端口就是你需要转发的容器服务比如 emby 对应的端口；然后勾选下面三项内容。\n\n\n\n2）ssl\n\n点击 ssl，勾选刚才申请的证书和下面四项内容。\n\n",charsets:{cjk:!0}},{title:"lucky",frontmatter:{title:"lucky",date:"2024-02-26T10:17:03.000Z",permalink:"/network/lucky/",categories:["网络"],tags:[null]},regularPath:"/03.%E7%BD%91%E7%BB%9C/04.lucky.html",relativePath:"03.网络/04.lucky.md",key:"v-cc0607ba",path:"/network/lucky/",headers:[{level:2,title:"容器部署",slug:"容器部署",normalizedTitle:"容器部署",charIndex:105},{level:2,title:"配置",slug:"配置",normalizedTitle:"配置",charIndex:406},{level:3,title:"1、修改账户密码",slug:"_1、修改账户密码",normalizedTitle:"1、修改账户密码",charIndex:413},{level:3,title:"2、域名解析",slug:"_2、域名解析",normalizedTitle:"2、域名解析",charIndex:446},{level:3,title:"3、SSL 证书",slug:"_3、ssl-证书",normalizedTitle:"3、ssl 证书",charIndex:740},{level:3,title:"4、反代",slug:"_4、反代",normalizedTitle:"4、反代",charIndex:935},{level:3,title:"5、转发端口",slug:"_5、转发端口",normalizedTitle:"5、转发端口",charIndex:1459}],headersStr:"容器部署 配置 1、修改账户密码 2、域名解析 3、SSL 证书 4、反代 5、转发端口",content:"lucky 是一个网络设置小工具组，支持可视化操作，自带 WebUI 后台。支持 IPv6/IPv4 端口转发、反向代理、动态域名、语音助手网络唤醒、IPv4 内网穿透、计划任务和自动证书等多项功能。\n\n\n# 容器部署\n\n1.首先我们打开绿联云，来到 Docker 拉取镜像：gdy666/lucky，安装最新版本。\n\n\n\n2.点击创建容器，勾选创建后启动容器，点击下一步。\n\n\n\n3.重启策略选择容器退出时总是重启容器\n\n\n\n4.网络选择：host\n\n\n\n5.在 Docker 目录下新建个 goodlucky 文件夹设为挂载文件夹，挂载路径为/goodluck，类型设置读写。\n\n\n\n6.端口默认为 16601， 然后直接点下一步，然后点完成启动应用.\n\n\n\n7.打开浏览器输出你的 NAS 的 IP 加端口 16601 进入设置界面，默认账户为 666 密码为 666\n\n\n\n8.然后进入网页\n\n\n\n\n# 配置\n\n\n# 1、修改账户密码\n\n设置-登录验证设置修改账户密码。\n\n\n\n\n# 2、域名解析\n\n点击动态域名-添加 DDNS 任务，进行域名解析。\n\n * 除非特殊需求一般简易模式就够你用了，不要点定制模式\n * DNS 服务商根据你的服务商选择，这边我们用的是阿里云，并输入对应的 AccessKey ID 和 Secret。\n * 公网 IP 类型根据你自身是 IPV4 还是 IPV6 选择，如果是 IPV4 就选择接口获取，如果是 IPV6 就选择网卡获取（你两个都要解析需要创建两个）；域名列表里假如你的域名是 abc.com，那么下面填写 abc.com 和*.abc.com\n\n\n\n填写完成等一会，会出现同步结果，如果不一致会失败，自查原因\n\n\n\n\n# 3、SSL 证书\n\n点击安全管理-添加证书\n\n * 添加方式选择 ACME\n * 证书颁发机构选择 Let's Encrypt\n * DNS 服务商选择阿里云\n * 域名还是如上填写 abc.com 和*.abc.com\n * ID 和 KEY 是阿里云获取的\n * 邮箱是自己的邮箱，其他全部默认。\n\n\n\n保存后等一会，如果成功后会出现泛域名证书到期时间，这个是自动续签的。\n\n\n\n\n# 4、反代\n\n接着我们来到 web 服务-添加 web 服务规则。\n\n1）监听类型 tcp4 对应 IPV4 ，tcp6 对应 IPV6，你解析的是啥就选啥，监听端口是你反代的端口，这边我们用 16666 为例（你可以随意，只要端口没被占用重复），需要关闭防火墙自动放行，因为我们是在 NAS 中使用，用不到这个（大部分地区 80/8080/443 端口都是封掉的状态，如果 443 没有被封，你可以监听 443，就可以只写二级域名且不需要写监听端口）\n\n\n\n2）点击默认子规则，把 web 服务类型选择重定向，默认目标地址写 https://{host}:{port} 如果你是 443 监听就写 https://{host}。\n\n\n\n3）然后点击下面的添加 web 服务子规则，以 emby 为例，这边我们前端域名就是你的二级域名，因为前面我们已经写了*.abc.com，所以这边我们就直接写一个二级就行如：emby.abc.com，后端地址就是你的 emby 内网地址，比如我的是 192.168.31.120:8096，然后保存即可。这里你有几个服务需要外网访问就创建几个子规则，反代监听端口都是一样的，只不过二级域名不同而已。\n\n\n\n\n# 5、转发端口\n\n这边因为我们是在 NAS 搭建的 Lucky 所以需要将反代监听端口 16666（跟随上面你设置的反代监听端口号）转发出去，然后可以通过 https：//emby.abc.com：16666 外网访问你的 emby 了",normalizedContent:"lucky 是一个网络设置小工具组，支持可视化操作，自带 webui 后台。支持 ipv6/ipv4 端口转发、反向代理、动态域名、语音助手网络唤醒、ipv4 内网穿透、计划任务和自动证书等多项功能。\n\n\n# 容器部署\n\n1.首先我们打开绿联云，来到 docker 拉取镜像：gdy666/lucky，安装最新版本。\n\n\n\n2.点击创建容器，勾选创建后启动容器，点击下一步。\n\n\n\n3.重启策略选择容器退出时总是重启容器\n\n\n\n4.网络选择：host\n\n\n\n5.在 docker 目录下新建个 goodlucky 文件夹设为挂载文件夹，挂载路径为/goodluck，类型设置读写。\n\n\n\n6.端口默认为 16601， 然后直接点下一步，然后点完成启动应用.\n\n\n\n7.打开浏览器输出你的 nas 的 ip 加端口 16601 进入设置界面，默认账户为 666 密码为 666\n\n\n\n8.然后进入网页\n\n\n\n\n# 配置\n\n\n# 1、修改账户密码\n\n设置-登录验证设置修改账户密码。\n\n\n\n\n# 2、域名解析\n\n点击动态域名-添加 ddns 任务，进行域名解析。\n\n * 除非特殊需求一般简易模式就够你用了，不要点定制模式\n * dns 服务商根据你的服务商选择，这边我们用的是阿里云，并输入对应的 accesskey id 和 secret。\n * 公网 ip 类型根据你自身是 ipv4 还是 ipv6 选择，如果是 ipv4 就选择接口获取，如果是 ipv6 就选择网卡获取（你两个都要解析需要创建两个）；域名列表里假如你的域名是 abc.com，那么下面填写 abc.com 和*.abc.com\n\n\n\n填写完成等一会，会出现同步结果，如果不一致会失败，自查原因\n\n\n\n\n# 3、ssl 证书\n\n点击安全管理-添加证书\n\n * 添加方式选择 acme\n * 证书颁发机构选择 let's encrypt\n * dns 服务商选择阿里云\n * 域名还是如上填写 abc.com 和*.abc.com\n * id 和 key 是阿里云获取的\n * 邮箱是自己的邮箱，其他全部默认。\n\n\n\n保存后等一会，如果成功后会出现泛域名证书到期时间，这个是自动续签的。\n\n\n\n\n# 4、反代\n\n接着我们来到 web 服务-添加 web 服务规则。\n\n1）监听类型 tcp4 对应 ipv4 ，tcp6 对应 ipv6，你解析的是啥就选啥，监听端口是你反代的端口，这边我们用 16666 为例（你可以随意，只要端口没被占用重复），需要关闭防火墙自动放行，因为我们是在 nas 中使用，用不到这个（大部分地区 80/8080/443 端口都是封掉的状态，如果 443 没有被封，你可以监听 443，就可以只写二级域名且不需要写监听端口）\n\n\n\n2）点击默认子规则，把 web 服务类型选择重定向，默认目标地址写 https://{host}:{port} 如果你是 443 监听就写 https://{host}。\n\n\n\n3）然后点击下面的添加 web 服务子规则，以 emby 为例，这边我们前端域名就是你的二级域名，因为前面我们已经写了*.abc.com，所以这边我们就直接写一个二级就行如：emby.abc.com，后端地址就是你的 emby 内网地址，比如我的是 192.168.31.120:8096，然后保存即可。这里你有几个服务需要外网访问就创建几个子规则，反代监听端口都是一样的，只不过二级域名不同而已。\n\n\n\n\n# 5、转发端口\n\n这边因为我们是在 nas 搭建的 lucky 所以需要将反代监听端口 16666（跟随上面你设置的反代监听端口号）转发出去，然后可以通过 https：//emby.abc.com：16666 外网访问你的 emby 了",charsets:{cjk:!0}},{title:"SakuraFrp",frontmatter:{title:"SakuraFrp",date:"2024-02-26T10:17:03.000Z",permalink:"/network/sakurafrp/",categories:["网络"],tags:[null]},regularPath:"/03.%E7%BD%91%E7%BB%9C/05.sakurafrp.html",relativePath:"03.网络/05.sakurafrp.md",key:"v-6858bbb7",path:"/network/sakurafrp/",headers:[{level:2,title:"镜像下载",slug:"镜像下载",normalizedTitle:"镜像下载",charIndex:2},{level:2,title:"创建隧道",slug:"创建隧道",normalizedTitle:"创建隧道",charIndex:73},{level:2,title:"创建容器",slug:"创建容器",normalizedTitle:"创建容器",charIndex:487},{level:2,title:"使用",slug:"使用",normalizedTitle:"使用",charIndex:228}],headersStr:"镜像下载 创建隧道 创建容器 使用",content:"# 镜像下载\n\n在绿联 NAS 操作面板中找到 docker-镜像管理，搜索 natfrp/frpc，安装最新版本（latest）。\n\n\n\n\n# 创建隧道\n\n1、打开 docker - 网络管理，记录下 bridge 的网关 IP，即 172.17.0.1。\n\n\n\n2、进入 SakuraFrp 官网，注册账号。\n\n\n\n3、点击 Sakura Frp。\n\n\n\n4、进入界面后打开服务 - 隧道列表。\n\n\n\n5、按需创建一个隧道\n\n * 示例穿透网页应用，故使用 TCP\n * 隧道名自定义，备注自定义\n * 本地 IP 填上面记下的网关 IP（此处为 172.17.0.1），本地端口填您需要穿透的 docker 容器端口\n * 示例所用 qb 的本地端口为 8080，所以 SakuraFrp 设置中的本地端口也填写 8080\n\n\n\n6、配置完后，点击创建（需支付 1 块钱通过支付宝实名认证）。创建成功后，点击右侧三个点，选择配置文件：\n\n\n\n7、记录下这里的 token 和隧道 ID。 token 是您在 SakuraFrp 的身份令牌，注意不要泄露。\n\n\n\n\n# 创建容器\n\n点击镜像管理 - 本地镜像，选择刚刚下载的 natfrp/frpc 容器，点击创建容器，前面的设置都无需改动，只需要在环境下填写下刚刚获取的 token 和隧道 ID。修改完毕后，点击下一步 - 确认创建容器。\n\n\n\n\n# 使用\n\n1、容器启动后，点击详情。\n\n\n\n2、如果一切顺利，在日志里，您可以看到两个链接选项。在链接前面加上 https://，即可访问穿透端口了。\n\n\n\n3、如图，qBittorrent 穿透完成，成功使用 SakuraFrp 的链接打开 qb 的 WebUI：\n\n",normalizedContent:"# 镜像下载\n\n在绿联 nas 操作面板中找到 docker-镜像管理，搜索 natfrp/frpc，安装最新版本（latest）。\n\n\n\n\n# 创建隧道\n\n1、打开 docker - 网络管理，记录下 bridge 的网关 ip，即 172.17.0.1。\n\n\n\n2、进入 sakurafrp 官网，注册账号。\n\n\n\n3、点击 sakura frp。\n\n\n\n4、进入界面后打开服务 - 隧道列表。\n\n\n\n5、按需创建一个隧道\n\n * 示例穿透网页应用，故使用 tcp\n * 隧道名自定义，备注自定义\n * 本地 ip 填上面记下的网关 ip（此处为 172.17.0.1），本地端口填您需要穿透的 docker 容器端口\n * 示例所用 qb 的本地端口为 8080，所以 sakurafrp 设置中的本地端口也填写 8080\n\n\n\n6、配置完后，点击创建（需支付 1 块钱通过支付宝实名认证）。创建成功后，点击右侧三个点，选择配置文件：\n\n\n\n7、记录下这里的 token 和隧道 id。 token 是您在 sakurafrp 的身份令牌，注意不要泄露。\n\n\n\n\n# 创建容器\n\n点击镜像管理 - 本地镜像，选择刚刚下载的 natfrp/frpc 容器，点击创建容器，前面的设置都无需改动，只需要在环境下填写下刚刚获取的 token 和隧道 id。修改完毕后，点击下一步 - 确认创建容器。\n\n\n\n\n# 使用\n\n1、容器启动后，点击详情。\n\n\n\n2、如果一切顺利，在日志里，您可以看到两个链接选项。在链接前面加上 https://，即可访问穿透端口了。\n\n\n\n3、如图，qbittorrent 穿透完成，成功使用 sakurafrp 的链接打开 qb 的 webui：\n\n",charsets:{cjk:!0}},{title:"TMDB API 申请",frontmatter:{title:"TMDB API 申请",date:"2024-02-26T10:17:03.000Z",permalink:"/other/tmdb_api/",categories:["其它"],tags:[null]},regularPath:"/04.%E5%85%B6%E5%AE%83/01.TMDB%20API%E7%94%B3%E8%AF%B7.html",relativePath:"04.其它/01.TMDB API申请.md",key:"v-50cabb35",path:"/other/tmdb_api/",headersStr:null,content:"1、点击进入TMDB 官网，点击【加入 TMDB】。\n\n\n\n2、按照要求输入相关信息完成注册。\n\n\n\n3、注册完成以后会收到封验证邮件，点击 ACTIVATE MY ACCOUNT 激活账户。\n\n\n\n4、登录 TMDB。\n\n\n\n5、点击右上角的头像-帐户设置。\n\n\n\n6、点击左侧的 API，然后点击请求 API 秘钥下面的 click here。\n\n\n\n7、点击开发者（Developer）。\n\n\n\n8、协议滑动到最后选择接受。\n\n\n\n9、名称自定义，应用 URL 填写绿联 IP，应用简介按照写 api 用途（最好填写英语，百度翻译即可）然后点击提交。\n\n> 应用简介参考（填写英文部分）：满足个性定制化需求，丰富网站接口以及功能（Meet personalized needs, enrich website interfaces and functions）。\n\n\n\n10、这样我们就获取到了 TMDB 的 API 密钥，复制下来保存，后面我们会用到。\n\n",normalizedContent:"1、点击进入tmdb 官网，点击【加入 tmdb】。\n\n\n\n2、按照要求输入相关信息完成注册。\n\n\n\n3、注册完成以后会收到封验证邮件，点击 activate my account 激活账户。\n\n\n\n4、登录 tmdb。\n\n\n\n5、点击右上角的头像-帐户设置。\n\n\n\n6、点击左侧的 api，然后点击请求 api 秘钥下面的 click here。\n\n\n\n7、点击开发者（developer）。\n\n\n\n8、协议滑动到最后选择接受。\n\n\n\n9、名称自定义，应用 url 填写绿联 ip，应用简介按照写 api 用途（最好填写英语，百度翻译即可）然后点击提交。\n\n> 应用简介参考（填写英文部分）：满足个性定制化需求，丰富网站接口以及功能（meet personalized needs, enrich website interfaces and functions）。\n\n\n\n10、这样我们就获取到了 tmdb 的 api 密钥，复制下来保存，后面我们会用到。\n\n",charsets:{cjk:!0}},{title:"其他compose",frontmatter:{title:"其他compose",date:"2025-01-03T11:37:08.000Z",permalink:"/other/compose",categories:["其它"],tags:[null]},regularPath:"/04.%E5%85%B6%E5%AE%83/04.%E5%85%B6%E4%BB%96compose.html",relativePath:"04.其它/04.其他compose.md",key:"v-5f409860",path:"/other/compose/",headers:[{level:2,title:"mysql部署",slug:"mysql部署",normalizedTitle:"mysql部署",charIndex:2},{level:2,title:"gitea",slug:"gitea",normalizedTitle:"gitea",charIndex:516}],headersStr:"mysql部署 gitea",content:'# mysql部署\n\nversion: \'3\'\nservices:\n  mysql:\n    image: mysql:latest\n    container_name: mysql\n    restart: always\n    ports:\n      - 3306:3306\n    environment:\n      - MYSQL_ROOT_PASSWORD=123456  # root用户密码\n    volumes:\n      - TZ=Asia/Shanghai            # 设置容器时区，也可以挂载通过/etc/localtime:/etc/localtime:ro\n    volumes:\n      - /volume3/docker/mysql/log:/var/log/mysql            # 映射日志目录，宿主机:容器\n      - /volume3/docker/mysql/data:/var/lib/mysql           # 映射数据目录，宿主机:容器\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# gitea\n\nversion: "3"\nservices:\n  server:\n    image: gitea/gitea:latest\n    container_name: gitea\n    restart: always\n    ports:\n      - "3000:3000"\n      - "22:22"\n    volumes:\n      - /volume3/docker/gitea:/data\n      - /etc/timezone:/etc/timezone:ro\n      - /etc/localtime:/etc/localtime:ro    # 让容器的时钟与宿主机时钟同步，避免时间的问题，ro是read only只读的意思\n    environment:\n      - USER_UID=1007                           # 用户id\n      - USER_GID=10                             # 用户组id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',normalizedContent:'# mysql部署\n\nversion: \'3\'\nservices:\n  mysql:\n    image: mysql:latest\n    container_name: mysql\n    restart: always\n    ports:\n      - 3306:3306\n    environment:\n      - mysql_root_password=123456  # root用户密码\n    volumes:\n      - tz=asia/shanghai            # 设置容器时区，也可以挂载通过/etc/localtime:/etc/localtime:ro\n    volumes:\n      - /volume3/docker/mysql/log:/var/log/mysql            # 映射日志目录，宿主机:容器\n      - /volume3/docker/mysql/data:/var/lib/mysql           # 映射数据目录，宿主机:容器\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# gitea\n\nversion: "3"\nservices:\n  server:\n    image: gitea/gitea:latest\n    container_name: gitea\n    restart: always\n    ports:\n      - "3000:3000"\n      - "22:22"\n    volumes:\n      - /volume3/docker/gitea:/data\n      - /etc/timezone:/etc/timezone:ro\n      - /etc/localtime:/etc/localtime:ro    # 让容器的时钟与宿主机时钟同步，避免时间的问题，ro是read only只读的意思\n    environment:\n      - user_uid=1007                           # 用户id\n      - user_gid=10                             # 用户组id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n',charsets:{cjk:!0}},{title:"4600刷黑裙不入门",frontmatter:{title:"4600刷黑裙不入门",date:"2024-08-06T11:37:08.000Z",permalink:"/other/synology",categories:["其它"],tags:[null]},regularPath:"/04.%E5%85%B6%E5%AE%83/03.4600%E5%88%B7%E9%BB%91%E7%BE%A4%E4%B8%8D%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html",relativePath:"04.其它/03.4600刷黑群不入门教程.md",key:"v-1865687e",path:"/other/synology/",headers:[{level:2,title:"前期准备",slug:"前期准备",normalizedTitle:"前期准备",charIndex:63},{level:3,title:"工具准备",slug:"工具准备",normalizedTitle:"工具准备",charIndex:72},{level:3,title:"数据准备",slug:"数据准备",normalizedTitle:"数据准备",charIndex:173},{level:2,title:"u盘写入镜像",slug:"u盘写入镜像",normalizedTitle:"u盘写入镜像",charIndex:487},{level:2,title:"拆机引出hdmi线",slug:"拆机引出hdmi线",normalizedTitle:"拆机引出hdmi线",charIndex:658},{level:2,title:"刷机",slug:"刷机",normalizedTitle:"刷机",charIndex:37},{level:2,title:"设置引导",slug:"设置引导",normalizedTitle:"设置引导",charIndex:1705},{level:2,title:"安装系统",slug:"安装系统",normalizedTitle:"安装系统",charIndex:2108}],headersStr:"前期准备 工具准备 数据准备 u盘写入镜像 拆机引出hdmi线 刷机 设置引导 安装系统",content:"说明：\n\n * 本教程不包会，不包熟，不保入门，不保鲜\n * 拆机需谨慎，刷机有风险！！！拆机刷机出现问题，概不负责\n\n\n# 前期准备\n\n\n# 工具准备\n\n1、拆机工具：螺丝刀，镊子，清灰刷子等\n\n2、引导盘 16g以上，可以多备两个，坏了直接换\n\n3、不想盲刷的还需准备显示器、键鼠、以及专用hdmi数据线一根，hdmi数据线如下\n\n\n\n\n# 数据准备\n\n1、提前拷贝出绿联里的数据，对于docker来说，可以直接备份整个docker文件夹，然后打开dockercopilot新建个备份，并备份这个备份的json文件。\n\n2、下载黑裙引导程序：https://github.com/RROrg/rr/releases，然后解压会得到一个img文件\n\n\n\n3、下载镜像写入程序：https://etcher.balena.io/#download-etcher\n\n4、下载黑裙系统（SA6400的DSM7.2.1）：https://www.synology.cn/zh-cn/support/download/SA6400?version=7.2#system\n\n\n\n\n# u盘写入镜像\n\n1、电脑插入空U盘，然后打开balenaEtcher烧录引导文件\n\n2、点击从文件烧录，选择刚刚解压的img黑裙引导程序\n\n\n\n3、选择U盘作为目标磁盘\n\n\n\n4、点击烧录\n\n\n\n5、烧录完成\n\n\n\n6、 烧录完成会弹出是否将其格式化，点击取消即可。然后可以弹出U盘了。\n\n注意：如果烧录失败也没关系，重新刷就行了。\n\n\n# 拆机引出hdmi线\n\n1、用镊子或者小一字螺丝刀，插进橡皮塞边缘，撬出橡皮塞。\n\n\n\n\n\n2、拆卸面板，可以用绳子(硬的好穿)穿过网格，拉出后盖板。\n\n\n\n3、拆卸风扇螺丝和网面固定螺丝，风扇的电源线不用拔下来，记录风扇的正反面样子。\n\n\n\n\n\n\n\n4、拆卸底面内存外盖，左边是前面，右边是有风扇的尾部（即标签贴的一头），然后从右往左推出主板，里面有滑槽，可以连风扇一起慢慢推出。推出主板的时候注意弹簧的位置，可以手动摁下去\n\n\n\n\n\n5、找到hdmi位置\n\n\n\n6、插上hdmi线，注意不要插的太深，免得在后面组装的时候卡住。也最好往外拉一点不要碰到主板散热片，防止散热片温度高烫坏hdmi线。\n\n\n\n7、按照拆机反方向往里推，开始装机\n\n\n\n8、推的时候，注意hdmi插口位置，小心和外壳的卡槽卡住\n\n\n\n9、箭头指的地方是hdmi线的板子和外壳圆柱导轨，这也是为什么hdmi不要插的太紧，不然会碰到卡住\n\n\n\n10、往里塞到一半，注意的弹簧，用手按下去，再往里推\n\n\n\n11、测试hdmi线是否安装正常：插上电脑的hdmi线，连接电源，开机，听到滴的声音，查看显示屏，显示UGREEN，就代表成功啦！！！\n\n\n\n12、再把剩下的东西怎么拆的怎么装回去，最后左下角的螺丝可以拧松一点。\n\n\n\n13、机器全部装完后，插上至少一块机械硬盘，插上前面烧录好数据的u盘，插上键盘，hdmi线连接好显示器，插上网线。\n\n\n# 刷机\n\n1、启动电源，开机的时候一直按DEL键，直到听到'滴'的蜂鸣声，此时你已经进入了BIOS页面\n\n\n\n2、关闭看门狗\n\n * 按1下键盘右箭头→进入advanced，按3下下箭头↓到watchDog Settings然后回车\n\n * 进入看门狗设置项，把参数修改为disabled，如果默认是disabled则不更改，按esc退回主页面。 3、设置U盘为第一启动项\n\n * 按4下右箭头→，切到boot界面\n\n * 按3下下箭头↓，回车，切到引导设置项，再按5下下箭头↓回车，设置第一个引导为 USB Key（U盘启动），然后把原本的第一项 Hard DiSK:UEFI OS(EHMC BITD4R) 挪到第2项。\n\n * 按F10保存设置。这时系统会重启（仔细听系统重启的声音），此时显示屏会黑屏，狂刷代码，忽略。可以拔掉hdmi线了\n\n4、成功的话，等一分钟，打开路由器，可以寻找到设备名为SA6400的IP，如果之前固定了IP，那就试试固定的那个IP\n\n\n# 设置引导\n\n1、在 浏览器上 输入 http://IP:7681 (IP即是刚刚找到的路由器里的IP)到引导界面。\n\n\n\n2、用方向键选择choose a model，回车, 下箭头选择SA6400，回车\n\n\n\n3、选择choose a version 回车\n\n\n\n4、选择7.2，回车\n\n\n\n5、跳出这个画面，一直按回车键，不用动别的。等跳出菜单\n\n\n\n6、跳出菜单画面，选择addons menu，回车。这一步的目的是加入核显驱动\n\n\n\n7、选择add an addon 回车，然后一直按回车，直到选完所有的addon，回车\n\n\n\n\n\n\n\n8、跳回菜单，选择build the loader 然后回车，等待。\n\n\n\n\n\n9、自动跳回菜单，选择boot the loader，回车\n\n\n\n10、引导程序已完成，可以使用他提供的地址（http://192.168.5.167:5000） 登录\n\n\n\n\n# 安装系统\n\n1、等待一会，浏览器输入上面提供的地址 http://192.168.5.167:5000 登录\n\n\n\n2、手动指定文件\n\n\n\n3、这会删除数据，没问题就打勾继续\n\n\n\n4、输入型号：SA6400\n\n\n\n5、安装中\n\n\n\n6、重新启动\n\n\n\n7、等个几分钟后安装内置的套件，如果很久没变化可以尝试刷新网页或者重新登录网址\n\n\n\n8、安装完成，点击开始\n\n\n\n9、设置绿群机器名，管理员账号密码，选项不打勾\n\n\n\n10、设置更新选项为手动安装\n\n\n\n11、跳过创建账号\n\n\n\n12、不共享数据，点击提交\n\n\n\n13、两个套件可以以后再安装\n\n\n\n14、放弃保护账号\n\n\n\n15、跳过硬盘检查\n\n\n\n16、文件系统选建议的Btrfs格式\n\n\n\n17、不配置加密\n\n\n\n18、再次检查\n\n\n\n19、进入系统，你看到的就是界面啦！！！\n\n",normalizedContent:"说明：\n\n * 本教程不包会，不包熟，不保入门，不保鲜\n * 拆机需谨慎，刷机有风险！！！拆机刷机出现问题，概不负责\n\n\n# 前期准备\n\n\n# 工具准备\n\n1、拆机工具：螺丝刀，镊子，清灰刷子等\n\n2、引导盘 16g以上，可以多备两个，坏了直接换\n\n3、不想盲刷的还需准备显示器、键鼠、以及专用hdmi数据线一根，hdmi数据线如下\n\n\n\n\n# 数据准备\n\n1、提前拷贝出绿联里的数据，对于docker来说，可以直接备份整个docker文件夹，然后打开dockercopilot新建个备份，并备份这个备份的json文件。\n\n2、下载黑裙引导程序：https://github.com/rrorg/rr/releases，然后解压会得到一个img文件\n\n\n\n3、下载镜像写入程序：https://etcher.balena.io/#download-etcher\n\n4、下载黑裙系统（sa6400的dsm7.2.1）：https://www.synology.cn/zh-cn/support/download/sa6400?version=7.2#system\n\n\n\n\n# u盘写入镜像\n\n1、电脑插入空u盘，然后打开balenaetcher烧录引导文件\n\n2、点击从文件烧录，选择刚刚解压的img黑裙引导程序\n\n\n\n3、选择u盘作为目标磁盘\n\n\n\n4、点击烧录\n\n\n\n5、烧录完成\n\n\n\n6、 烧录完成会弹出是否将其格式化，点击取消即可。然后可以弹出u盘了。\n\n注意：如果烧录失败也没关系，重新刷就行了。\n\n\n# 拆机引出hdmi线\n\n1、用镊子或者小一字螺丝刀，插进橡皮塞边缘，撬出橡皮塞。\n\n\n\n\n\n2、拆卸面板，可以用绳子(硬的好穿)穿过网格，拉出后盖板。\n\n\n\n3、拆卸风扇螺丝和网面固定螺丝，风扇的电源线不用拔下来，记录风扇的正反面样子。\n\n\n\n\n\n\n\n4、拆卸底面内存外盖，左边是前面，右边是有风扇的尾部（即标签贴的一头），然后从右往左推出主板，里面有滑槽，可以连风扇一起慢慢推出。推出主板的时候注意弹簧的位置，可以手动摁下去\n\n\n\n\n\n5、找到hdmi位置\n\n\n\n6、插上hdmi线，注意不要插的太深，免得在后面组装的时候卡住。也最好往外拉一点不要碰到主板散热片，防止散热片温度高烫坏hdmi线。\n\n\n\n7、按照拆机反方向往里推，开始装机\n\n\n\n8、推的时候，注意hdmi插口位置，小心和外壳的卡槽卡住\n\n\n\n9、箭头指的地方是hdmi线的板子和外壳圆柱导轨，这也是为什么hdmi不要插的太紧，不然会碰到卡住\n\n\n\n10、往里塞到一半，注意的弹簧，用手按下去，再往里推\n\n\n\n11、测试hdmi线是否安装正常：插上电脑的hdmi线，连接电源，开机，听到滴的声音，查看显示屏，显示ugreen，就代表成功啦！！！\n\n\n\n12、再把剩下的东西怎么拆的怎么装回去，最后左下角的螺丝可以拧松一点。\n\n\n\n13、机器全部装完后，插上至少一块机械硬盘，插上前面烧录好数据的u盘，插上键盘，hdmi线连接好显示器，插上网线。\n\n\n# 刷机\n\n1、启动电源，开机的时候一直按del键，直到听到'滴'的蜂鸣声，此时你已经进入了bios页面\n\n\n\n2、关闭看门狗\n\n * 按1下键盘右箭头→进入advanced，按3下下箭头↓到watchdog settings然后回车\n\n * 进入看门狗设置项，把参数修改为disabled，如果默认是disabled则不更改，按esc退回主页面。 3、设置u盘为第一启动项\n\n * 按4下右箭头→，切到boot界面\n\n * 按3下下箭头↓，回车，切到引导设置项，再按5下下箭头↓回车，设置第一个引导为 usb key（u盘启动），然后把原本的第一项 hard disk:uefi os(ehmc bitd4r) 挪到第2项。\n\n * 按f10保存设置。这时系统会重启（仔细听系统重启的声音），此时显示屏会黑屏，狂刷代码，忽略。可以拔掉hdmi线了\n\n4、成功的话，等一分钟，打开路由器，可以寻找到设备名为sa6400的ip，如果之前固定了ip，那就试试固定的那个ip\n\n\n# 设置引导\n\n1、在 浏览器上 输入 http://ip:7681 (ip即是刚刚找到的路由器里的ip)到引导界面。\n\n\n\n2、用方向键选择choose a model，回车, 下箭头选择sa6400，回车\n\n\n\n3、选择choose a version 回车\n\n\n\n4、选择7.2，回车\n\n\n\n5、跳出这个画面，一直按回车键，不用动别的。等跳出菜单\n\n\n\n6、跳出菜单画面，选择addons menu，回车。这一步的目的是加入核显驱动\n\n\n\n7、选择add an addon 回车，然后一直按回车，直到选完所有的addon，回车\n\n\n\n\n\n\n\n8、跳回菜单，选择build the loader 然后回车，等待。\n\n\n\n\n\n9、自动跳回菜单，选择boot the loader，回车\n\n\n\n10、引导程序已完成，可以使用他提供的地址（http://192.168.5.167:5000） 登录\n\n\n\n\n# 安装系统\n\n1、等待一会，浏览器输入上面提供的地址 http://192.168.5.167:5000 登录\n\n\n\n2、手动指定文件\n\n\n\n3、这会删除数据，没问题就打勾继续\n\n\n\n4、输入型号：sa6400\n\n\n\n5、安装中\n\n\n\n6、重新启动\n\n\n\n7、等个几分钟后安装内置的套件，如果很久没变化可以尝试刷新网页或者重新登录网址\n\n\n\n8、安装完成，点击开始\n\n\n\n9、设置绿群机器名，管理员账号密码，选项不打勾\n\n\n\n10、设置更新选项为手动安装\n\n\n\n11、跳过创建账号\n\n\n\n12、不共享数据，点击提交\n\n\n\n13、两个套件可以以后再安装\n\n\n\n14、放弃保护账号\n\n\n\n15、跳过硬盘检查\n\n\n\n16、文件系统选建议的btrfs格式\n\n\n\n17、不配置加密\n\n\n\n18、再次检查\n\n\n\n19、进入系统，你看到的就是界面啦！！！\n\n",charsets:{cjk:!0}},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-74fdeb5c",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"微信机器人",frontmatter:{title:"微信机器人",date:"2024-06-06T11:37:08.000Z",permalink:"/other/bot",categories:["其它"],tags:[null]},regularPath:"/04.%E5%85%B6%E5%AE%83/02.%E5%BE%AE%E4%BF%A1%E6%9C%BA%E5%99%A8%E4%BA%BA.html",relativePath:"04.其它/02.微信机器人.md",key:"v-c79c043e",path:"/other/bot/",headers:[{level:2,title:"1、接口准备",slug:"_1、接口准备",normalizedTitle:"1、接口准备",charIndex:2},{level:3,title:"1、接口说明",slug:"_1、接口说明",normalizedTitle:"1、接口说明",charIndex:13},{level:3,title:"2、接口容器部署",slug:"_2、接口容器部署",normalizedTitle:"2、接口容器部署",charIndex:221},{level:2,title:"2、部署 one-api",slug:"_2、部署-one-api",normalizedTitle:"2、部署 one-api",charIndex:614},{level:3,title:"容器安装",slug:"容器安装",normalizedTitle:"容器安装",charIndex:631},{level:3,title:"配置 one-api",slug:"配置-one-api",normalizedTitle:"配置 one-api",charIndex:712},{level:3,title:"渠道密钥获取",slug:"渠道密钥获取",normalizedTitle:"渠道密钥获取",charIndex:910},{level:2,title:"3、部署个人微信 chatgpt-on-wechat",slug:"_3、部署个人微信-chatgpt-on-wechat",normalizedTitle:"3、部署个人微信 chatgpt-on-wechat",charIndex:2673},{level:2,title:"4、企业微信",slug:"_4、企业微信",normalizedTitle:"4、企业微信",charIndex:3574},{level:2,title:"5、COW 环境参数说明",slug:"_5、cow-环境参数说明",normalizedTitle:"5、cow 环境参数说明",charIndex:4003}],headersStr:"1、接口准备 1、接口说明 2、接口容器部署 2、部署 one-api 容器安装 配置 one-api 渠道密钥获取 3、部署个人微信 chatgpt-on-wechat 4、企业微信 5、COW 环境参数说明",content:'# 1、接口准备\n\n\n# 1、接口说明\n\n1、所有接口相关文档可以查看：https://github.com/LLM-Red-Team，可以点击查看相对应的接口，按需配置即可。画图的可以选讯飞、智谱、阿里，语音的话选海螺。\n\n\n\n2、百度语音 识别和合成，按需，我没搞\n\n * 打开百度智能云 领取全部接口。\n * 创建应用：https://console.bce.baidu.com/ai/#/ai/speech/app/list\n\n\n# 2、接口容器部署\n\n1、拉取镜像\n\n * kimi：vinlic/kimi-free-api\n * 跃问 step：vinlic/step-free-api\n * 阿里通义 qwen：vinlic/qwen-free-api\n * 智谱清言 glm：vinlic/glm-free-api\n * 秘塔 metaso：vinlic/metaso-free-api\n * 讯飞星火 spark：vinlic/spark-free-api\n * 海螺 hailuo：vinlic/hailuo-free-api\n * 深度求索 deepseek：vinlic/deepseek-free-api\n * 聆心智能 emohaa：vinlic/emohaa-free-api\n\n2、分别部署容器\n\n1）端口：本地端口改个未被占用的\n\n2）环境添加一行： TZ=Asia/Shanghai\n\n\n# 2、部署 one-api\n\n\n# 容器安装\n\n1、拉取 justsong/one-api 镜像\n\n\n\n2、部署 one-api 容器\n\n挂载目录：\n\n\n\n端口设置：\n\n\n\n环境配置：\n\n\n\n\n# 配置 one-api\n\n1、进入 oneapi 后台，点击登录， 默认账号 root 默认密码 123456\n\n\n\n2、进去后会提示修改密码，建议修改\n\n\n\n3、点击令牌-添加令牌\n\n\n\n4、名称自定义，然后设置过期时间和限额，这里我选不过期和不限额。\n\n\n\n5、设置好后，点击复制可以复制令牌\n\n\n\n6、点击渠道-添加渠道\n\n\n\n7、提交后可以看到添加的渠道，可以点击测试查看状态\n\n\n\n\n# 渠道密钥获取\n\n1、kimi\n\n从 kimi 官网 获取 refresh_token：进入 kimi 随便发起一个对话，然后 F12 打开开发者工具，从 Application > Local Storage 中找到 refresh_token 的值，这将作为 Authorization 的 Bearer Token 值\n\n2、跃问 step-- 会掉，得手机验证码\n\n从 跃问 官网 获取 deviceId 和 Oasis-Token：\n\n * 进入 StepChat 随便发起一个对话，然后 F12 打开开发者工具。\n * 从 Application > LocalStorage 中找到 deviceId 的值（去除双引号），如：267bcc81a01c2032a11a3fc6ec3e372c380eb9d1\n * 从 Application > Cookies 中找到 Oasis-Token 的值，如：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n * 将 deviceId 的值 和 Oasis-Token 的值 使用 @ 拼接得到 Authorization 的 Bearer Token 值\n\n3、阿里通义 qwen -- 会掉，得手机验证码\n\n进入通义千问 官网随便发起一个对话，然后 F12 打开开发者工具，从 Application > Cookies 中找到 tongyi_sso_ticket 的值，这将作为 Authorization 的 Bearer Token 值\n\n4、智谱清言 glm\n\n进入智谱清言 官网 随便发起一个对话，然后 F12 打开开发者工具，从 Application > Cookies 中找到 chatglm_refresh_token 的值，这将作为 Authorization 的 Bearer Token 值\n\n5、讯飞星火 spark\n\n进入 讯飞星火 官网 登录并发起一个对话，由于星火平台禁用 F12 开发者工具，请安装 Cookie-Editor 浏览器插件查看 ssoSessionId 值作为你的 Cookie。\n\n6、秘塔 metaso -- 会掉，得手机验证码，可密码\n\n从 从 秘塔 官网 获取 uid 和 sid 并使用-拼接：\n\n进入秘塔 AI 搜索，登录账号（建议登录账号，否则可能遭遇奇怪的限制），然后 F12 打开开发者工具，从 Application > Cookies 中找到 uid 和 sid 的值。\n\n将 uid 和 sid 拼接：uid-sid，如 65e91a6b2bac5b600dd8526a-5e7acc465b114236a8d9de26c9f41846 得到 Authorization 的 Bearer Token 值\n\n7、海螺 hailuo\n\n进入海螺 官网随便发起一个对话，然后 F12 打开开发者工具，从 Application > LocalStorage 中找到 _token 的值，这将作为 Authorization 的 Bearer Token 值\n\n模型选：gpt-4、whisper-1、tts-1-hd、abab6.5-chat、abab6.5s-chat\n\n模型重定向填写：\n\n{\n  "whisper-1": "keli_hailuo"\n}\n\n\n\n1\n2\n3\n4\n\n\n8、深度求索 deepseek --会掉，密码\n\n进入 深度求索 官网 随便发起一个对话，然后 F12 打开开发者工具，从 Application > LocalStorage 中找到 userToken 中的 value 值，这将作为 Authorization 的 Bearer Token 值\n\n9、聆心智能 emohaa--token 不易获取\n\n从 聆心智能 官网登录进入，由于 emohaa 禁用 F12 开发者工具，请先安装 Manage LocalStorage 插件（我在 edeg 没找到，所以没搞了），再从在当前页面中打开插件并点击 Export 按钮找到 Token 的值，这将作为 Authorization 的 Bearer Token 值\n\n\n# 3、部署个人微信 chatgpt-on-wechat\n\n1、拉取 zhayujie/chatgpt-on-wechat 镜像\n\n\n\n2、部署 chatgpt-on-wechat 容器\n\n文件挂载,文件可以去https://github.com/syueya/COW下载：\n\n\n\n * /app/config.json（必需）：环境参数配置文件，你可以在环境中配置环境参数，推荐挂载，这样方便更改。\n   \n   \n\n * /app/plugins/config.json（按需）: 密码随意设，微信号填你大号的微信号，而不是你扫码的\n   \n   \n\n * /app/voice/openai/openai_voice.py（按需）:需要语音的话加\n\n * /app/plugins/godcmd/godcmd.py（按需）:更丰富的 help 指令\n\n * /app/channel/chat_channel.py（不建议）:每条文字都转换条语音\n\n3、微信扫描登录，建议用小号\n\n1）查看容器日志，找到类似于https://api.pwmqr.com/qrcode/create/?url=https://login.weixin.qq.com...这样的扫码链接地址\n\n2）也可进入 ssh，输入以下命令获取二维码，然后微信扫描登录\n\nsudo docker logs -f chatgpt-on-wechat # 如果有root权限的话，可以去掉sudo，绿联是不需要sudo的\n\n\n\n4、无权限问题（一般不会遇到）\n\n如果显示[Errno 13]Permission denied:\'./config.json\'，可以 ssh 里执行以下命令修改权限：\n\n记得把路径换成自己的。\n\nchmod a+rw /volume3/docker/chatgpt-on-wechat/plugins/config.json   ## 修改权限\nls -l /volume3/docker/chatgpt-on-wechat/plugins/config.json  ## 查看权限\n\n\n1\n2\n\n\n\n# 4、企业微信\n\nCOW 环境参数需要填写以下内容，参考：https://docs.link-ai.tech/cow/multi-platform/wechat-com\n\n"channel_type": "wechatcom_app",   # 渠道配置成企业微信\n"wechatcom_corp_id": "",  # 企业微信公司的corpID\n"wechatcomapp_token": "",  # 企业微信app的token\n"wechatcomapp_port": 9898,  # 企业微信app的服务端口,需要端口转发\n"wechatcomapp_secret": "",  # 企业微信app的secret\n"wechatcomapp_agent_id": "",  # 企业微信app的agent_id\n"wechatcomapp_aes_key": "",  # 企业微信app的aes_key\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 5、COW 环境参数说明\n\n/app/config.json 文件：openai api key 和 OPEN_AI_API_BASE 修改成自己的，，群名那也改改，其他的自定义修改，也可以不用改\n\n{\n  # openai api配置\n  "open_ai_api_key": "",     # 必填\n  "open_ai_api_base": "http://192.168.31.31:3005/v1",    # 必填\n  "proxy": "",  # openai使用的代理\n  "model": "gpt-4", # chatgpt模型，支持 gpt-3.5-turbo, gpt-4, gpt-4-turbo, wenxin, xunfei, qwen\n  "use_azure_chatgpt": false, # 是否使用azure的chatgpt\n  "azure_deployment_id": "",  # azure 模型部署名称\n  "azure_api_version": "",  # azure api版本\n\n  # Bot触发配置\n  "single_chat_prefix": [""], # 私聊时文本需要包含该前缀才能触发机器人回复\n  "single_chat_reply_prefix": "", # 私聊时自动回复的前缀，用于区分真人\n  "single_chat_reply_suffix": "", # 私聊时自动回复的后缀，\\n 可以换行\n  "group_chat_prefix": ["老大", "@老大"], # 群聊时包含该前缀则会触发机器人回复\n  "group_chat_reply_prefix": "",  # 群聊时自动回复的前缀\n  "group_chat_reply_suffix": "",  # 群聊时自动回复的后缀，\\n 可以换行\n  "group_chat_keyword": [], # 群聊时包含该关键词则会触发机器人回复\n  "group_at_off": false,  # 是否关闭群聊时@bot 的触发\n  "group_name_white_list": ["ALL_GROUP"], # 开启自动回复的群名称列表\n  "group_name_keyword_white_list": [],  # 开启自动回复的群名称关键词列表\n  "group_chat_in_one_session": ["nas吹水28群", "一个老大和两个小弟", "发财群"],   # 支持会话上下文共享的群名称\n  "nick_name_black_list": [], # 用户昵称黑名单\n  "group_welcome_msg": "",  # 配置新人进群固定欢迎语，不配置则使用随机风格欢迎\n  "trigger_by_self": false, # 是否允许机器人触发\n  "text_to_image": "dall-e-3",  # 图片生成模型，可选 dall-e-2, dall-e-3\n  "image_proxy": true,  # 是否需要图片代理，国内访问 LinkAI 时需要\n  "image_create_prefix": ["画"],  # 开启图片回复的前缀\n  "concurrency_in_session": 1,  # 同一会话最多有多少条消息在处理中，大于 1 可能乱序\n  "image_create_size": "256x256", # 图片大小,可选有 256x256, 512x512, 1024x1024 (dall-e-3 默认为 1024x1024)\n  "group_chat_exit_group": false,\n\n  # 无操作会话的过期时间\n  "expires_in_seconds": 3600,\n\n  # 人格描述\n  "character_desc": "你将扮演一位有点摆烂的打工人形象，你富有同理心，有人问你问题你会耐心回复，但有时候对于一些太傻的问题你也很无语，会阴阳怪气的回复。",\n\n  "conversation_max_tokens": 1000,  # 支持上下文记忆的最多字符数\n  "rate_limit_chatgpt": 20, # chatgpt的调用频率限制\n  "rate_limit_dalle": 50, # openai dalle的调用频率限制\n\n  # chatgpt api参数 参考https://platform.openai.com/docs/api-reference/chat/create\n  "temperature": 0.9,\n  "top_p": 1,\n  "frequency_penalty": 0,\n  "presence_penalty": 0,\n  "request_timeout": 180, # chatgpt请求超时时间，openai接口默认设置为600，对于难问题一般需要较长时间\n  "timeout": 120, # chatgpt重试超时时间，在这个时间内，将会自动重试\n\n  # Baidu 文心一言参数\n  "baidu_wenxin_model": "eb-instant", # 默认使用ERNIE-Bot-turbo模型\n  "baidu_wenxin_api_key": "", # Baidu api key\n  "baidu_wenxin_secret_key": "",  # Baidu secret key\n\n  # 讯飞星火API\n  "xunfei_app_id": "",  # 讯飞应用ID\n  "xunfei_api_key": "", # 讯飞 API key\n  "xunfei_api_secret": "",  # 讯飞 API secret\n\n  # claude 配置\n  "claude_api_cookie": "",\n  "claude_uuid": "",\n  "claude_api_key": "",\n\n  # 通义千问API\n  "qwen_access_key_id": "",\n  "qwen_access_key_secret": "",\n  "qwen_agent_key": "",\n  "qwen_app_id": "",\n  "qwen_node_id": "", # 流程编排模型用到的id，如果没有用到qwen_node_id，请务必保持为空字符串\n\n  # 阿里灵积模型api key\n  "dashscope_api_key": "",\n  "gemini_api_key": "",\n  "wework_smart": true, # 配置wework是否使用已登录的企业微信，False为多开\n\n  # 语音设置\n  "speech_recognition": true, # 是否开启语音识别\n  "group_speech_recognition": true, # 是否开启群组语音识别\n  "voice_reply_voice": true,  # 是否使用语音回复语音，需要设置对应语音合成引擎的api key\n  "always_reply_voice": false,  # 是否一直使用语音回复\n  "voice_to_text": "openai",  # 语音识别引擎\n  "text_to_voice": "openai",  # 语音合成引擎\n  "text_to_voice_model": "tts-1-hd",  # tts使用的模型\n  "tts_voice_id": "onyx", # 语音生成的音色\n\n  # baidu 语音api配置， 使用百度语音识别和语音合成时需要\n  "baidu_app_id": "",\n  "baidu_api_key": "",\n  "baidu_secret_key": "",\n  "baidu_dev_pid": "1536",  # 1536普通话(支持简单的英文识别) 1737英语 1637粤语 1837四川话 1936普通话远场\n\n  # azure 语音api配置， 使用azure语音识别和语音合成时需要\n  "azure_voice_api_key": "",\n  "azure_voice_region": "japaneast",\n\n  # elevenlabs 语音api配置\n  "xi_api_key": "",\n  "xi_voice_id": "",  #ElevenLabs提供了9种英式、美式等英语发音id，分别是“Adam/Antoni/Arnold/Bella/Domi/Elli/Josh/Rachel/Sam\n\n\n  # 服务时间限制，目前支持itchat\n  "chat_time_module": false,  # 是否开启服务时间限制\n  "chat_start_time": "00:00", # 服务开始时间\n  "chat_stop_time": "24:00",  # 服务结束时间\n\n  # 翻译api\n  "translate": "baidu", # 翻译api，支持baidu\n  "baidu_translate_app_id": "", # # 百度翻译api的秘钥\n  "baidu_translate_app_key": "",  # 百度翻译api的秘钥\n\n  "hot_reload": false,  # 是否开启热重载\n\n  # wechaty的配置\n  "wechaty_puppet_service_token": "", # wechaty的token\n\n  # wechatmp的配置\n  "wechatmp_token": "", # 微信公众平台的Token\n  "wechatmp_port": 8080,  # 微信公众平台的端口,需要端口转发到80或443\n  "wechatmp_app_id": "",  # 微信公众平台的appID\n  "wechatmp_app_secret": "",  # 微信公众平台的appsecret\n  "wechatmp_aes_key": "", # 微信公众平台的EncodingAESKey，加密模式需要\n\n  # wechatcom的通用配置\n  "wechatcom_corp_id": "",  # 企业微信公司的corpID\n  "wechatcomapp_token": "", # 企业微信app的token\n  "wechatcomapp_port": 9898,  # 企业微信app的服务端口不需要端口转发\n  "wechatcomapp_secret": "",  # 企业微信app的secret\n  "wechatcomapp_agent_id": "",  # 企业微信app的agent_id\n  "wechatcomapp_aes_key": "", # 企业微信app的aes_key\n\n  # 飞书配置\n  "feishu_port": 80,  # 飞书bot监听端口\n  "feishu_app_id": "",  # 飞书机器人应用APP Id\n  "feishu_app_secret": "",  # 飞书机器人APP secret\n  "feishu_token": "", # 飞书 verification token\n  "feishu_bot_name": "",  # 飞书机器人的名字\n\n  # 钉钉配置\n  "dingtalk_client_id": "", # 钉钉机器人Client ID\n  "dingtalk_client_secret": "", # 钉钉机器人Client Secret\n\n\n  "clear_memory_commands": ["#清除记忆"], # 重置会话指令，必须以#开头\n  "channel_type": "wx", # channel配置，通道类型，支持：{wx,wxy,terminal,wechatmp,wechatmp_service,wechatcom_app}\n  "subscribe_msg": "",  # 订阅消息, 支持: wechatmp, wechatmp_service, wechatcom_app\n  "debug": false, # 是否开启debug模式，开启后会打印更多日志\n  "appdata_dir": "", # 数据目录\n\n  # 插件配置\n  PLUGIN_TRIGGER_PREFIX: \'$\'  # 规范插件提供聊天相关指令的前缀，建议不要和管理员指令前缀"#"冲突\n  USE_GLOBAL_PLUGIN_CONFIG: \'True\'    # 是否使用全局插件配置\n  MAX_MEDIA_SEND_COUNT: 3 # 单次最大发送媒体资源的个数\n  MEDIA_SEND_INTERVAL: 1  # 发送图片的事件间隔，单位秒\n\n  # 智谱AI 平台配置\n  ZHIPU_AI_API_KEY: \'\'\n  ZHIPU_AI_API_BASE: https://open.bigmodel.cn/api/paas/v4\n  MOONSHOT_API_KEY: \'\'\n  MOONSHOT_BASE_URL: https://api.moonshot.cn/v1/chat/completions\n\n  # LinkAI平台配置\n  USE_LINKAI: \'False\'\n  LINKAI_API_KEY: \'\'\n  LINKAI_APP_CODE: \'\'\n  LINKAI_API_BASE: https://api.link-ai.tech   # linkAI服务地址\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n',normalizedContent:'# 1、接口准备\n\n\n# 1、接口说明\n\n1、所有接口相关文档可以查看：https://github.com/llm-red-team，可以点击查看相对应的接口，按需配置即可。画图的可以选讯飞、智谱、阿里，语音的话选海螺。\n\n\n\n2、百度语音 识别和合成，按需，我没搞\n\n * 打开百度智能云 领取全部接口。\n * 创建应用：https://console.bce.baidu.com/ai/#/ai/speech/app/list\n\n\n# 2、接口容器部署\n\n1、拉取镜像\n\n * kimi：vinlic/kimi-free-api\n * 跃问 step：vinlic/step-free-api\n * 阿里通义 qwen：vinlic/qwen-free-api\n * 智谱清言 glm：vinlic/glm-free-api\n * 秘塔 metaso：vinlic/metaso-free-api\n * 讯飞星火 spark：vinlic/spark-free-api\n * 海螺 hailuo：vinlic/hailuo-free-api\n * 深度求索 deepseek：vinlic/deepseek-free-api\n * 聆心智能 emohaa：vinlic/emohaa-free-api\n\n2、分别部署容器\n\n1）端口：本地端口改个未被占用的\n\n2）环境添加一行： tz=asia/shanghai\n\n\n# 2、部署 one-api\n\n\n# 容器安装\n\n1、拉取 justsong/one-api 镜像\n\n\n\n2、部署 one-api 容器\n\n挂载目录：\n\n\n\n端口设置：\n\n\n\n环境配置：\n\n\n\n\n# 配置 one-api\n\n1、进入 oneapi 后台，点击登录， 默认账号 root 默认密码 123456\n\n\n\n2、进去后会提示修改密码，建议修改\n\n\n\n3、点击令牌-添加令牌\n\n\n\n4、名称自定义，然后设置过期时间和限额，这里我选不过期和不限额。\n\n\n\n5、设置好后，点击复制可以复制令牌\n\n\n\n6、点击渠道-添加渠道\n\n\n\n7、提交后可以看到添加的渠道，可以点击测试查看状态\n\n\n\n\n# 渠道密钥获取\n\n1、kimi\n\n从 kimi 官网 获取 refresh_token：进入 kimi 随便发起一个对话，然后 f12 打开开发者工具，从 application > local storage 中找到 refresh_token 的值，这将作为 authorization 的 bearer token 值\n\n2、跃问 step-- 会掉，得手机验证码\n\n从 跃问 官网 获取 deviceid 和 oasis-token：\n\n * 进入 stepchat 随便发起一个对话，然后 f12 打开开发者工具。\n * 从 application > localstorage 中找到 deviceid 的值（去除双引号），如：267bcc81a01c2032a11a3fc6ec3e372c380eb9d1\n * 从 application > cookies 中找到 oasis-token 的值，如：eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9...\n * 将 deviceid 的值 和 oasis-token 的值 使用 @ 拼接得到 authorization 的 bearer token 值\n\n3、阿里通义 qwen -- 会掉，得手机验证码\n\n进入通义千问 官网随便发起一个对话，然后 f12 打开开发者工具，从 application > cookies 中找到 tongyi_sso_ticket 的值，这将作为 authorization 的 bearer token 值\n\n4、智谱清言 glm\n\n进入智谱清言 官网 随便发起一个对话，然后 f12 打开开发者工具，从 application > cookies 中找到 chatglm_refresh_token 的值，这将作为 authorization 的 bearer token 值\n\n5、讯飞星火 spark\n\n进入 讯飞星火 官网 登录并发起一个对话，由于星火平台禁用 f12 开发者工具，请安装 cookie-editor 浏览器插件查看 ssosessionid 值作为你的 cookie。\n\n6、秘塔 metaso -- 会掉，得手机验证码，可密码\n\n从 从 秘塔 官网 获取 uid 和 sid 并使用-拼接：\n\n进入秘塔 ai 搜索，登录账号（建议登录账号，否则可能遭遇奇怪的限制），然后 f12 打开开发者工具，从 application > cookies 中找到 uid 和 sid 的值。\n\n将 uid 和 sid 拼接：uid-sid，如 65e91a6b2bac5b600dd8526a-5e7acc465b114236a8d9de26c9f41846 得到 authorization 的 bearer token 值\n\n7、海螺 hailuo\n\n进入海螺 官网随便发起一个对话，然后 f12 打开开发者工具，从 application > localstorage 中找到 _token 的值，这将作为 authorization 的 bearer token 值\n\n模型选：gpt-4、whisper-1、tts-1-hd、abab6.5-chat、abab6.5s-chat\n\n模型重定向填写：\n\n{\n  "whisper-1": "keli_hailuo"\n}\n\n\n\n1\n2\n3\n4\n\n\n8、深度求索 deepseek --会掉，密码\n\n进入 深度求索 官网 随便发起一个对话，然后 f12 打开开发者工具，从 application > localstorage 中找到 usertoken 中的 value 值，这将作为 authorization 的 bearer token 值\n\n9、聆心智能 emohaa--token 不易获取\n\n从 聆心智能 官网登录进入，由于 emohaa 禁用 f12 开发者工具，请先安装 manage localstorage 插件（我在 edeg 没找到，所以没搞了），再从在当前页面中打开插件并点击 export 按钮找到 token 的值，这将作为 authorization 的 bearer token 值\n\n\n# 3、部署个人微信 chatgpt-on-wechat\n\n1、拉取 zhayujie/chatgpt-on-wechat 镜像\n\n\n\n2、部署 chatgpt-on-wechat 容器\n\n文件挂载,文件可以去https://github.com/syueya/cow下载：\n\n\n\n * /app/config.json（必需）：环境参数配置文件，你可以在环境中配置环境参数，推荐挂载，这样方便更改。\n   \n   \n\n * /app/plugins/config.json（按需）: 密码随意设，微信号填你大号的微信号，而不是你扫码的\n   \n   \n\n * /app/voice/openai/openai_voice.py（按需）:需要语音的话加\n\n * /app/plugins/godcmd/godcmd.py（按需）:更丰富的 help 指令\n\n * /app/channel/chat_channel.py（不建议）:每条文字都转换条语音\n\n3、微信扫描登录，建议用小号\n\n1）查看容器日志，找到类似于https://api.pwmqr.com/qrcode/create/?url=https://login.weixin.qq.com...这样的扫码链接地址\n\n2）也可进入 ssh，输入以下命令获取二维码，然后微信扫描登录\n\nsudo docker logs -f chatgpt-on-wechat # 如果有root权限的话，可以去掉sudo，绿联是不需要sudo的\n\n\n\n4、无权限问题（一般不会遇到）\n\n如果显示[errno 13]permission denied:\'./config.json\'，可以 ssh 里执行以下命令修改权限：\n\n记得把路径换成自己的。\n\nchmod a+rw /volume3/docker/chatgpt-on-wechat/plugins/config.json   ## 修改权限\nls -l /volume3/docker/chatgpt-on-wechat/plugins/config.json  ## 查看权限\n\n\n1\n2\n\n\n\n# 4、企业微信\n\ncow 环境参数需要填写以下内容，参考：https://docs.link-ai.tech/cow/multi-platform/wechat-com\n\n"channel_type": "wechatcom_app",   # 渠道配置成企业微信\n"wechatcom_corp_id": "",  # 企业微信公司的corpid\n"wechatcomapp_token": "",  # 企业微信app的token\n"wechatcomapp_port": 9898,  # 企业微信app的服务端口,需要端口转发\n"wechatcomapp_secret": "",  # 企业微信app的secret\n"wechatcomapp_agent_id": "",  # 企业微信app的agent_id\n"wechatcomapp_aes_key": "",  # 企业微信app的aes_key\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 5、cow 环境参数说明\n\n/app/config.json 文件：openai api key 和 open_ai_api_base 修改成自己的，，群名那也改改，其他的自定义修改，也可以不用改\n\n{\n  # openai api配置\n  "open_ai_api_key": "",     # 必填\n  "open_ai_api_base": "http://192.168.31.31:3005/v1",    # 必填\n  "proxy": "",  # openai使用的代理\n  "model": "gpt-4", # chatgpt模型，支持 gpt-3.5-turbo, gpt-4, gpt-4-turbo, wenxin, xunfei, qwen\n  "use_azure_chatgpt": false, # 是否使用azure的chatgpt\n  "azure_deployment_id": "",  # azure 模型部署名称\n  "azure_api_version": "",  # azure api版本\n\n  # bot触发配置\n  "single_chat_prefix": [""], # 私聊时文本需要包含该前缀才能触发机器人回复\n  "single_chat_reply_prefix": "", # 私聊时自动回复的前缀，用于区分真人\n  "single_chat_reply_suffix": "", # 私聊时自动回复的后缀，\\n 可以换行\n  "group_chat_prefix": ["老大", "@老大"], # 群聊时包含该前缀则会触发机器人回复\n  "group_chat_reply_prefix": "",  # 群聊时自动回复的前缀\n  "group_chat_reply_suffix": "",  # 群聊时自动回复的后缀，\\n 可以换行\n  "group_chat_keyword": [], # 群聊时包含该关键词则会触发机器人回复\n  "group_at_off": false,  # 是否关闭群聊时@bot 的触发\n  "group_name_white_list": ["all_group"], # 开启自动回复的群名称列表\n  "group_name_keyword_white_list": [],  # 开启自动回复的群名称关键词列表\n  "group_chat_in_one_session": ["nas吹水28群", "一个老大和两个小弟", "发财群"],   # 支持会话上下文共享的群名称\n  "nick_name_black_list": [], # 用户昵称黑名单\n  "group_welcome_msg": "",  # 配置新人进群固定欢迎语，不配置则使用随机风格欢迎\n  "trigger_by_self": false, # 是否允许机器人触发\n  "text_to_image": "dall-e-3",  # 图片生成模型，可选 dall-e-2, dall-e-3\n  "image_proxy": true,  # 是否需要图片代理，国内访问 linkai 时需要\n  "image_create_prefix": ["画"],  # 开启图片回复的前缀\n  "concurrency_in_session": 1,  # 同一会话最多有多少条消息在处理中，大于 1 可能乱序\n  "image_create_size": "256x256", # 图片大小,可选有 256x256, 512x512, 1024x1024 (dall-e-3 默认为 1024x1024)\n  "group_chat_exit_group": false,\n\n  # 无操作会话的过期时间\n  "expires_in_seconds": 3600,\n\n  # 人格描述\n  "character_desc": "你将扮演一位有点摆烂的打工人形象，你富有同理心，有人问你问题你会耐心回复，但有时候对于一些太傻的问题你也很无语，会阴阳怪气的回复。",\n\n  "conversation_max_tokens": 1000,  # 支持上下文记忆的最多字符数\n  "rate_limit_chatgpt": 20, # chatgpt的调用频率限制\n  "rate_limit_dalle": 50, # openai dalle的调用频率限制\n\n  # chatgpt api参数 参考https://platform.openai.com/docs/api-reference/chat/create\n  "temperature": 0.9,\n  "top_p": 1,\n  "frequency_penalty": 0,\n  "presence_penalty": 0,\n  "request_timeout": 180, # chatgpt请求超时时间，openai接口默认设置为600，对于难问题一般需要较长时间\n  "timeout": 120, # chatgpt重试超时时间，在这个时间内，将会自动重试\n\n  # baidu 文心一言参数\n  "baidu_wenxin_model": "eb-instant", # 默认使用ernie-bot-turbo模型\n  "baidu_wenxin_api_key": "", # baidu api key\n  "baidu_wenxin_secret_key": "",  # baidu secret key\n\n  # 讯飞星火api\n  "xunfei_app_id": "",  # 讯飞应用id\n  "xunfei_api_key": "", # 讯飞 api key\n  "xunfei_api_secret": "",  # 讯飞 api secret\n\n  # claude 配置\n  "claude_api_cookie": "",\n  "claude_uuid": "",\n  "claude_api_key": "",\n\n  # 通义千问api\n  "qwen_access_key_id": "",\n  "qwen_access_key_secret": "",\n  "qwen_agent_key": "",\n  "qwen_app_id": "",\n  "qwen_node_id": "", # 流程编排模型用到的id，如果没有用到qwen_node_id，请务必保持为空字符串\n\n  # 阿里灵积模型api key\n  "dashscope_api_key": "",\n  "gemini_api_key": "",\n  "wework_smart": true, # 配置wework是否使用已登录的企业微信，false为多开\n\n  # 语音设置\n  "speech_recognition": true, # 是否开启语音识别\n  "group_speech_recognition": true, # 是否开启群组语音识别\n  "voice_reply_voice": true,  # 是否使用语音回复语音，需要设置对应语音合成引擎的api key\n  "always_reply_voice": false,  # 是否一直使用语音回复\n  "voice_to_text": "openai",  # 语音识别引擎\n  "text_to_voice": "openai",  # 语音合成引擎\n  "text_to_voice_model": "tts-1-hd",  # tts使用的模型\n  "tts_voice_id": "onyx", # 语音生成的音色\n\n  # baidu 语音api配置， 使用百度语音识别和语音合成时需要\n  "baidu_app_id": "",\n  "baidu_api_key": "",\n  "baidu_secret_key": "",\n  "baidu_dev_pid": "1536",  # 1536普通话(支持简单的英文识别) 1737英语 1637粤语 1837四川话 1936普通话远场\n\n  # azure 语音api配置， 使用azure语音识别和语音合成时需要\n  "azure_voice_api_key": "",\n  "azure_voice_region": "japaneast",\n\n  # elevenlabs 语音api配置\n  "xi_api_key": "",\n  "xi_voice_id": "",  #elevenlabs提供了9种英式、美式等英语发音id，分别是“adam/antoni/arnold/bella/domi/elli/josh/rachel/sam\n\n\n  # 服务时间限制，目前支持itchat\n  "chat_time_module": false,  # 是否开启服务时间限制\n  "chat_start_time": "00:00", # 服务开始时间\n  "chat_stop_time": "24:00",  # 服务结束时间\n\n  # 翻译api\n  "translate": "baidu", # 翻译api，支持baidu\n  "baidu_translate_app_id": "", # # 百度翻译api的秘钥\n  "baidu_translate_app_key": "",  # 百度翻译api的秘钥\n\n  "hot_reload": false,  # 是否开启热重载\n\n  # wechaty的配置\n  "wechaty_puppet_service_token": "", # wechaty的token\n\n  # wechatmp的配置\n  "wechatmp_token": "", # 微信公众平台的token\n  "wechatmp_port": 8080,  # 微信公众平台的端口,需要端口转发到80或443\n  "wechatmp_app_id": "",  # 微信公众平台的appid\n  "wechatmp_app_secret": "",  # 微信公众平台的appsecret\n  "wechatmp_aes_key": "", # 微信公众平台的encodingaeskey，加密模式需要\n\n  # wechatcom的通用配置\n  "wechatcom_corp_id": "",  # 企业微信公司的corpid\n  "wechatcomapp_token": "", # 企业微信app的token\n  "wechatcomapp_port": 9898,  # 企业微信app的服务端口不需要端口转发\n  "wechatcomapp_secret": "",  # 企业微信app的secret\n  "wechatcomapp_agent_id": "",  # 企业微信app的agent_id\n  "wechatcomapp_aes_key": "", # 企业微信app的aes_key\n\n  # 飞书配置\n  "feishu_port": 80,  # 飞书bot监听端口\n  "feishu_app_id": "",  # 飞书机器人应用app id\n  "feishu_app_secret": "",  # 飞书机器人app secret\n  "feishu_token": "", # 飞书 verification token\n  "feishu_bot_name": "",  # 飞书机器人的名字\n\n  # 钉钉配置\n  "dingtalk_client_id": "", # 钉钉机器人client id\n  "dingtalk_client_secret": "", # 钉钉机器人client secret\n\n\n  "clear_memory_commands": ["#清除记忆"], # 重置会话指令，必须以#开头\n  "channel_type": "wx", # channel配置，通道类型，支持：{wx,wxy,terminal,wechatmp,wechatmp_service,wechatcom_app}\n  "subscribe_msg": "",  # 订阅消息, 支持: wechatmp, wechatmp_service, wechatcom_app\n  "debug": false, # 是否开启debug模式，开启后会打印更多日志\n  "appdata_dir": "", # 数据目录\n\n  # 插件配置\n  plugin_trigger_prefix: \'$\'  # 规范插件提供聊天相关指令的前缀，建议不要和管理员指令前缀"#"冲突\n  use_global_plugin_config: \'true\'    # 是否使用全局插件配置\n  max_media_send_count: 3 # 单次最大发送媒体资源的个数\n  media_send_interval: 1  # 发送图片的事件间隔，单位秒\n\n  # 智谱ai 平台配置\n  zhipu_ai_api_key: \'\'\n  zhipu_ai_api_base: https://open.bigmodel.cn/api/paas/v4\n  moonshot_api_key: \'\'\n  moonshot_base_url: https://api.moonshot.cn/v1/chat/completions\n\n  # linkai平台配置\n  use_linkai: \'false\'\n  linkai_api_key: \'\'\n  linkai_app_code: \'\'\n  linkai_api_base: https://api.link-ai.tech   # linkai服务地址\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n',charsets:{cjk:!0}},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-00210ffc",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Home",frontmatter:{home:!0,heroText:"夏夏子的博客",tagline:"积跬步以至千里，致敬每个爱学习的你",features:[{title:"娱乐",details:"影视、音乐、有声书等docker",link:"/fun/emby/",imgUrl:"/img/fun.png"},{title:"工具",details:"工具类docker",link:"/tool/qBittorrent/",imgUrl:"/img/tool.png"},{title:"网络",details:"网络类docker",link:"/network/ddnsto/",imgUrl:"/img/network.png"}],postList:"simple",simplePostListLength:5},regularPath:"/",relativePath:"README.md",key:"v-191607df",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"emby",frontmatter:{title:"emby",date:"2024-02-26T10:17:03.000Z",permalink:"/fun/emby/",categories:["娱乐"],tags:[null]},regularPath:"/01.%E5%A8%B1%E4%B9%90/01.%E5%BD%B1%E8%A7%86/06.emby.html",relativePath:"01.娱乐/01.影视/06.emby.md",key:"v-745d12aa",path:"/fun/emby/",headers:[{level:2,title:"1、容器创建",slug:"_1、容器创建",normalizedTitle:"1、容器创建",charIndex:2},{level:2,title:"2、初始化",slug:"_2、初始化",normalizedTitle:"2、初始化",charIndex:672},{level:2,title:"3、设置",slug:"_3、设置",normalizedTitle:"3、设置",charIndex:885},{level:3,title:"1、转码",slug:"_1、转码",normalizedTitle:"1、转码",charIndex:1128},{level:3,title:"2、添加媒体库",slug:"_2、添加媒体库",normalizedTitle:"2、添加媒体库",charIndex:1206},{level:3,title:"4、插件",slug:"_4、插件",normalizedTitle:"4、插件",charIndex:1408},{level:2,title:"5、其它",slug:"_5、其它",normalizedTitle:"5、其它",charIndex:1574},{level:3,title:"1）emby 客户端",slug:"_1-emby-客户端",normalizedTitle:"1）emby 客户端",charIndex:1583},{level:3,title:"2）webhooks",slug:"_2-webhooks",normalizedTitle:"2）webhooks",charIndex:1637},{level:2,title:"6、命名规范",slug:"_6、命名规范",normalizedTitle:"6、命名规范",charIndex:1762},{level:3,title:"1）电影的命名",slug:"_1-电影的命名",normalizedTitle:"1）电影的命名",charIndex:1773},{level:3,title:"2）电视剧的命名",slug:"_2-电视剧的命名",normalizedTitle:"2）电视剧的命名",charIndex:2187},{level:3,title:"3）动漫剧的命名",slug:"_3-动漫剧的命名",normalizedTitle:"3）动漫剧的命名",charIndex:2513}],headersStr:"1、容器创建 2、初始化 3、设置 1、转码 2、添加媒体库 4、插件 5、其它 1）emby 客户端 2）webhooks 6、命名规范 1）电影的命名 2）电视剧的命名 3）动漫剧的命名",content:'# 1、容器创建\n\n1、首先进入绿联 docker 镜像管理，在本地镜像下点击添加官方库，镜像名称为：amilys/embyserver:beta，来下载 beta 版本的 amilys/embyserver 镜像。\n\n> 这是我自己用的一个镜像，只是做个示例\n\n\n\n2、下载完成后在本地镜像界面创建该镜像。\n\n1）名称自定义，勾选创建后启动容器。\n\n\n\n2）在基础设置中打开硬件渲染（顾名思义是为视频硬解，如果不打开在 emby 会没有硬解选项）。重启策略设置为【容器退出时总是重启容器】(这样在设备重启或者开机下会自动打开 emby)。\n\n\n\n3）在网络中选择 HOST（因为会影响到后续的视频刮削）。\n\n\n\n4）跳过命令到存储空间，这里填写要注意了，不能乱填不然会影响读取。\n\n先在 Docker 文件夹下创建一个 amilys-emby 文件夹，再在此文件夹下创建一个 config 子文件夹，然后根据图内显示，选择这个文件夹，装载路径默认为/config ，类型改为读写。\n\n下面是你放影视资源的位置，装载路径就是 /hdd1 （你自身几个硬盘放了影视资料就加几个以此类推 /hdd2 /hdd3）。\n\n\n\n5）接下来我们来到端口设置里面，因为我们前面写的是 HOST，所以这个的本地端口是无法修改的，按默认的即可。\n\n\n\n6）这里我们跳过链接来到环境一栏，添加 TZ="Asia/Shanghai"（这个是时区）。\n\n\n\n7）点击下一步，然后点完成，可以勾选上【创建后重启容器】。\n\n\n\n这样一个 Emby 就搭建完成了。\n\n\n# 2、初始化\n\n通过 Emby 前期搭建、Emby 参数配置，Emby 的部署工作已经完成了，接下来是初始化，里面涉及到大量的个性化设置，请大家按照自己需求修改即可，如果不明白什么意思那么就和我选择同样的即可。\n\n1、打开浏览器，地址栏中输入绿联 IP:8096,下拉列表选择中文，然后点击 next。\n\n\n\n2、配置用户名和密码，点击下一步。\n\n> 在这个页面点击一下刷新才可使之前的设置生效，变为中文，我懒得刷新了。\n\n\n\n3、设置媒体库这里因为设置选项过多，我们稍后配置，点击下一个。\n\n\n\n4、首选元数据语言和国家按照自己需求选择，这里我选择简体中文和中国。\n\n\n\n5、配置远程访问这里是否勾选无影响直接选择下一个。\n\n\n\n6、接受 emby 条款，然后继续点击下一个。\n\n\n\n7、初始化步骤结束点击完成。\n\n\n\n8、点击手动登录并输入刚刚设置的账号密码来登录刚刚创建的账户。\n\n\n\n\n\n9、进入了首页\n\n\n\n\n# 3、设置\n\n登录 emby,点击右上角的小齿轮图标进入 emby 设置页面。\n\n\n\n\n# 1、转码\n\n点击转码，在启动硬件加速中选择高级，将下列的解码器全部选择 QuickSnyc，关闭所有的 VAAPI，然后记得翻到下面点击保存。\n\n\n\n\n# 2、添加媒体库\n\n关于媒体库的添加这里我主要演示一下电影的添加，关于剧集之类的因为命名比较影响信息的搜刮效果。 此步骤设置为 bt 和个人资源的信息搜刮，正在做种的资源不要按照这种方式配置容易影响做种。\n\n1、点击媒体库，点击新增媒体库\n\n\n\n2、这里因为我都是通过其它工具刮好的媒体，所以一些 emby 刮削的选项没有设置了，填写完点击确定。\n\n\n\n首次添加需要时间才能刮削完毕，请耐心等待。\n\n\n# 4、插件\n\n1）第三方插件安装\n\n1、将下载好的后缀为 dll 的插件放到文件夹/docker/emby/plugins 中即可，然后重启 emby 服务器。\n\n\n\n2、在 emby 插件选项中配置插件即可。\n\n\n\n2）字幕插件\n\n字幕插件：https://github.com/91270/MeiamSubtitles。\n\n\n# 5、其它\n\n\n# 1）emby 客户端\n\nemby 支持全平台客户端，可在官网直接下载官方软件，也可下载其他版本的。\n\n\n# 2）webhooks\n\n点击通知-添加通知，选择 webhooks\n\n\n\n设置 webhooks 名称，填写 url 后可以点击发送测试通知查看 url 是否填写正确。然后勾选想发送通知的事件。填写完成后点击添加通知。\n\n\n\n设置完成。\n\n\n\n\n# 6、命名规范\n\n\n# 1）电影的命名\n\n标准命名规范：影片名.年份.分辨率.视频编码.音频编码\n\n例：\n\n * 变形金刚 3.2011.1080p.AVC.TrueHD7.1.mkv\n * Transformers Dark Of The Moon.2011.1080p.AVC.TrueHD7.1.mkv\n * 变形金刚 3.Transformers Dark Of The Moon.2011.1080p.AVC.TrueHD7.1.mkv\n\n但其实不需要那么多后缀，中文名.年份，就够了（那么多后缀你看着烦不烦，要是有的你多的东西命名又不规范还会影响你海报识别，真心没必要），例如：【变形金刚 3.2011】。\n\n要是系列电影有小标题的，中文名中间是用冒号分开，例如【007：八爪女.1983】。\n\n真想要保留分辨率，视频编码，音频编码，中间也是用英文状态的【.】 隔开，例如【007：八爪女.1983.Blu-Ray.1080P】。\n\n\n# 2）电视剧的命名\n\n标准命名规范：影片名.季+剧集.年份.分辨率.视频编码.音频编码\n\n例：\n\n * 萨布丽娜的惊心冒险.S01E01.2018.1080p.x264.DD5.1.mp4\n * Chilling Adventures of Sabrina.S01E01.2018.1080p.x264.DD5.1.mp4\n * 萨布丽娜的惊心冒险.Chilling.Adventures.of.Sabrina.S01E01.2018.1080p.x264.DD5.1.mp4\n\n要是有的剧，每一集有小标题的话，用括号括在里面，目的是为了防止造成海报识别干扰，而不是要利用小标题，例如：【 超智能足球 2.S02E02（奥尼外传 不敌.心魔）】\n\n\n# 3）动漫剧的命名\n\n不管动漫是否只有一季，一定要创建一个“Season 1”的文件夹，不然刮削的时候不能搜到每一集的介绍。而特别篇是建一个文件夹（Season 0，Season 00，Specials）来存放的。\n\n比如我们动漫一人之下：\n\n',normalizedContent:'# 1、容器创建\n\n1、首先进入绿联 docker 镜像管理，在本地镜像下点击添加官方库，镜像名称为：amilys/embyserver:beta，来下载 beta 版本的 amilys/embyserver 镜像。\n\n> 这是我自己用的一个镜像，只是做个示例\n\n\n\n2、下载完成后在本地镜像界面创建该镜像。\n\n1）名称自定义，勾选创建后启动容器。\n\n\n\n2）在基础设置中打开硬件渲染（顾名思义是为视频硬解，如果不打开在 emby 会没有硬解选项）。重启策略设置为【容器退出时总是重启容器】(这样在设备重启或者开机下会自动打开 emby)。\n\n\n\n3）在网络中选择 host（因为会影响到后续的视频刮削）。\n\n\n\n4）跳过命令到存储空间，这里填写要注意了，不能乱填不然会影响读取。\n\n先在 docker 文件夹下创建一个 amilys-emby 文件夹，再在此文件夹下创建一个 config 子文件夹，然后根据图内显示，选择这个文件夹，装载路径默认为/config ，类型改为读写。\n\n下面是你放影视资源的位置，装载路径就是 /hdd1 （你自身几个硬盘放了影视资料就加几个以此类推 /hdd2 /hdd3）。\n\n\n\n5）接下来我们来到端口设置里面，因为我们前面写的是 host，所以这个的本地端口是无法修改的，按默认的即可。\n\n\n\n6）这里我们跳过链接来到环境一栏，添加 tz="asia/shanghai"（这个是时区）。\n\n\n\n7）点击下一步，然后点完成，可以勾选上【创建后重启容器】。\n\n\n\n这样一个 emby 就搭建完成了。\n\n\n# 2、初始化\n\n通过 emby 前期搭建、emby 参数配置，emby 的部署工作已经完成了，接下来是初始化，里面涉及到大量的个性化设置，请大家按照自己需求修改即可，如果不明白什么意思那么就和我选择同样的即可。\n\n1、打开浏览器，地址栏中输入绿联 ip:8096,下拉列表选择中文，然后点击 next。\n\n\n\n2、配置用户名和密码，点击下一步。\n\n> 在这个页面点击一下刷新才可使之前的设置生效，变为中文，我懒得刷新了。\n\n\n\n3、设置媒体库这里因为设置选项过多，我们稍后配置，点击下一个。\n\n\n\n4、首选元数据语言和国家按照自己需求选择，这里我选择简体中文和中国。\n\n\n\n5、配置远程访问这里是否勾选无影响直接选择下一个。\n\n\n\n6、接受 emby 条款，然后继续点击下一个。\n\n\n\n7、初始化步骤结束点击完成。\n\n\n\n8、点击手动登录并输入刚刚设置的账号密码来登录刚刚创建的账户。\n\n\n\n\n\n9、进入了首页\n\n\n\n\n# 3、设置\n\n登录 emby,点击右上角的小齿轮图标进入 emby 设置页面。\n\n\n\n\n# 1、转码\n\n点击转码，在启动硬件加速中选择高级，将下列的解码器全部选择 quicksnyc，关闭所有的 vaapi，然后记得翻到下面点击保存。\n\n\n\n\n# 2、添加媒体库\n\n关于媒体库的添加这里我主要演示一下电影的添加，关于剧集之类的因为命名比较影响信息的搜刮效果。 此步骤设置为 bt 和个人资源的信息搜刮，正在做种的资源不要按照这种方式配置容易影响做种。\n\n1、点击媒体库，点击新增媒体库\n\n\n\n2、这里因为我都是通过其它工具刮好的媒体，所以一些 emby 刮削的选项没有设置了，填写完点击确定。\n\n\n\n首次添加需要时间才能刮削完毕，请耐心等待。\n\n\n# 4、插件\n\n1）第三方插件安装\n\n1、将下载好的后缀为 dll 的插件放到文件夹/docker/emby/plugins 中即可，然后重启 emby 服务器。\n\n\n\n2、在 emby 插件选项中配置插件即可。\n\n\n\n2）字幕插件\n\n字幕插件：https://github.com/91270/meiamsubtitles。\n\n\n# 5、其它\n\n\n# 1）emby 客户端\n\nemby 支持全平台客户端，可在官网直接下载官方软件，也可下载其他版本的。\n\n\n# 2）webhooks\n\n点击通知-添加通知，选择 webhooks\n\n\n\n设置 webhooks 名称，填写 url 后可以点击发送测试通知查看 url 是否填写正确。然后勾选想发送通知的事件。填写完成后点击添加通知。\n\n\n\n设置完成。\n\n\n\n\n# 6、命名规范\n\n\n# 1）电影的命名\n\n标准命名规范：影片名.年份.分辨率.视频编码.音频编码\n\n例：\n\n * 变形金刚 3.2011.1080p.avc.truehd7.1.mkv\n * transformers dark of the moon.2011.1080p.avc.truehd7.1.mkv\n * 变形金刚 3.transformers dark of the moon.2011.1080p.avc.truehd7.1.mkv\n\n但其实不需要那么多后缀，中文名.年份，就够了（那么多后缀你看着烦不烦，要是有的你多的东西命名又不规范还会影响你海报识别，真心没必要），例如：【变形金刚 3.2011】。\n\n要是系列电影有小标题的，中文名中间是用冒号分开，例如【007：八爪女.1983】。\n\n真想要保留分辨率，视频编码，音频编码，中间也是用英文状态的【.】 隔开，例如【007：八爪女.1983.blu-ray.1080p】。\n\n\n# 2）电视剧的命名\n\n标准命名规范：影片名.季+剧集.年份.分辨率.视频编码.音频编码\n\n例：\n\n * 萨布丽娜的惊心冒险.s01e01.2018.1080p.x264.dd5.1.mp4\n * chilling adventures of sabrina.s01e01.2018.1080p.x264.dd5.1.mp4\n * 萨布丽娜的惊心冒险.chilling.adventures.of.sabrina.s01e01.2018.1080p.x264.dd5.1.mp4\n\n要是有的剧，每一集有小标题的话，用括号括在里面，目的是为了防止造成海报识别干扰，而不是要利用小标题，例如：【 超智能足球 2.s02e02（奥尼外传 不敌.心魔）】\n\n\n# 3）动漫剧的命名\n\n不管动漫是否只有一季，一定要创建一个“season 1”的文件夹，不然刮削的时候不能搜到每一集的介绍。而特别篇是建一个文件夹（season 0，season 00，specials）来存放的。\n\n比如我们动漫一人之下：\n\n',charsets:{cjk:!0}},{title:"归档",frontmatter:{archivesPage:!0,title:"归档",permalink:"/archives/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-70767908",path:"/archives/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"linux常用命令",frontmatter:{title:"linux常用命令",date:"2025-01-03T11:37:08.000Z",permalink:"/other/linux",categories:["其它"],tags:[null]},regularPath:"/04.%E5%85%B6%E5%AE%83/05.Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",relativePath:"04.其它/05.Linux常用命令.md",key:"v-4a760958",path:"/other/linux/",headers:[{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:2},{level:3,title:"切换root",slug:"切换root",normalizedTitle:"切换root",charIndex:11},{level:3,title:"退出 ssh",slug:"退出-ssh",normalizedTitle:"退出 ssh",charIndex:51},{level:3,title:"查看主机信息 hostnamectl",slug:"查看主机信息-hostnamectl",normalizedTitle:"查看主机信息 hostnamectl",charIndex:77},{level:2,title:"目录及文件",slug:"目录及文件",normalizedTitle:"目录及文件",charIndex:213},{level:3,title:"pwd--显示用户当前所处的工作目录",slug:"pwd-显示用户当前所处的工作目录",normalizedTitle:"pwd--显示用户当前所处的工作目录",charIndex:223},{level:3,title:"cd--命令用于切换当前工作路径",slug:"cd-命令用于切换当前工作路径",normalizedTitle:"cd--命令用于切换当前工作路径",charIndex:279},{level:3,title:"ls--显示目录与文件信息",slug:"ls-显示目录与文件信息",normalizedTitle:"ls--显示目录与文件信息",charIndex:365},{level:3,title:"mkdir--创建目录",slug:"mkdir-创建目录",normalizedTitle:"mkdir--创建目录",charIndex:1105},{level:3,title:"cp--复制文件与目录",slug:"cp-复制文件与目录",normalizedTitle:"cp--复制文件与目录",charIndex:1160},{level:3,title:"rm--删除文件或目录",slug:"rm-删除文件或目录",normalizedTitle:"rm--删除文件或目录",charIndex:1247},{level:3,title:"find--搜索文件或目录",slug:"find-搜索文件或目录",normalizedTitle:"find--搜索文件或目录",charIndex:1350},{level:3,title:"du--计算文件或者目录的容量",slug:"du-计算文件或者目录的容量",normalizedTitle:"du--计算文件或者目录的容量",charIndex:1564},{level:3,title:"改变文件或目录的权限chmod",slug:"改变文件或目录的权限chmod",normalizedTitle:"改变文件或目录的权限chmod",charIndex:1753},{level:2,title:"查看文件内容",slug:"查看文件内容",normalizedTitle:"查看文件内容",charIndex:2318},{level:3,title:"cat--查看文件里的内容",slug:"cat-查看文件里的内容",normalizedTitle:"cat--查看文件里的内容",charIndex:2329},{level:3,title:"more--查看文件里的内容",slug:"more-查看文件里的内容",normalizedTitle:"more--查看文件里的内容",charIndex:2405},{level:3,title:"less--分页查看文件内容",slug:"less-分页查看文件内容",normalizedTitle:"less--分页查看文件内容",charIndex:2628},{level:3,title:"head--显示文件头部内容",slug:"head-显示文件头部内容",normalizedTitle:"head--显示文件头部内容",charIndex:2680},{level:3,title:"tail--显示文件尾部内容",slug:"tail-显示文件尾部内容",normalizedTitle:"tail--显示文件尾部内容",charIndex:2765},{level:3,title:"grep--查找",slug:"grep-查找",normalizedTitle:"grep--查找",charIndex:2888},{level:3,title:"查看文件md5",slug:"查看文件md5",normalizedTitle:"查看文件md5",charIndex:3021},{level:2,title:"apt 相关",slug:"apt-相关",normalizedTitle:"apt 相关",charIndex:3191},{level:2,title:"bpytop--终端资源监视器",slug:"bpytop-终端资源监视器",normalizedTitle:"bpytop--终端资源监视器",charIndex:3773}],headersStr:"常用命令 切换root 退出 ssh 查看主机信息 hostnamectl 目录及文件 pwd--显示用户当前所处的工作目录 cd--命令用于切换当前工作路径 ls--显示目录与文件信息 mkdir--创建目录 cp--复制文件与目录 rm--删除文件或目录 find--搜索文件或目录 du--计算文件或者目录的容量 改变文件或目录的权限chmod 查看文件内容 cat--查看文件里的内容 more--查看文件里的内容 less--分页查看文件内容 head--显示文件头部内容 tail--显示文件尾部内容 grep--查找 查看文件md5 apt 相关 bpytop--终端资源监视器",content:"# 常用命令\n\n\n# 切换root\n\nsudo su : 用于切换到超级用户（root）权限\n\n\n# 退出 ssh\n\n输入 exit 然后按回车\n\n\n# 查看主机信息 hostnamectl\n\nhostnamectl  是一个 Linux 命令，通常用于管理系统的主机名和相关的系统信息。\n\n\n\n修改主机名：通过  hostnamectl set-hostname xxx  命令，您可以更改系统的主机名为 XXX。\n\n\n# 目录及文件\n\n\n# pwd--显示用户当前所处的工作目录\n\n用法：pwd [选项]... 选项：-P 显示链接的真实路径。\n\n\n# cd--命令用于切换当前工作路径\n\n用法：\n\n * cd .. 切换路径至当前目录的上一级\n * cd - 返回前一个路径\n * cd 切换目录至当前用户的家目录\n\n\n# ls--显示目录与文件信息\n\n用法：ls [选项]... [文件/目录] 选项： -a 显示所有，包括隐藏文件与目录。 -d 显示目录本身的信息，而非目录内的文件。 -h 人性化显示容量信息。 -l 长格式列出文档详细信息。包括权限设置和文件属性。 -i 显示每个文件的 inode 号。 -S 根据文件大小排序 -u 显示文件或目录最后被访问的时间。\n\n示例：\n\nls -l /volume3/docker/cow/godcmd.py\n\n\n\n1\n2\n\n\n输出结果可能类似于以下格式：-rwxrwxrw-+ 1 syue admin 378 May 23 10:34 /volume3/docker/cow/godcmd.py\n\n * -rwxrwxrw-+: 表示文件权限，其中第一个字符 - 表示这是一个常规文件，后续的权限位分为三组，每组三个字符，分别代表文件所有者、文件所属组和其他用户的权限。其中：\n   * rwx：文件所有者 (syue) 具有读、写和执行权限。\n   * rwx：文件所属组 (admin) 具有读、写和执行权限。\n   * rw-：其他用户也具有读和写权限\n * 1: 表示链接数，通常是指向该文件的硬链接数。\n * syue: 文件所有者是用户 syue。\n * admin: 文件所属组是 admin。\n * 378: 表示文件大小（以字节为单位）。\n * May 23 10:34: 表示文件的最后修改日期和时间。\n * /volume3/docker/cow/godcmd.py: 是文件的完整路径。\n\n通过这个命令的输出，您可以查看文件 openai_voice.py 的权限设置，所有者、所属组、大小以及最后修改时间等信息。\n\n\n# mkdir--创建目录\n\n用法：mkdir [选项]...[目录]... 选项：-p 创建多级目录。\n\n\n# cp--复制文件与目录\n\n用法：cp [选项] 源 目标 选项： -r 递归复制目录及其子目录内的所有目录。 -a 复制时保留源文档的所有属性（包括权限、时间等）。\n\n\n# rm--删除文件或目录\n\n删除文件时可以不加选项，删除目录时必须加选项 -r\n\n用法：rm [选项]...文件... 选项： -f 不提示，强制删除。 -r 递归删除，删除目录及目录下的所有内容。\n\n\n# find--搜索文件或目录\n\n用法：find [命令选项] [路径] [表达式选项] 选项： -name 按文档名称查找 -iname 按文档名查找，且不区分大小写 -mtime 按修改时间查找 -group 按组查找 -user 按用户查找 -size 按容量大小查找 -type 按文档类型查找，文件（f）、目录（d）、设备（b，c），链接（l）等。 -exec 对找到的文档执行特定的命令 -a 并且 -o 或者\n\n\n# du--计算文件或者目录的容量\n\n用法：du [选项]...[文件或目录]... 选项： -h 人性化显示容量信息 -s 仅显示总容量\n\n示例：du ./ -h --max-depth=1\n\n * du显示文件或目录磁盘占用的命令\n * ./当前目录\n * -h 已易读的方式显示\n * --max-depth=1显示参数（文件或目录的占用限制输出到目录的一级子目录）\n\n\n# 改变文件或目录的权限chmod\n\n# 符号模式\n\n在符号模式下，可以使用 chmod 命令按以下格式添加权限：\n\nchmod [类别][操作][权限] 文件名\n\n * 类别：u（用户User）、g（组Group）、o（其他Others）、a（所有All）\n * 操作：+（添加）、-（移除）、=（设置）\n * 权限：r（读Read）、w（写Write）、x（执行Execute）\n\n示例\n\n给所有用户添加读权限：chmod a+r filename\n\n# 八进制模式\n\n在八进制模式下，可以使用 chmod 命令按以下格式添加权限：\n\nchmod [权限] 文件名\n\n权限：由三个数字组成，每个数字代表不同用户类别的权限（用户、组、其他）。\n\n权限的八进制表示法\n\n八进制表示法中的每个数字表示一个用户类别的权限，具体如下：\n\n * 4：读（read）\n * 2：写（write）\n * 1：执行（execute）\n\n这些值可以相加，以表示组合权限：\n\n * 7（4 + 2 + 1）：读、写和执行\n * 6（4 + 2）：读和写\n * 5（4 + 1）：读和执行\n * 3（2 + 1）：写和执行\n\n示例\n\nchmod 755 filename：文件所有者有读、写和执行权限（7），所属组和其他用户有读和执行权限（5）\n\n\n# 查看文件内容\n\n\n# cat--查看文件里的内容\n\n用法：cat [选项]...[文件]... 选项： -n 显示行号，包括空白行 -b 显示行号，空白行不显示行号\n\n\n# more--查看文件里的内容\n\nmore 命令和 cat 的功能一样都是查看文件里的内容，但有所不同的是 more 可以按页来查看文件的内容，还支持直接跳转行等功能。\n\nEnter键：向下n行，需要定义。默认为1行\n\n空格键：向下滚动一屏\n\nCtrl+B：返回上一屏\n\n= 输出当前行的行号\n\nV 调用vi编辑器\n\n!命令 调用Shell，并执行命令\n\nq 退出more\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# less--分页查看文件内容\n\n操作： 空格（下一页） 方向键（上下回翻） q 键（退出查看）\n\n\n# head--显示文件头部内容\n\n用法：head [选项]...[文件]... 选项： -c nK 显示文件前 nKB 的内容。 -n 显示文件前 n 行的内容。\n\n\n# tail--显示文件尾部内容\n\n用法：tail [选项]...[文件]... 选项： -c nK 显示文件末尾 nKB 的内容。 -n 显示文件末尾 n 行的内容。 -f 动态显示文件内容，常用于查看日志，按 Ctrl+C 组合键退出。\n\n\n# grep--查找\n\n用法：grep [选项] 匹配模式 [文件]... 常用选项： -i 忽略大小写。 -v 取反匹配\n\n示例： [root@qll ~]# grep root /etc/passwd #在 passwd 文件中过滤出包含 root 的行。\n\n\n# 查看文件md5\n\n用法：md5sum <filename>\n\n这里的 filename 是你想要计算 MD5 校验和的文件的名称。例如：\n\nmd5sum example.txt\n\n处理文件名中的特殊字符：如果文件名包含空格或特殊字符，你可能需要将文件名用单引号或双引号括起来。例如：\n\nmd5sum '散就散了 - 庆庆.mp3'\n\n\n# apt 相关\n\napt 命令执行需要超级管理员权限(root)。\n\n * 列出所有可更新的软件清单命令：apt update\n * 升级软件包：apt upgrade\n * 列出可更新的软件包及版本信息：apt list --upgradeable\n * 升级软件包，升级前先删除需要更新软件包：apt full-upgrade\n * 安装指定的软件命令：apt install <package_name>\n * 安装多个软件包：apt install <package_1> <package_2> <package_3>\n * 更新指定的软件命令：apt update <package_name>\n * 显示软件包具体信息,例如：版本号，安装大小，依赖关系等等：apt show <package_name>\n * 删除软件包命令：apt remove <package_name>\n * 清理不再使用的依赖和库文件: apt autoremove\n * 移除软件包及配置文件: apt purge <package_name>\n * 查找软件包命令： apt search <keyword>\n * 列出所有已安装的包：apt list --installed\n * 列出所有已安装的包的版本信息：apt list --all-versions\n\n\n# bpytop--终端资源监视器\n\n * 安装：sudo apt install bpytop\n\n * 使用：在终端中输入  bpytop  回车，即可打开 bpytop 工具\n\n * 退出：按键盘上的  q  键，将关闭 bpytop 工具并返回到终端提示符\n\n * 效果：\n   \n   ",normalizedContent:"# 常用命令\n\n\n# 切换root\n\nsudo su : 用于切换到超级用户（root）权限\n\n\n# 退出 ssh\n\n输入 exit 然后按回车\n\n\n# 查看主机信息 hostnamectl\n\nhostnamectl  是一个 linux 命令，通常用于管理系统的主机名和相关的系统信息。\n\n\n\n修改主机名：通过  hostnamectl set-hostname xxx  命令，您可以更改系统的主机名为 xxx。\n\n\n# 目录及文件\n\n\n# pwd--显示用户当前所处的工作目录\n\n用法：pwd [选项]... 选项：-p 显示链接的真实路径。\n\n\n# cd--命令用于切换当前工作路径\n\n用法：\n\n * cd .. 切换路径至当前目录的上一级\n * cd - 返回前一个路径\n * cd 切换目录至当前用户的家目录\n\n\n# ls--显示目录与文件信息\n\n用法：ls [选项]... [文件/目录] 选项： -a 显示所有，包括隐藏文件与目录。 -d 显示目录本身的信息，而非目录内的文件。 -h 人性化显示容量信息。 -l 长格式列出文档详细信息。包括权限设置和文件属性。 -i 显示每个文件的 inode 号。 -s 根据文件大小排序 -u 显示文件或目录最后被访问的时间。\n\n示例：\n\nls -l /volume3/docker/cow/godcmd.py\n\n\n\n1\n2\n\n\n输出结果可能类似于以下格式：-rwxrwxrw-+ 1 syue admin 378 may 23 10:34 /volume3/docker/cow/godcmd.py\n\n * -rwxrwxrw-+: 表示文件权限，其中第一个字符 - 表示这是一个常规文件，后续的权限位分为三组，每组三个字符，分别代表文件所有者、文件所属组和其他用户的权限。其中：\n   * rwx：文件所有者 (syue) 具有读、写和执行权限。\n   * rwx：文件所属组 (admin) 具有读、写和执行权限。\n   * rw-：其他用户也具有读和写权限\n * 1: 表示链接数，通常是指向该文件的硬链接数。\n * syue: 文件所有者是用户 syue。\n * admin: 文件所属组是 admin。\n * 378: 表示文件大小（以字节为单位）。\n * may 23 10:34: 表示文件的最后修改日期和时间。\n * /volume3/docker/cow/godcmd.py: 是文件的完整路径。\n\n通过这个命令的输出，您可以查看文件 openai_voice.py 的权限设置，所有者、所属组、大小以及最后修改时间等信息。\n\n\n# mkdir--创建目录\n\n用法：mkdir [选项]...[目录]... 选项：-p 创建多级目录。\n\n\n# cp--复制文件与目录\n\n用法：cp [选项] 源 目标 选项： -r 递归复制目录及其子目录内的所有目录。 -a 复制时保留源文档的所有属性（包括权限、时间等）。\n\n\n# rm--删除文件或目录\n\n删除文件时可以不加选项，删除目录时必须加选项 -r\n\n用法：rm [选项]...文件... 选项： -f 不提示，强制删除。 -r 递归删除，删除目录及目录下的所有内容。\n\n\n# find--搜索文件或目录\n\n用法：find [命令选项] [路径] [表达式选项] 选项： -name 按文档名称查找 -iname 按文档名查找，且不区分大小写 -mtime 按修改时间查找 -group 按组查找 -user 按用户查找 -size 按容量大小查找 -type 按文档类型查找，文件（f）、目录（d）、设备（b，c），链接（l）等。 -exec 对找到的文档执行特定的命令 -a 并且 -o 或者\n\n\n# du--计算文件或者目录的容量\n\n用法：du [选项]...[文件或目录]... 选项： -h 人性化显示容量信息 -s 仅显示总容量\n\n示例：du ./ -h --max-depth=1\n\n * du显示文件或目录磁盘占用的命令\n * ./当前目录\n * -h 已易读的方式显示\n * --max-depth=1显示参数（文件或目录的占用限制输出到目录的一级子目录）\n\n\n# 改变文件或目录的权限chmod\n\n# 符号模式\n\n在符号模式下，可以使用 chmod 命令按以下格式添加权限：\n\nchmod [类别][操作][权限] 文件名\n\n * 类别：u（用户user）、g（组group）、o（其他others）、a（所有all）\n * 操作：+（添加）、-（移除）、=（设置）\n * 权限：r（读read）、w（写write）、x（执行execute）\n\n示例\n\n给所有用户添加读权限：chmod a+r filename\n\n# 八进制模式\n\n在八进制模式下，可以使用 chmod 命令按以下格式添加权限：\n\nchmod [权限] 文件名\n\n权限：由三个数字组成，每个数字代表不同用户类别的权限（用户、组、其他）。\n\n权限的八进制表示法\n\n八进制表示法中的每个数字表示一个用户类别的权限，具体如下：\n\n * 4：读（read）\n * 2：写（write）\n * 1：执行（execute）\n\n这些值可以相加，以表示组合权限：\n\n * 7（4 + 2 + 1）：读、写和执行\n * 6（4 + 2）：读和写\n * 5（4 + 1）：读和执行\n * 3（2 + 1）：写和执行\n\n示例\n\nchmod 755 filename：文件所有者有读、写和执行权限（7），所属组和其他用户有读和执行权限（5）\n\n\n# 查看文件内容\n\n\n# cat--查看文件里的内容\n\n用法：cat [选项]...[文件]... 选项： -n 显示行号，包括空白行 -b 显示行号，空白行不显示行号\n\n\n# more--查看文件里的内容\n\nmore 命令和 cat 的功能一样都是查看文件里的内容，但有所不同的是 more 可以按页来查看文件的内容，还支持直接跳转行等功能。\n\nenter键：向下n行，需要定义。默认为1行\n\n空格键：向下滚动一屏\n\nctrl+b：返回上一屏\n\n= 输出当前行的行号\n\nv 调用vi编辑器\n\n!命令 调用shell，并执行命令\n\nq 退出more\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# less--分页查看文件内容\n\n操作： 空格（下一页） 方向键（上下回翻） q 键（退出查看）\n\n\n# head--显示文件头部内容\n\n用法：head [选项]...[文件]... 选项： -c nk 显示文件前 nkb 的内容。 -n 显示文件前 n 行的内容。\n\n\n# tail--显示文件尾部内容\n\n用法：tail [选项]...[文件]... 选项： -c nk 显示文件末尾 nkb 的内容。 -n 显示文件末尾 n 行的内容。 -f 动态显示文件内容，常用于查看日志，按 ctrl+c 组合键退出。\n\n\n# grep--查找\n\n用法：grep [选项] 匹配模式 [文件]... 常用选项： -i 忽略大小写。 -v 取反匹配\n\n示例： [root@qll ~]# grep root /etc/passwd #在 passwd 文件中过滤出包含 root 的行。\n\n\n# 查看文件md5\n\n用法：md5sum <filename>\n\n这里的 filename 是你想要计算 md5 校验和的文件的名称。例如：\n\nmd5sum example.txt\n\n处理文件名中的特殊字符：如果文件名包含空格或特殊字符，你可能需要将文件名用单引号或双引号括起来。例如：\n\nmd5sum '散就散了 - 庆庆.mp3'\n\n\n# apt 相关\n\napt 命令执行需要超级管理员权限(root)。\n\n * 列出所有可更新的软件清单命令：apt update\n * 升级软件包：apt upgrade\n * 列出可更新的软件包及版本信息：apt list --upgradeable\n * 升级软件包，升级前先删除需要更新软件包：apt full-upgrade\n * 安装指定的软件命令：apt install <package_name>\n * 安装多个软件包：apt install <package_1> <package_2> <package_3>\n * 更新指定的软件命令：apt update <package_name>\n * 显示软件包具体信息,例如：版本号，安装大小，依赖关系等等：apt show <package_name>\n * 删除软件包命令：apt remove <package_name>\n * 清理不再使用的依赖和库文件: apt autoremove\n * 移除软件包及配置文件: apt purge <package_name>\n * 查找软件包命令： apt search <keyword>\n * 列出所有已安装的包：apt list --installed\n * 列出所有已安装的包的版本信息：apt list --all-versions\n\n\n# bpytop--终端资源监视器\n\n * 安装：sudo apt install bpytop\n\n * 使用：在终端中输入  bpytop  回车，即可打开 bpytop 工具\n\n * 退出：按键盘上的  q  键，将关闭 bpytop 工具并返回到终端提示符\n\n * 效果：\n   \n   ",charsets:{cjk:!0}}],themeConfig:{logo:"/img/syue.png",nav:[{text:"主页",link:"/"},{text:"娱乐",link:"/fun/emby/"},{text:"工具",link:"/tool/qBittorrent/"},{text:"网络",link:"/network/ddnsto/"},{text:"其它",link:"/other/tmdb_api/"}],sidebarDepth:2,searchMaxSuggestions:5,lastUpdated:"上次更新",notFound:["出错啦！"],backToHome:"返回首页",docsDir:"docs",docsBranch:"main",editLinks:!0,editLinkText:"帮助我们改善此页面！",sidebar:{"/01.娱乐/":[{title:"影视",collapsable:!1,children:[["01.影视/01.iptv.md","iptv","/pages/6222e7/"],["01.影视/05.kodi.md","kodi","/fun/kodi/"],["01.影视/06.emby.md","emby","/fun/emby/"],["01.影视/07.Jellyfin.md","jellyfin","/fun/jellyfin/"]]},{title:"音乐",collapsable:!1,children:[["02.音乐/01.Navidrome .md","navidrome","/fun/navidrome/"],["02.音乐/02.musictag.md","music_tag_web 音乐标签编辑器","/fun/musictag/"]]},{title:"有声书",collapsable:!1,children:[["03.有声书/01.audiobookshelf.md","audiobookshelf","/fun/audiobookshelf/"]]},{title:"电子书",collapsable:!1,children:[["04.电子书/01.TaleBook.md","TaleBook","/fun/TaleBook/"],["04.电子书/02.reader.md","reader小说阅读","/fun/reader/"]]}],catalogue:{},"/02.工具/":[{title:"影视自动化工具",collapsable:!1,children:[["01.影视自动化工具/01.qBittorrent.md","qBittorrent","/tool/qBittorrent/"],["01.影视自动化工具/02.transmission.md","transmission","/tool/transmission/"],["01.影视自动化工具/03.nastool.md","Nastool","/tool/nastool/"],["01.影视自动化工具/04.moviepilot.md","moviepilot","/tool/moviepilot/"],["01.影视自动化工具/05.chinesesubfinder.md","chinesesubfinder","/tool/chinesesubfinder/"],["01.影视自动化工具/06.IYUU.md","IYUU转种辅种","/tool/iyuu/"],["01.影视自动化工具/07.Wizarr.md","Wizarr影视库自动开号","/tool/wizarr/"],["01.影视自动化工具/08.MediaServerTools.md","MediaServerTools媒体中文自动同步","/tool/mediaservertools/"]]},{title:"下载",collapsable:!1,children:[["02.下载/01.alist.md","alist","/tool/alist/"],["02.下载/02.aira2+ariang下载.md","aira2+ariang下载","/tool/aira2/"],["02.下载/03.阿里云订阅.md","阿里云订阅","/tool/aliyundrive/"],["02.下载/04.clouddrive2.md","clouddrive2云盘挂载","/tool/clouddrive2/"],["02.下载/05.小雅alist.md","小雅alist","/tool/xiaoya/"]]},{title:"签到",collapsable:!1,children:[["03.签到/01.青龙面板.md","青龙面板","/tool/qinglong/"],["03.签到/02.qiandao框架.md","qiandao框架","/tool/qiandao/"]]},{title:"导航",collapsable:!1,children:[["04.导航/01.homepage.md","homepage导航页","/tool/homepage/"],["04.导航/02.heimdall.md","heimdall导航页","/tool/heimdall/"],["04.导航/03.navnetic.md","navnetic导航页","/tool/navnetic/"]]},{title:"笔记",collapsable:!1,children:[["05.笔记/01.思源笔记.md","思源笔记","/tool/siyuan/"],["05.笔记/02.为知笔记.md","为知笔记","/tool/wiznote/"],["05.笔记/03.typecho个人博客.md","typecho个人博客","/tool/typecho/"]]},{title:"其它工具",collapsable:!1,children:[["10.其它工具/01.pandora.md","pandora","/tool/pandora/"],["10.其它工具/02.vaultwarden密码管理器.md","vaultwarden密码管理器","/tool/vaultwarden/"],["10.其它工具/03.hass.md","hass","/tool/hass/"],["10.其它工具/04.dc容器更新.md","dc容器一键更新","/tool/dc/"],["10.其它工具/05.宝塔.md","宝塔","/tool/baota/"],["10.其它工具/06.微力同步.md","微力同步","/tool/verysync/"],["10.其它工具/07.图床.md","easyimage图床","/tool/easyimage/"],["10.其它工具/08.webssh.md","webssh","/tool/webssh/"]]}],"/03.网络/":[["01.ddnsto.md","DDNS-TO","/network/ddnsto/"],["02.ddnsgo.md","DDNS-GO","/network/ddnsgo/"],["03.npm.md","NPM","/network/npm/"],["04.lucky.md","lucky","/network/lucky/"],["05.sakurafrp.md","SakuraFrp","/network/sakurafrp/"]],"/04.其它/":[["01.TMDB API申请.md","TMDB API 申请","/other/tmdb_api/"],["02.微信机器人.md","微信机器人","/other/bot"],["03.4600刷黑群不入门教程.md","4600刷黑裙不入门","/other/synology"],["04.其他compose.md","其他compose","/other/compose"],["05.Linux常用命令.md","linux常用命令","/other/linux"]]},category:!0,tag:!0,author:{name:"夏夏子",href:""},footer:{createYear:2023,copyrightInfo:"myblog | MIT License"}}};var cl=t(96),dl=t(97),ul=t(11);var pl={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:o}}=n;return!(e||!1===t||!0===o)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,o=e.frontmatter.sticky;return t&&o?t==o?Object(ul.a)(n,e):t-o:t&&!o?-1:!t&&o?1:Object(ul.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(ul.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let o=0,r=n.length;o<r;o++){const{frontmatter:{categories:r,tags:i}}=n[o];"array"===Object(ul.n)(r)&&r.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[o]))}),"array"===Object(ul.n)(i)&&i.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[o]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Kt.component(cl.default),Kt.component(dl.default);function hl(n){return n.toString().padStart(2,"0")}t(245);Kt.component("Badge",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,1413))),Kt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,96))),Kt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,97)));t(246),t(247);var ml=t(95),fl=t.n(ml),gl=t(26);let vl,yl;var bl;"valine"===(bl="valine")?t.e(92).then(t.t.bind(null,1405,7)).then(n=>yl=n.default):"gitalk"===bl&&Promise.all([t.e(0),t.e(91)]).then(t.t.bind(null,1406,7)).then(()=>t.e(90).then(t.t.bind(null,1407,7))).then(n=>vl=n.default);function kl(n,e){const t={};return Reflect.ownKeys(n).forEach(o=>{if("string"==typeof n[o])try{t[o]=fl.a.render(n[o],e)}catch(e){console.warn(`Comment config option error at key named "${o}"`),console.warn("More info: "+e.message),t[o]=n[o]}else t[o]=n[o]}),t}console.log(`How to use "valine" in ${gl.name}@v${gl.version}:`,gl.homepage);const wl={gitalk:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t);new vl(kl({el:"#valine-vuepress-comment",appId:"aQjGpWecvvg4dhtuFvbPNUM1-gzGzoHsz",appKey:"8qergMZ9vsdvAXwiJhrpWUBp",path:"<%- frontmatter.commentid || frontmatter.permalink %>"},{frontmatter:n})).render(e)},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}},valine:{render(n,e){const t=document.createElement("div");t.id=e;document.querySelector("main.page").appendChild(t),new yl({...kl({el:"#valine-vuepress-comment",appId:"aQjGpWecvvg4dhtuFvbPNUM1-gzGzoHsz",appKey:"8qergMZ9vsdvAXwiJhrpWUBp",path:"<%- frontmatter.commentid || frontmatter.permalink %>"},{frontmatter:n}),el:"#"+e})},clear(n){const e=document.querySelector("#"+n);return e&&e.remove(),!0}}};let _l=null;function xl(n){{let n="#valine-vuepress-comment";return n.startsWith("#")&&(n=n.slice(1)),console.log(n),wl.valine.clear(n)}}function Tl(n){return!1!==n.comment&&!1!==n.comments}function Al(n){clearTimeout(_l);if(document.querySelector("main.page")){let e="#valine-vuepress-comment";return e.startsWith("#")&&(e=e.slice(1)),wl.valine.render(n,e)}_l=setTimeout(()=>Al(n),200)}var El={mounted(){_l=setTimeout(()=>{const n={to:{},from:{},...this.$frontmatter};xl()&&Tl(n)&&Al(n)},1e3),this.$router.afterEach((n,e)=>{if(n&&e&&n.path===e.path)return;const t={to:n,from:e,...this.$frontmatter};xl()&&Tl(t)&&Al(t)})}},Il=Object(il.a)(El,(function(){return(0,this._self._c)("div")}),[],!1,null,null,null).exports,Sl=[({Vue:n,options:e,router:t,siteData:o})=>{o.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${hl(n.getUTCMonth()+1)}-${hl(n.getUTCDate())} ${hl(n.getUTCHours())}:${hl(n.getUTCMinutes())}:${hl(n.getUTCSeconds())}`}(e)),t?n.author=t:o.themeConfig.author&&(n.author=o.themeConfig.author)}),n.mixin(pl)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({Vue:n})=>{n.component("Comment",Il)}],Pl=["Comment"];class Cl extends class{constructor(){this.store=new Kt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Kt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(Cl.prototype,{getPageAsyncComponent:as,getLayoutAsyncComponent:ss,getAsyncComponent:ls,getVueComponent:cs});var zl={install(n){const e=new Cl;n.$vuepress=e,n.prototype.$vuepress=e}};function Dl(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Ol={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return us("pageKey",e),Kt.component(e)||Kt.component(e,as(e)),Kt.component(e)?n(e):n("")}},jl={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Bl={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Ll=(t(253),t(254),Object(il.a)(Bl,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Rl={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Kt.config.productionTip=!1,Kt.use(Ga),Kt.use(zl),Kt.mixin(function(n,e,t=Kt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const o=new(n(t.$vuepress.$get("siteData"))),r=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),i={};return Object.keys(r).reduce((n,e)=>(e.startsWith("$")&&(n[e]=r[e].get),n),i),{computed:i}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const o in n)"/"===o?t=n[o]:0===this.$page.path.indexOf(o)&&(e=n[o]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,o=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?o?o+" | "+t:t:o||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const o=n[t];if(o.path.toLowerCase()===e.toLowerCase())return o}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},ll)),Kt.component("Content",Ol),Kt.component("ContentSlotsDistributor",jl),Kt.component("OutboundLink",Ll),Kt.component("ClientOnly",Rl),Kt.component("Layout",ss("Layout")),Kt.component("NotFound",ss("NotFound")),Kt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.10",hash:""},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:ll.routerBase||ll.base,t=new Ga({base:e,mode:"history",fallback:!1,routes:sl,scrollBehavior:(n,e,t)=>t||(n.hash?!Kt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,o)=>{if(Dl(n,e.path))o();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";Dl(n,t)?o(t):o()}else o();else{const t=e.path+"/",r=e.path+".html";Dl(n,r)?o(r):Dl(n,t)?o(t):o()}})}(t);const o={};try{await Promise.all(Sl.filter(n=>"function"==typeof n).map(e=>e({Vue:Kt,options:o,router:t,siteData:ll,isServer:n})))}catch(n){console.error(n)}return{app:new Kt(Object.assign(o,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Pl.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);